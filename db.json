{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/archer/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/algolia_logo.svg","path":"assets/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/favicon.ico","path":"assets/favicon.ico","modified":1,"renderable":1},{"_id":"themes/archer/source/assets/loading.svg","path":"assets/loading.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/logo-36.png","path":"assets/logo-36.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/logo-48.png","path":"assets/logo-48.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/logo-64.png","path":"assets/logo-64.png","modified":0,"renderable":1},{"_id":"themes/archer/source/css/mobile.css","path":"css/mobile.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff","path":"font/Source Sans Pro.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","path":"font/Source Sans Pro.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/webfontloader.min.js","path":"lib/webfontloader.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js","path":"scripts/main.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js","path":"scripts/search.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/share.js","path":"scripts/share.js","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","path":"font/Oswald-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","path":"font/SourceCodePro-Regular.ttf.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","path":"font/SourceCodePro-Regular.ttf.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/donate.jpg","path":"assets/donate.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"2a4646959294115c76b9310b5394cbc250a42939","modified":1578058198844},{"_id":"source/404.md","hash":"577791aa24ecec4b33d17acca505d4e0849bfc02","modified":1539607274000},{"_id":"source/CNAME","hash":"e745edfbfa1830bc865594c6eb5b9b8846dee96e","modified":1539583617000},{"_id":"source/manifest.json","hash":"e138a5a80fcfe5365b8442a2c2eb27e0c76a26f7","modified":1545643780000},{"_id":"themes/archer/.DS_Store","hash":"8dfe778dd28f809d0dd1ef3d819425a2d60cb944","modified":1539687613000},{"_id":"themes/archer/LICENSE","hash":"0da0c361bf299375739c6b668a44af0f5faf37bb","modified":1531017026000},{"_id":"themes/archer/README.md","hash":"fa398e05b0318ae4a657256e6ec6738791358d4f","modified":1531017026000},{"_id":"themes/archer/_config.yml","hash":"c530bc8f3bc4fcb5ddc3a7a78f357932b15ff871","modified":1580880351331},{"_id":"themes/archer/gulpfile.js","hash":"88e2615c21ca95ae7bcdba499e50a54aebcd9f56","modified":1531017026000},{"_id":"themes/archer/package.json","hash":"80a1d936e347e61d9a41a4303ee32dc236017242","modified":1531017026000},{"_id":"themes/archer/webpack.config.js","hash":"d20b6350c50e2981484cb9356a3e21a2124bcd72","modified":1531017026000},{"_id":"themes/archer/webpack.prod.js","hash":"48de76cfa6274895801d3afc89ecbf04ee182a1c","modified":1531017026000},{"_id":"source/_posts/Android如何直接投屏到电脑.md","hash":"ae9b0be226be6fd0c4a692fd341afc9092bfb4c3","modified":1563936756062},{"_id":"source/_posts/Mac前端上手指南.md","hash":"2bcefefd39922c202f6ef544ce082fcf9ccb56ed","modified":1549856646000},{"_id":"source/_posts/RTAC86U刷机指南.md","hash":"efa8f1e9741bb46d62a6a71343d474a543fbe45b","modified":1544876522000},{"_id":"source/_posts/android导致文字偏上的问题.md","hash":"c81e111e64f9b29a7970c369987ebaa559cfe3de","modified":1543919220000},{"_id":"source/_posts/axios兜底错误处理.md","hash":"0a4ad07a08afd16d3c181ca609dca34d48535005","modified":1567591311336},{"_id":"source/_posts/axios如何中断请求.md","hash":"845ebecba64f9f5a9795bc0e985c4fa468a99e60","modified":1553828183000},{"_id":"source/_posts/html上实现div按照宽高比自适应.md","hash":"badcb7734563fcfdea301cd75c4e8e9e8319ccc1","modified":1574670749462},{"_id":"source/_posts/postgresql 全文搜索引擎.md","hash":"712583e28883356c94654a832148dcb73ec68736","modified":1571388273585},{"_id":"source/_posts/react-route4实现prompt自定义样式.md","hash":"c2b7d4a9daaa9afc610068173b9b0353963eda7f","modified":1570807105649},{"_id":"source/_posts/umi.js约定式路由如何生成breadcrumbs.md","hash":"6e4ef863b7c31118c1356f45294f70bd220d95e2","modified":1565836351208},{"_id":"source/_posts/vscode在debugger的时候如何加载插件.md","hash":"e779ee31c803b34f14a72bad34b557865d931d19","modified":1565853678680},{"_id":"source/_posts/vscode插件分享.md","hash":"abb5cdc0fd30b73a0939e66993946f79520d4178","modified":1541746787000},{"_id":"source/_posts/webpack正确的引入pdfjs.md","hash":"4c754082760eb7a8309aed14fbaedd429fc0a31a","modified":1572484120415},{"_id":"source/_posts/一次Rem莫名失效的解决.md","hash":"4eaaf5961b522ee4bc34c12a3b5a8fa66c034ad2","modified":1572400977051},{"_id":"source/_posts/一次node内存泄漏排查和解决.md","hash":"7e1c2021ed428a70bfecb44e5e256dc52083893c","modified":1560133715000},{"_id":"source/_posts/上传app卡在通过App store进行鉴定.md","hash":"c59b359a031041ac0d960bc12e36404d219241ea","modified":1562844890731},{"_id":"source/_posts/从js数组重查找出重复元素的方法.md","hash":"dcaffa2bf80155a9f43ff81ff24f97f02915549e","modified":1539832497000},{"_id":"source/_posts/关于最近一年多工作的反思-复盘.md","hash":"46596f636efac5720d89633b5bcd4bd5cd03fcf2","modified":1577545164734},{"_id":"source/_posts/前端还应该关心的几件事.md","hash":"bf0e378390b5e08f1f54c693e686df9b1b407375","modified":1578037744000},{"_id":"source/_posts/如何删除除了Master之外的所有分支.md","hash":"a7878d1da60f7a9624ef01aac7a7b57e99692c1b","modified":1559721892000},{"_id":"source/_posts/学js很简单，就是有点头冷0.md","hash":"475388a2e61d0af1de4db04c0ca993a8be4f84e8","modified":1541562669000},{"_id":"source/_posts/学js很简单，就是有点头冷1.md","hash":"57043719ef74601e453e6f25e3c9d075937fba22","modified":1541571520000},{"_id":"source/_posts/小微企业验证码破解.md","hash":"b40edfbfba5d92847776afeb09864ed7de26588e","modified":1542082068000},{"_id":"source/_posts/情侣日常1.md","hash":"8d844bd75b61649fddb0aa6fd9a29120e7dbb392","modified":1540259079000},{"_id":"source/_posts/我们是怎么从ng迁移到vue的.md","hash":"94e29fb9be679da1ba76dfc396e809c88da6b276","modified":1546522953000},{"_id":"source/_posts/招与被招的那点事.md","hash":"d45d5efc3271b95b22a2d510d5e8c7f981077447","modified":1577109231652},{"_id":"source/_posts/教你如何构建Mojave动态壁纸.md","hash":"5521c192912ab7eb74533bfe7979bb71bc02e6bd","modified":1539670633000},{"_id":"source/_posts/文字超过x行后补上省略号的几种办法.md","hash":"2e9cc62669c922521c590ac1f1a82e27f72e2b0f","modified":1571385209949},{"_id":"source/_posts/有关前端和pdf相关的几件事.md","hash":"1847b7c6088dd898dda0f3333c2dc0d0ee39965f","modified":1554951883000},{"_id":"source/_posts/正则.md","hash":"e7d846f7e386c4e49bc054e05789384cc928fd49","modified":1562900747529},{"_id":"source/_posts/电视直播源分享.md","hash":"aef971eed187538089c2cc0cb463ba1c05782a8d","modified":1542517323000},{"_id":"source/_posts/浏览器实现扫码枪.md","hash":"2661310017e93b5acd2819cf0a52e2bac5a3eb6f","modified":1574593319074},{"_id":"source/_posts/纯css实现table表头吸顶.md","hash":"02ac1796fca9746f15421b9cf5455fce2b36559a","modified":1568002277670},{"_id":"source/_posts/自动给表格空单元格补上字符串.md","hash":"92fd0e06ba882343da01b31201341218c650d1d0","modified":1569202753139},{"_id":"source/_posts/记不住快捷键怎么办.md","hash":"9d6dde3beaef76a715a29686686cfed47a008893","modified":1539612689000},{"_id":"source/_posts/镜音len-刹月华.md","hash":"9b476cf6ba124924c7f2ce48f29bc64a530db27e","modified":1581260874014},{"_id":"source/_posts/镜音len-朋克.md","hash":"a2f1b8d334fe2b5711cedc841aef87f774595513","modified":1539690643000},{"_id":"source/about/index.md","hash":"749bacf01686643002442b97dd923333636d0770","modified":1539654940000},{"_id":"source/img/qrcode.bmp","hash":"1a284ec0bfa66f48617414f370fb703a55956721","modified":1578492096886},{"_id":"themes/archer/docs/README-en.md","hash":"ebd8845724cc9c524f1bdc617567bec2223abed6","modified":1531017026000},{"_id":"themes/archer/docs/develop-guide-en.md","hash":"0bb09c3c9d5f56820cb84e3316f60352b731d70c","modified":1531017026000},{"_id":"themes/archer/docs/develop-guide-zh.md","hash":"effc2bc9e0cecfd228b19283337ff29649ea5985","modified":1531017026000},{"_id":"themes/archer/layout/404.ejs","hash":"879641b1b5e49c43f2e096cad281f7d74df05127","modified":1531017026000},{"_id":"themes/archer/layout/about.ejs","hash":"06019d835c0a51fed8aa086d1dfcf368f9921b42","modified":1531017026000},{"_id":"themes/archer/layout/index.ejs","hash":"716ba4a30860e36077dfdfffa02c1cd60301d8a3","modified":1539668999000},{"_id":"themes/archer/layout/layout.ejs","hash":"6573c53b013e8ea12607fad7d3d8bd0236664176","modified":1542075260000},{"_id":"themes/archer/layout/post.ejs","hash":"0267bb01a656c662311e435178399d2cd36a10f7","modified":1581230412869},{"_id":"themes/archer/layout/site-meta.ejs","hash":"1a200814c7ef027582ab9e4972726ef4a3347aed","modified":1545621101000},{"_id":"themes/archer/source/.DS_Store","hash":"52540b0a1ac247f9f75189cbdeed31e806182c9f","modified":1539658049000},{"_id":"themes/archer/source/CNAME","hash":"e745edfbfa1830bc865594c6eb5b9b8846dee96e","modified":1539585610000},{"_id":"themes/archer/layout/_partial/algolia.ejs","hash":"2f5f9073378f628a9124792b5301c1540bc5a264","modified":1531017026000},{"_id":"themes/archer/layout/_partial/base-background-image.ejs","hash":"20044d7e2740a690181149d137b9aef8b9860b4d","modified":1531017026000},{"_id":"themes/archer/layout/_partial/base-footer.ejs","hash":"54c3d5a95e654ff655468d737e3c4040e3745b31","modified":1542075324000},{"_id":"themes/archer/layout/_partial/base-head.ejs","hash":"efde86772642dff2bb777556775b516f0cdc6e99","modified":1545807757000},{"_id":"themes/archer/layout/_partial/base-header.ejs","hash":"12e28693dc53cab5f6fd389f15ea0f811c9c37e9","modified":1531017026000},{"_id":"themes/archer/layout/_partial/base-preload-polyfill.ejs","hash":"2aea84cb43f4479131620b3c3dfd7cebe9be36ba","modified":1531017026000},{"_id":"themes/archer/layout/_partial/base-social.ejs","hash":"2d068432031b3bebf9438c775370a2d1b4492d6b","modified":1531017026000},{"_id":"themes/archer/layout/_partial/base-profile.ejs","hash":"de5f43638ac36b57c045645c5ef6fc74babc7470","modified":1580879869300},{"_id":"themes/archer/layout/_partial/base-title-tags.ejs","hash":"418559ab11726f69621c3a58cd21903adff1e48e","modified":1531017026000},{"_id":"themes/archer/layout/_partial/google-adsense.ejs","hash":"8d86c7decc6f39bc6eef13feafe4a1a820f7374b","modified":1542075046000},{"_id":"themes/archer/layout/_partial/intro-height.ejs","hash":"cd0d34a811dc4666980d57c00d70dd82bd5450eb","modified":1531017026000},{"_id":"themes/archer/source/assets/.DS_Store","hash":"bbf2fbf03170c4f54af90cf3942ae14c5a57f454","modified":1539687563000},{"_id":"themes/archer/source/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1539745542000},{"_id":"themes/archer/source/assets/favicon.ico","hash":"a4db5411b81208093d15c7eaadf0784c3cfd08c1","modified":1580880739130},{"_id":"themes/archer/source/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1531017026000},{"_id":"themes/archer/source/assets/logo-36.png","hash":"efa3f42ad111e28adb7c5b06c7444128733b12ae","modified":1539687525000},{"_id":"themes/archer/source/assets/logo-48.png","hash":"d4063251f00afb4ee1a524882c8c4a8e7f8838a4","modified":1539687454000},{"_id":"themes/archer/source/assets/logo-64.png","hash":"a6244dbd1e5c6f40a7351ff0ec016eb577c67850","modified":1539687405000},{"_id":"themes/archer/source/avatar/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1539658024000},{"_id":"themes/archer/source/css/mobile.css","hash":"0b7ac34da7d703064423480fc0526d91fa5716bc","modified":1531017026000},{"_id":"themes/archer/source/css/style.css","hash":"9b9e9ab4195f4f22bd52895ebedfa51b2182cab0","modified":1531017026000},{"_id":"themes/archer/source/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1531017026000},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1531017026000},{"_id":"themes/archer/source/intro/.DS_Store","hash":"27c1a4e66c15a3059190be2f1242eeb4d6f8dcb6","modified":1539658054000},{"_id":"themes/archer/source/lib/webfontloader.min.js","hash":"bc6ffe9c0d8b3285564619a445c6ca575eb9d0f5","modified":1531017026000},{"_id":"themes/archer/source/scripts/main.js","hash":"258b08f308c2a78f6cc0a81cf353994da771966a","modified":1531017026000},{"_id":"themes/archer/source/scripts/search.js","hash":"d5f739e261e8ce74f993c6157b248663bda122bf","modified":1531017026000},{"_id":"themes/archer/source/scripts/share.js","hash":"bb5bb37ce7f47f8c084b232df3e5fe2378d7ca01","modified":1531017026000},{"_id":"themes/archer/src/js/browser.js","hash":"03017b1e89b59346e681464c7609593c9aafa54c","modified":1531017026000},{"_id":"themes/archer/src/js/fancybox.js","hash":"0ce36efa325767c0ee7d5e5dfa174c68dd606e72","modified":1531017026000},{"_id":"themes/archer/src/js/init.js","hash":"989dea03ce93962b6a52818ee770ca3891679322","modified":1531017026000},{"_id":"themes/archer/src/js/initSidebar.js","hash":"522aba19524b49efd323a2199f6eaa7396f1bd48","modified":1531017026000},{"_id":"themes/archer/src/js/main.js","hash":"58329fe74df0d4411d9486ebfc4c5fbc457f073f","modified":1531017026000},{"_id":"themes/archer/src/js/mobile.js","hash":"3c826a4385dc58ee878e5ea9bf3a25fac5d2b307","modified":1531017026000},{"_id":"themes/archer/src/js/scroll.js","hash":"11ae5ca33f6f84897ef4a01697a624770bea2025","modified":1531017026000},{"_id":"themes/archer/src/js/search.js","hash":"af9bdbff06987fdca8340ea49ccd91e993b9be53","modified":1531017026000},{"_id":"themes/archer/src/js/share.js","hash":"dff48b27ac212c4ea8e0c4c5ee323862c06c2882","modified":1531017026000},{"_id":"themes/archer/src/js/sidebar.js","hash":"8707392554fe813e33be84e9c64d30cb733dd0b4","modified":1531017026000},{"_id":"themes/archer/src/js/tag.js","hash":"156547cad5230c899cac12d3d29e60f5a103b7c4","modified":1531017026000},{"_id":"themes/archer/src/js/toc.js","hash":"2a01f07f302ccea3d36787571e34fd070ac42797","modified":1531017026000},{"_id":"themes/archer/src/js/util.js","hash":"1c244b8def678df797ab3c049a03998db4f9dabb","modified":1531017026000},{"_id":"themes/archer/src/scss/_common.scss","hash":"71aa8bf9d5c66a432fd32b96a0953d53fcb533d2","modified":1531017026000},{"_id":"themes/archer/src/scss/_mixin.scss","hash":"27d5380e6a190071c0877a3651f3d877b91e03a1","modified":1531017026000},{"_id":"themes/archer/src/scss/_normalize.scss","hash":"b33d0d7e2e2807f50735f43e742f3c33471d38f7","modified":1531017026000},{"_id":"themes/archer/src/scss/_variables.scss","hash":"edd9e3dd34837f9c4e5f45eee8dc051b4caa8d28","modified":1531017026000},{"_id":"themes/archer/src/scss/mobile.scss","hash":"76a65f93c8bbcd5bc5fb7fca55919a12e7543a2b","modified":1531017026000},{"_id":"themes/archer/src/scss/style.scss","hash":"2d959b9c6a3a5b70df1bfa4ba0a6b8b758454e74","modified":1531017026000},{"_id":"source/img/head.png","hash":"c587f0fcf2573197dd3adeb8df3a22ca6fe0feef","modified":1578492096856},{"_id":"themes/archer/layout/_partial/comment/custom.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1531017026000},{"_id":"themes/archer/package-lock.json","hash":"229960bd92beff7974f422f7cb2025ae610a2191","modified":1531017026000},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1531017026000},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1531017026000},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1531017026000},{"_id":"themes/archer/source/lib/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/changyan.ejs","hash":"7691642fb9375607e0ac988a7420999e242cb2c9","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/disqus.ejs","hash":"cadd97820a23d01d8b7e2f19a86e5290cef5a8a6","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/gitment.ejs","hash":"794647a8a4ac9e1d01d74c07717175a141b1e01c","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/livere.ejs","hash":"b27469f19f35ec2037c7bce736a12e9dfb5e360b","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/valine.ejs","hash":"2154360e330dab94540e168e9d301c7b7091968e","modified":1531017026000},{"_id":"themes/archer/layout/_partial/comment/youyan.ejs","hash":"790d76f2667377db78a7d04bad8d629e47e7aab0","modified":1531017026000},{"_id":"themes/archer/layout/_partial/critical-css/critical-style.ejs","hash":"731d3980ac665d96dc6a40d31c2f8b86a221a8bb","modified":1531017026000},{"_id":"themes/archer/layout/_partial/script/font-loader.ejs","hash":"291cc0a4a444a93b93c32e2c39383c70e36e46de","modified":1531017026000},{"_id":"themes/archer/layout/_partial/sidebar/base-sidebar.ejs","hash":"2d38af7cb5aabc0af99de239bd180c516ec4c56c","modified":1531017026000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-archives.ejs","hash":"daa78b17a773bca569f1c8ca2c916495ca138da6","modified":1531017026000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-categories.ejs","hash":"147214469c4909eb94943599883f9fa0f3cc090d","modified":1531017026000},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-tags.ejs","hash":"d6e1a192cac5dcf365ce1a52df4f23feafeeb849","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_404.scss","hash":"64a721c19c8c4d5b2b07d6aedcde1565be734e6d","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_algolia.scss","hash":"75776d8b85c8d2edc27eb7ed60d7c371f5109da0","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_index-page.scss","hash":"8a74f79686e327b0566ea606fd7625eb57daf898","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_post-page.scss","hash":"97171c34f9b0676cf9113a1d637955415770f89b","modified":1531017026000},{"_id":"themes/archer/docs/snap.png","hash":"0b2a8bf016f6eed576abfdcdb7dcf8de51c12562","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_footer.scss","hash":"73caccbe2634ff84e386d58e7f6ecd52d5ca2151","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_header.scss","hash":"eaff5b3e942e461109cdb6fd52f1d124b5a11951","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_intro.scss","hash":"65efbfbaec7d09120ba62fee6e4643e6108098f6","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_paginator.scss","hash":"dbd7f802f3812f7e15c12885e495296f3697c580","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_profile.scss","hash":"e69b62df7c36d938cc4cf8e1fdcbc7109be41119","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_partial/_scrollbar.scss","hash":"9f7a3877adccbfaf66ad574dbe2c8dc85fbf2f5a","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_post/_code.scss","hash":"1229364f7c3484cc2ada6f118c859e3fd1dd9129","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-archive.scss","hash":"a25960d1d9f501e50cb1fe86328dbc65faa29d22","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-tags.scss","hash":"fe42459805e4caa303df08964184548c33507d23","modified":1531017026000},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar.scss","hash":"9226a04dd9ea8389f88ced34962f1f55192d7a1a","modified":1531017026000},{"_id":"public/manifest.json","hash":"a07df76d544f437eae034c4efd64134e8fd6a176","modified":1578493373280},{"_id":"public/post-sitemap.xml","hash":"1b845431168dfb94edc0b185ec5bc5d5bf42b3a4","modified":1578493373310},{"_id":"public/page-sitemap.xml","hash":"0080aa561e67c74b40d119fbb534bcc4639b6611","modified":1578493387240},{"_id":"public/category-sitemap.xml","hash":"42cbee8f6fd63b23e03b06806fc14d559dea44ca","modified":1578493390851},{"_id":"public/tag-sitemap.xml","hash":"51e094268a10667b5f7781a676c03b2ae59e8f35","modified":1578493390853},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1578493390861},{"_id":"public/sitemap.xml","hash":"f1d6b8944ad0683dc52f9f9129d090966feb5f42","modified":1578493391218},{"_id":"public/atom.xml","hash":"9d01614110cb1ab7ea172521b56440153025a1d0","modified":1578493391222},{"_id":"public/content.json","hash":"2270e0130d169e4342e61846b829c1a2828b825c","modified":1578493391223},{"_id":"public/404.html","hash":"da7ee1f05ad336fbf92c71b0effcd1a929fc9e8b","modified":1578493391288},{"_id":"public/about/index.html","hash":"d8bc4641c994ed8921b9077ccd3472bdc16efd27","modified":1578493391288},{"_id":"public/2020/01/04/前端还应该关心的几件事/index.html","hash":"e6f7ddc17bcddefcd5e473b763391112699b8bbb","modified":1578493391289},{"_id":"public/2019/12/28/关于最近一年多工作的反思-复盘/index.html","hash":"ef283802b2c8c15f9c364d97ddc51fbf753cc30b","modified":1578493391289},{"_id":"public/2019/12/23/招与被招的那点事/index.html","hash":"1f56cf918e571d56cd38424147d90aa8d94c8d0f","modified":1578493391289},{"_id":"public/2019/10/29/一次Rem莫名失效的解决/index.html","hash":"87eba1805fd8c93c3c1e1af7d3fe3011d12ae3dc","modified":1578493391289},{"_id":"public/2019/10/18/postgresql 全文搜索引擎/index.html","hash":"3ca7a934bb591c034c0cbd250caf09a01318ba5b","modified":1578493391290},{"_id":"public/2019/10/18/文字超过x行后补上省略号的几种办法/index.html","hash":"857c0a40a2d0a18b51a801e8f70cd93f12327b82","modified":1578493391290},{"_id":"public/2019/10/11/react-route4实现prompt自定义样式/index.html","hash":"24147fb7a4aa16d723fb907039999e38ff624e86","modified":1578493391290},{"_id":"public/2019/09/23/自动给表格空单元格补上字符串/index.html","hash":"5779441ce00b7d73c88f95b01c8fa2d0d50f4609","modified":1578493391290},{"_id":"public/2019/09/09/纯css实现table表头吸顶/index.html","hash":"cdff4c76c81345da5284afc8419ba8cac44e1e68","modified":1578493391290},{"_id":"public/2019/09/04/axios兜底错误处理/index.html","hash":"e350170170dc88e74d58afbf9a21a0f89f7ce2c5","modified":1578493391291},{"_id":"public/2019/08/15/webpack正确的引入pdfjs/index.html","hash":"95c3502e3af6967167bfe84e3e1f1f44410499aa","modified":1578493391291},{"_id":"public/2019/08/15/vscode在debugger的时候如何加载插件/index.html","hash":"4ef3d5093ca6fa9c090caa0114d88f96b0a6a3bc","modified":1578493391291},{"_id":"public/2019/08/15/umi.js约定式路由如何生成breadcrumbs/index.html","hash":"78779f22210e0be04d8f6d9e28db1c3de3a390de","modified":1578493391291},{"_id":"public/2019/07/12/正则/index.html","hash":"7035ff0e363dc1c2ef75b61ba66e84645c5bc582","modified":1578493391291},{"_id":"public/2019/07/09/上传app卡在通过App store进行鉴定/index.html","hash":"c522dd9acdfc7b1b28865900488a7fdab287324a","modified":1578493391291},{"_id":"public/2019/07/09/Android如何直接投屏到电脑/index.html","hash":"2d206fb7c82b634faeb4f5939ed246c1a1dbaf9f","modified":1578493391291},{"_id":"public/2019/06/10/一次node内存泄漏排查和解决/index.html","hash":"3955e60b81dac796f27dd00a90cf1bb04eb774e0","modified":1578493391292},{"_id":"public/2019/06/05/如何删除除了Master之外的所有分支/index.html","hash":"230d651d824cf4ebbfdd4ff7da46642268074621","modified":1578493391292},{"_id":"public/2019/04/10/有关前端和pdf相关的几件事/index.html","hash":"c9422e26795bec3ee0d17502a1e3ae3976dfe2eb","modified":1578493391292},{"_id":"public/2019/03/29/axios如何中断请求/index.html","hash":"c410feb32dcebba19daf106f6f9304e2ee2ff563","modified":1578493391292},{"_id":"public/2019/02/11/Mac前端上手指南/index.html","hash":"a3eb6d21befe2acf5e08456386321ad1e868224c","modified":1578493391292},{"_id":"public/2019/01/03/我们是怎么从ng迁移到vue的/index.html","hash":"a5fa5fe89d2d0e0e49e05156093ff7d26be3b9e0","modified":1578493391292},{"_id":"public/2018/12/15/RTAC86U刷机指南/index.html","hash":"a314226bfd9fc3424a6d4c0a5a0ac904beed98a3","modified":1578493391293},{"_id":"public/2018/12/04/android导致文字偏上的问题/index.html","hash":"94cbbd056dc88907c878f79ccdb1ebf1b1070eda","modified":1578493391293},{"_id":"public/2018/11/25/html上实现div按照宽高比自适应/index.html","hash":"69de8616ad76c57821f57efde39a3474edb800df","modified":1578493391293},{"_id":"public/2018/11/20/浏览器实现扫码枪/index.html","hash":"66524182a07607b9ad0f8f8fcd4e9d00fd18ac7d","modified":1578493391294},{"_id":"public/2018/11/18/电视直播源分享/index.html","hash":"cf9ff115a33f38cd592ca921ea27a045038d5782","modified":1578493391294},{"_id":"public/2018/11/13/小微企业验证码破解/index.html","hash":"960e7c7ea2a4a9edb6d8bb94f418a9c67db56136","modified":1578493391294},{"_id":"public/2018/11/09/vscode插件分享/index.html","hash":"9cb3d18fe4271a5fd090394b4ac1d85811adbccc","modified":1578493391294},{"_id":"public/2018/11/07/学js很简单，就是有点头冷1/index.html","hash":"a48904df6ba3649801357b47aa6ab97380b015a6","modified":1578493391294},{"_id":"public/2018/11/01/学js很简单，就是有点头冷0/index.html","hash":"96194588c6dbb78abfa29686b29ce2ffbdd3edfb","modified":1578493391295},{"_id":"public/2018/10/23/情侣日常1/index.html","hash":"9b1a1e1c501fd721a44181d214a4207265bdfce1","modified":1578493391295},{"_id":"public/2018/10/18/从js数组重查找出重复元素的方法/index.html","hash":"dd417ae7e066d8c91d3679650de84c95d000cdc0","modified":1578493391295},{"_id":"public/2018/10/16/教你如何构建Mojave动态壁纸/index.html","hash":"0bb4393ee8a53fbe5fc0a0d5209a22dd48055775","modified":1578493391295},{"_id":"public/2018/10/16/镜音len-刹月华/index.html","hash":"82163f83fc673954574103beddded9e69df1f324","modified":1578493391296},{"_id":"public/2018/10/16/镜音len-朋克/index.html","hash":"457cc445a0e846bc32c0db7306196e6985bb9b61","modified":1578493391296},{"_id":"public/2018/10/15/记不住快捷键怎么办/index.html","hash":"6946e51736d8d68c2889e05effad68886569f159","modified":1578493391296},{"_id":"public/categories/可以公开的情报/index.html","hash":"f0853e14aa1e64cc2bde5ec4b44bed49255e41cd","modified":1578493391297},{"_id":"public/categories/可以公开的情报/page/2/index.html","hash":"48c23a830a4ad764390ddbc7a818cda9d07e03be","modified":1578493391297},{"_id":"public/categories/可以公开的情报/page/3/index.html","hash":"8d4b498822c4142a012575888f5817b25ed0f734","modified":1578493391298},{"_id":"public/categories/开发的捷径/index.html","hash":"04df9206fec92f89ed4ea8f7fafd5f5c020e52fa","modified":1578493391298},{"_id":"public/categories/所思所想/index.html","hash":"59769201630e51104d3223ca9264affe76e0891f","modified":1578493391298},{"_id":"public/categories/前端/index.html","hash":"d395fc7c835ecedf3b31ef796e7dc31e2b46477e","modified":1578493391299},{"_id":"public/categories/学习笔记/index.html","hash":"95cacf893ab309afb2131e1b8deae9cf76fe0c46","modified":1578493391299},{"_id":"public/categories/祉华/index.html","hash":"471669035e7d22c2112467b8282849401cac0c7c","modified":1578493391299},{"_id":"public/categories/Cos/index.html","hash":"7ab9e237fbf68cd24024c521f97f22c1cb83eb99","modified":1578493391299},{"_id":"public/index.html","hash":"26830dab835d80ccccab31c8f25c9ed1995d1849","modified":1578493391299},{"_id":"public/page/2/index.html","hash":"d9ad6c07c28f57a281fd683f905d4b8c60e5f54c","modified":1578493391300},{"_id":"public/page/3/index.html","hash":"141d030fd588e3cfae32bf9ccf709969ea56cee8","modified":1578493391300},{"_id":"public/page/4/index.html","hash":"4a3db089218cd81e1fcdd1719c9b48c0beafdf0a","modified":1578493391300},{"_id":"public/tags/可以公开的情报/index.html","hash":"92a528d5f7d0196d5b41e8b1c51c795bf92c282e","modified":1578493391300},{"_id":"public/tags/前端/index.html","hash":"7a03cf1ea7d7eed6f9202a08daf1fe9d95674d25","modified":1578493391300},{"_id":"public/tags/开发/index.html","hash":"634e7276593d6e0f80ea07b56b643fe8be3e67fd","modified":1578493391301},{"_id":"public/tags/前端/page/2/index.html","hash":"a5a9c64a39b065b393c646cff4d65a196b2289dc","modified":1578493391302},{"_id":"public/tags/android/index.html","hash":"f5ea7838c82e4b0f8051e1ee77996c4dfa3e1f2e","modified":1578493391302},{"_id":"public/tags/上手指南/index.html","hash":"45a83aa48dae806efcf6b9dfd9b718e757f3e779","modified":1578493391302},{"_id":"public/tags/MAC/index.html","hash":"ea85c704c62b852977a06ea5aec4977ed93fbfdd","modified":1578493391302},{"_id":"public/tags/经验/index.html","hash":"681c6ddeefb49d1d0c8c617d3027de7348efeb05","modified":1578493391303},{"_id":"public/tags/RTAC86U/index.html","hash":"1d83e83297d845ce76662f5697eb94b7f7456d78","modified":1578493391303},{"_id":"public/tags/乳酸菌/index.html","hash":"1d83e83297d845ce76662f5697eb94b7f7456d78","modified":1578493391303},{"_id":"public/tags/gfw/index.html","hash":"1d83e83297d845ce76662f5697eb94b7f7456d78","modified":1578493391303},{"_id":"public/tags/插件/index.html","hash":"1d83e83297d845ce76662f5697eb94b7f7456d78","modified":1578493391303},{"_id":"public/tags/line-height/index.html","hash":"b8b05967b50847d8988523bbbbbc0bcd64c4b824","modified":1578493391304},{"_id":"public/tags/font-size/index.html","hash":"6c9e28f55cd2ffce76982ae3a929bcde6f732ab3","modified":1578493391304},{"_id":"public/tags/axios/index.html","hash":"363868fb99160415abd9cb8f8bb85fcf75a35817","modified":1578493391304},{"_id":"public/tags/promise/index.html","hash":"363868fb99160415abd9cb8f8bb85fcf75a35817","modified":1578493391304},{"_id":"public/tags/错误处理/index.html","hash":"363868fb99160415abd9cb8f8bb85fcf75a35817","modified":1578493391305},{"_id":"public/tags/宽高比/index.html","hash":"1a2dcc59b3899047c97feec48c23d4a074adfc55","modified":1578493391306},{"_id":"public/tags/html5/index.html","hash":"3aff8cdd5b4a3ab8e163cac19ad71dd0e71c3bc3","modified":1578493391306},{"_id":"public/tags/vue/index.html","hash":"c0c11950b9835719c515d73990e0997853209a52","modified":1578493391307},{"_id":"public/tags/css/index.html","hash":"21b7754caac04a9860c8ee6e2fc0e4c812cd28b3","modified":1578493391307},{"_id":"public/tags/js/index.html","hash":"5d6695c8be9df06aede7a9e5e3856a770f7916ab","modified":1578493391307},{"_id":"public/tags/react/index.html","hash":"feec2f297efe54ee535f39f66b7aa4933e76b93a","modified":1578493391307},{"_id":"public/tags/react-route/index.html","hash":"feec2f297efe54ee535f39f66b7aa4933e76b93a","modified":1578493391308},{"_id":"public/tags/prompt/index.html","hash":"feec2f297efe54ee535f39f66b7aa4933e76b93a","modified":1578493391308},{"_id":"public/tags/退出校验/index.html","hash":"feec2f297efe54ee535f39f66b7aa4933e76b93a","modified":1578493391308},{"_id":"public/tags/umi-js/index.html","hash":"c47682e8954ac82e47888997daa35ad42748b951","modified":1578493391309},{"_id":"public/tags/面包屑/index.html","hash":"c47682e8954ac82e47888997daa35ad42748b951","modified":1578493391309},{"_id":"public/tags/路由/index.html","hash":"c47682e8954ac82e47888997daa35ad42748b951","modified":1578493391309},{"_id":"public/tags/约定式路由/index.html","hash":"c47682e8954ac82e47888997daa35ad42748b951","modified":1578493391309},{"_id":"public/tags/vscode/index.html","hash":"7cf67dc192305cfb7fc6aac0e9651a19f2d826f7","modified":1578493391309},{"_id":"public/tags/chrome/index.html","hash":"c2173d97c64795cdef58741e26d1aae0cd3ddcb5","modified":1578493391310},{"_id":"public/tags/笔记/index.html","hash":"1a5b47ca2ac77b875166e1879d10d32cf769eac5","modified":1578493391310},{"_id":"public/tags/学习/index.html","hash":"faee796b49bdb6c680a0806dbe2ad0b927f3493a","modified":1578493391311},{"_id":"public/tags/记录/index.html","hash":"faee796b49bdb6c680a0806dbe2ad0b927f3493a","modified":1578493391311},{"_id":"public/tags/rem/index.html","hash":"8fc7c91af13dc0678bdb5ac0d4be553670903397","modified":1578493391311},{"_id":"public/tags/ios/index.html","hash":"54e05574f416a265e10d3c4bde78019175c32ee3","modified":1578493391311},{"_id":"public/tags/ecmascript/index.html","hash":"0efbaca6f08aa8a0db3338e1b373cc35a2dcb7a7","modified":1578493391311},{"_id":"public/tags/数组/index.html","hash":"0efbaca6f08aa8a0db3338e1b373cc35a2dcb7a7","modified":1578493391312},{"_id":"public/tags/技巧/index.html","hash":"0efbaca6f08aa8a0db3338e1b373cc35a2dcb7a7","modified":1578493391312},{"_id":"public/tags/反思/index.html","hash":"d099652c9adfaf14f1e52546399d04f29e263aa7","modified":1578493391312},{"_id":"public/tags/教程/index.html","hash":"6e2b19d08b1430363347bdb5320046ef6901ebb7","modified":1578493391312},{"_id":"public/tags/javascript/index.html","hash":"aae8cf00168d466d3c33adf15aadc429dc253f75","modified":1578493391312},{"_id":"public/tags/日常/index.html","hash":"471669035e7d22c2112467b8282849401cac0c7c","modified":1578493391312},{"_id":"public/tags/祉华/index.html","hash":"471669035e7d22c2112467b8282849401cac0c7c","modified":1578493391312},{"_id":"public/tags/OSX/index.html","hash":"6b99a62bba3ee4e86717f9f3a22e203b36cdf675","modified":1578493391312},{"_id":"public/tags/mojave/index.html","hash":"79a17b99a8108ca01d9d5125d8b0ce1db386e388","modified":1578493391313},{"_id":"public/tags/动态壁纸/index.html","hash":"79a17b99a8108ca01d9d5125d8b0ce1db386e388","modified":1578493391313},{"_id":"public/tags/超过x行/index.html","hash":"02edbe86d72f67060c7df5a3d808574eb255e6b4","modified":1578493391313},{"_id":"public/tags/省略号/index.html","hash":"02edbe86d72f67060c7df5a3d808574eb255e6b4","modified":1578493391313},{"_id":"public/tags/overflow/index.html","hash":"02edbe86d72f67060c7df5a3d808574eb255e6b4","modified":1578493391313},{"_id":"public/tags/pdf/index.html","hash":"b23a0a075ecabebdb9b09209c5da79242d7d77e3","modified":1578493391313},{"_id":"public/tags/扫码枪/index.html","hash":"1fc7153f7d0b1585924ac56c595d3f08650cc2ca","modified":1578493391313},{"_id":"public/tags/表格/index.html","hash":"2216e6ef898abc9f34c396b2ef599440aff1c520","modified":1578493391314},{"_id":"public/tags/吸顶/index.html","hash":"abd1f2b34f0e5b819132a6d96e1fed297688dda0","modified":1578493391315},{"_id":"public/tags/sticky/index.html","hash":"abd1f2b34f0e5b819132a6d96e1fed297688dda0","modified":1578493391315},{"_id":"public/tags/单元格/index.html","hash":"ff3491b5c88eb6e94538bafe5f08fe6142ddac02","modified":1578493391315},{"_id":"public/tags/软件推荐/index.html","hash":"dc3d69044f3db987ecaf3e00115b37282264fd68","modified":1578493391315},{"_id":"public/tags/补全/index.html","hash":"ff3491b5c88eb6e94538bafe5f08fe6142ddac02","modified":1578493391315},{"_id":"public/tags/镜音/index.html","hash":"7ab9e237fbf68cd24024c521f97f22c1cb83eb99","modified":1578493391316},{"_id":"public/tags/cos/index.html","hash":"7ab9e237fbf68cd24024c521f97f22c1cb83eb99","modified":1578493391316},{"_id":"public/tags/镜音len/index.html","hash":"7ab9e237fbf68cd24024c521f97f22c1cb83eb99","modified":1578493391316},{"_id":"public/tags/数据库/index.html","hash":"39047e79808158ed29f0244f4a43ef9292609667","modified":1578493391316},{"_id":"public/tags/搜索引擎/index.html","hash":"39047e79808158ed29f0244f4a43ef9292609667","modified":1578493391316},{"_id":"public/tags/postgresql/index.html","hash":"39047e79808158ed29f0244f4a43ef9292609667","modified":1578493391316},{"_id":"public/tags/ng/index.html","hash":"93e13981429fbf940f3097f52ad8e45fc12dd7a8","modified":1578493391317},{"_id":"public/tags/迁移/index.html","hash":"93e13981429fbf940f3097f52ad8e45fc12dd7a8","modified":1578493391317},{"_id":"public/tags/angularJs/index.html","hash":"93e13981429fbf940f3097f52ad8e45fc12dd7a8","modified":1578493391317},{"_id":"public/archives/index.html","hash":"52d6ddff174f4d8e90f6b03aec961529b02992d3","modified":1578493391317},{"_id":"public/archives/page/2/index.html","hash":"403b6a16b46277df6e397e94e117fff945a8d5be","modified":1578493391317},{"_id":"public/archives/page/3/index.html","hash":"8d3a5d2d650f7c1b25c9fbbb65c99c61b34ffcad","modified":1578493391319},{"_id":"public/archives/page/4/index.html","hash":"4e417cc1c83521f76e2918e90fa11c4ad2ccba6e","modified":1578493391319},{"_id":"public/archives/2018/index.html","hash":"f58b0cf5cd4f64ca98fbb1fb8d06170649bab78b","modified":1578493391319},{"_id":"public/archives/2018/page/2/index.html","hash":"99353df9e0935e61f8da460a15f4cc4e78548007","modified":1578493391319},{"_id":"public/archives/2018/10/index.html","hash":"5fa428f6073a810696332929d0cafca8395495e1","modified":1578493391320},{"_id":"public/archives/2018/11/index.html","hash":"f5d6c6c17e6016b713f139714762393b5539e1ca","modified":1578493391320},{"_id":"public/archives/2018/12/index.html","hash":"cc45c2c547a0c63daa1de4161615084824facd21","modified":1578493391320},{"_id":"public/archives/2019/index.html","hash":"0933bed974b9d14e6e443b9a6a18074c3e8aaad5","modified":1578493391320},{"_id":"public/archives/2019/page/2/index.html","hash":"0f2a64b4148c0e625c8d88e6a0231c63a00b842c","modified":1578493391320},{"_id":"public/archives/2019/page/3/index.html","hash":"c11dff79879dc436a696da5597a85e6a0906366d","modified":1578493391321},{"_id":"public/archives/2019/01/index.html","hash":"93e13981429fbf940f3097f52ad8e45fc12dd7a8","modified":1578493391321},{"_id":"public/archives/2019/02/index.html","hash":"b8c8c305df1ccc765f36cbb316261639b5b5d6b7","modified":1578493391321},{"_id":"public/archives/2019/03/index.html","hash":"d41074bbaa98fd63d1de70e14727fa383fdcdb28","modified":1578493391321},{"_id":"public/archives/2019/04/index.html","hash":"b23a0a075ecabebdb9b09209c5da79242d7d77e3","modified":1578493391321},{"_id":"public/archives/2019/06/index.html","hash":"832c57f31fac4b99c1b66a3c073508fd2f0655b3","modified":1578493391322},{"_id":"public/archives/2019/07/index.html","hash":"984df5c2566fde80ddfd245e239a54a7e06202eb","modified":1578493391322},{"_id":"public/archives/2019/08/index.html","hash":"8d8dd29445e42eed1d631860f261246f8789c853","modified":1578493391322},{"_id":"public/archives/2019/09/index.html","hash":"e6652afb8380d306c7b19f12c4d6b706edd9799d","modified":1578493391322},{"_id":"public/archives/2019/10/index.html","hash":"125dee37a237cfb7fb32c32274769f817603b318","modified":1578493391323},{"_id":"public/archives/2019/12/index.html","hash":"59769201630e51104d3223ca9264affe76e0891f","modified":1578493391323},{"_id":"public/archives/2020/index.html","hash":"d099652c9adfaf14f1e52546399d04f29e263aa7","modified":1578493391323},{"_id":"public/archives/2020/01/index.html","hash":"d099652c9adfaf14f1e52546399d04f29e263aa7","modified":1578493391323},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1578493391373},{"_id":"public/live2dw/assets/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1578493391373},{"_id":"public/live2dw/assets/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1578493391376},{"_id":"public/live2dw/assets/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1578493391377},{"_id":"public/live2dw/assets/package.json","hash":"a0ff707fea20e9ce41682ab8b8bf0c6159ed9d61","modified":1578493391377},{"_id":"public/live2dw/assets/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1578493391377},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1578493391466},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1578493391466},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1578493391467},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1578493391768},{"_id":"public/live2dw/assets/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1578493391782},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1578493391782},{"_id":"public/live2dw/assets/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1578493391835},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1578493391835},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1578493391840},{"_id":"source/_posts/Taro小程序适配iponex.md","hash":"c30c6305beeb450032ad533e8d199106b7fe82af","modified":1579765565362},{"_id":"source/_posts/vuepress文档部署到github-pages.md","hash":"22ed29fd69b38bca259307efe04d70d4098cfe2d","modified":1581181672143},{"_id":"source/_posts/使用typescript写vue遇到的问题以及处理方法.md","hash":"d6aca97b9318b0d8786ebcdf99e9c54bcd73b42b","modified":1580648726872},{"_id":"themes/archer/source/assets/donate.jpg","hash":"050ec98ad7b4ca6836f110bc257aae7208f8c668","modified":1581229759241}],"Category":[{"name":"可以公开的情报","_id":"ck55dkxgm0007w6ilqqm5yag4"},{"name":"开发的捷径","_id":"ck55dkxhf000sw6il1vm4v8lu"},{"name":"所思所想","_id":"ck55dkxhu001cw6ilr8l0cr76"},{"name":"前端","_id":"ck55dkxi3001mw6il8dsa8dfd"},{"name":"学习笔记","_id":"ck55dkxi7001uw6ilogticpzk"},{"name":"祉华","_id":"ck55dkxif0028w6ilm6adj894"},{"name":"Cos","_id":"ck55dkxiy0031w6il7t0sof1a"},{"name":"一些经验","_id":"ck6f5jmu30002wuilnss22ksg"}],"Data":[],"Page":[{"layout":"404","title":"[404]","description":"May the Force be with you :&#41;","_content":"","source":"404.md","raw":"---\nlayout: 404\ntitle: \"[404]\"\ndescription: \"May the Force be with you :&#41;\"\n---","date":"2019-06-22T07:37:28.192Z","updated":"2018-10-15T12:41:14.000Z","path":"404.html","comments":1,"_id":"ck55dkxe00000w6ilp4cqen6p","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"{\n    \"dir\": \"auto\",\n    \"lang\": \"zh\",\n    \"name\": \"水华的博客\",\n    \"scope\": \"/\",\n    \"display\": \"standalone\",\n    \"start_url\": \"/\",\n    \"short_name\": \"水华的博客\",\n    \"theme_color\": \"transparent\",\n    \"description\": \"知行合一 - 水华的博客\",\n    \"orientation\": \"any\",\n    \"background_color\": \"transparent\",\n    \"related_applications\": [],\n    \"prefer_related_applications\": false,\n    \"gcm_sender_id\": \"482941778795\",\n    \"gcm_sender_id_comment\": \"Do not change the GCM Sender ID\",\n    \"icons\": [{\n      \"src\": \"/assets/logo-32.png\",\n      \"sizes\": \"32x32\",\n      \"type\": \"image/png\"\n    }, {\n      \"src\": \"/assets/logo-48.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"image/png\"\n    },\n    {\n        \"src\": \"/assets/logo-64.png\",\n        \"sizes\": \"64x64\",\n        \"type\": \"image/png\"\n      }\n    ]\n  }","source":"manifest.json","raw":"{\n    \"dir\": \"auto\",\n    \"lang\": \"zh\",\n    \"name\": \"水华的博客\",\n    \"scope\": \"/\",\n    \"display\": \"standalone\",\n    \"start_url\": \"/\",\n    \"short_name\": \"水华的博客\",\n    \"theme_color\": \"transparent\",\n    \"description\": \"知行合一 - 水华的博客\",\n    \"orientation\": \"any\",\n    \"background_color\": \"transparent\",\n    \"related_applications\": [],\n    \"prefer_related_applications\": false,\n    \"gcm_sender_id\": \"482941778795\",\n    \"gcm_sender_id_comment\": \"Do not change the GCM Sender ID\",\n    \"icons\": [{\n      \"src\": \"/assets/logo-32.png\",\n      \"sizes\": \"32x32\",\n      \"type\": \"image/png\"\n    }, {\n      \"src\": \"/assets/logo-48.png\",\n      \"sizes\": \"48x48\",\n      \"type\": \"image/png\"\n    },\n    {\n        \"src\": \"/assets/logo-64.png\",\n        \"sizes\": \"64x64\",\n        \"type\": \"image/png\"\n      }\n    ]\n  }","date":"2019-06-22T07:37:28.291Z","updated":"2018-12-24T09:29:40.000Z","path":"manifest.json","layout":"false","title":"","comments":1,"_id":"ck55dkxe60001w6il5lsg59gg","content":"{\"dir\":\"auto\",\"lang\":\"zh\",\"name\":\"水华的博客\",\"scope\":\"/\",\"display\":\"standalone\",\"start_url\":\"/\",\"short_name\":\"水华的博客\",\"theme_color\":\"transparent\",\"description\":\"知行合一 - 水华的博客\",\"orientation\":\"any\",\"background_color\":\"transparent\",\"related_applications\":[],\"prefer_related_applications\":false,\"gcm_sender_id\":\"482941778795\",\"gcm_sender_id_comment\":\"Do not change the GCM Sender ID\",\"icons\":[{\"src\":\"/assets/logo-32.png\",\"sizes\":\"32x32\",\"type\":\"image/png\"},{\"src\":\"/assets/logo-48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\"},{\"src\":\"/assets/logo-64.png\",\"sizes\":\"64x64\",\"type\":\"image/png\"}]}","site":{"data":{}},"excerpt":"","more":"{\"dir\":\"auto\",\"lang\":\"zh\",\"name\":\"水华的博客\",\"scope\":\"/\",\"display\":\"standalone\",\"start_url\":\"/\",\"short_name\":\"水华的博客\",\"theme_color\":\"transparent\",\"description\":\"知行合一 - 水华的博客\",\"orientation\":\"any\",\"background_color\":\"transparent\",\"related_applications\":[],\"prefer_related_applications\":false,\"gcm_sender_id\":\"482941778795\",\"gcm_sender_id_comment\":\"Do not change the GCM Sender ID\",\"icons\":[{\"src\":\"/assets/logo-32.png\",\"sizes\":\"32x32\",\"type\":\"image/png\"},{\"src\":\"/assets/logo-48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\"},{\"src\":\"/assets/logo-64.png\",\"sizes\":\"64x64\",\"type\":\"image/png\"}]}"},{"title":"我是水华！","layout":"about","_content":"hello 这边水华 魔都底层透明coser系列\n哈尔滨，魔都，宁波三地出没 \n专注可爱男孩子大龄二次元x\n自带猫草属性\n已有女票～被女票拉着学宅舞系列\n虽然话废也努力活在空间 有可能腿控福利掉落～欢迎安利和找我玩呀\n入坑略多 聊聊说不定在一个坑了呢x\n\n","source":"about/index.md","raw":"---\ntitle: 我是水华！\nlayout: about\n---\nhello 这边水华 魔都底层透明coser系列\n哈尔滨，魔都，宁波三地出没 \n专注可爱男孩子大龄二次元x\n自带猫草属性\n已有女票～被女票拉着学宅舞系列\n虽然话废也努力活在空间 有可能腿控福利掉落～欢迎安利和找我玩呀\n入坑略多 聊聊说不定在一个坑了呢x\n\n","date":"2019-06-22T07:37:28.290Z","updated":"2018-10-16T01:55:40.000Z","path":"about/index.html","comments":1,"_id":"ck55dkxgc0003w6iluki0um4p","content":"<p>hello 这边水华 魔都底层透明coser系列<br>哈尔滨，魔都，宁波三地出没<br>专注可爱男孩子大龄二次元x<br>自带猫草属性<br>已有女票～被女票拉着学宅舞系列<br>虽然话废也努力活在空间 有可能腿控福利掉落～欢迎安利和找我玩呀<br>入坑略多 聊聊说不定在一个坑了呢x</p>\n","site":{"data":{}},"excerpt":"","more":"<p>hello 这边水华 魔都底层透明coser系列<br>哈尔滨，魔都，宁波三地出没<br>专注可爱男孩子大龄二次元x<br>自带猫草属性<br>已有女票～被女票拉着学宅舞系列<br>虽然话废也努力活在空间 有可能腿控福利掉落～欢迎安利和找我玩呀<br>入坑略多 聊聊说不定在一个坑了呢x</p>\n"}],"Post":[{"title":"Android如何直接投屏到电脑","date":"2019-07-09T10:17:35.000Z","_content":"\n# 安装 scrcpy\n\n`brew install scrcpy`\n连接上安卓手机之后就行\n","source":"_posts/Android如何直接投屏到电脑.md","raw":"---\ntitle: Android如何直接投屏到电脑\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\n  - android\ndate: 2019-07-09 18:17:35\ncategories:\n---\n\n# 安装 scrcpy\n\n`brew install scrcpy`\n连接上安卓手机之后就行\n","slug":"Android如何直接投屏到电脑","published":1,"updated":"2019-07-24T02:52:36.062Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxg60002w6il7xt46r2x","content":"<h1 id=\"安装-scrcpy\"><a href=\"#安装-scrcpy\" class=\"headerlink\" title=\"安装 scrcpy\"></a>安装 scrcpy</h1><p><code>brew install scrcpy</code><br>连接上安卓手机之后就行</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装-scrcpy\"><a href=\"#安装-scrcpy\" class=\"headerlink\" title=\"安装 scrcpy\"></a>安装 scrcpy</h1><p><code>brew install scrcpy</code><br>连接上安卓手机之后就行</p>\n"},{"title":"Mac前端上手指南","date":"2019-02-11T03:41:57.000Z","_content":"\n# Mac 前端上手指南\n\n> MAC 是一个强大的生产力工具，但是因为 g\\*w 的原因以及网速的原因，还是需要一些优化和调整的\n\n[![](https://badge.juejin.im/entry/5c60eb815188256283253592/likes.svg?style=flat-square)](https://juejin.im/post/5c60eb5f51882524c84efba3)\n\n# [Homebrew](https://brew.sh/)\n\n> 一个强大的安装包管理工具.\n>\n> macOS 缺失的软件包的管理器\n\n## 安装\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n将以上命令粘贴至终端。\n\n脚本会在执行前暂停，并说明将它将做什么。高级安装选项在 这里 (required for Linux and Windows 10 Subsystem for Linux)。\n\n## 替换源\n\n> 参考[清华](https://mirror.tuna.tsinghua.edu.cn/help/homebrew/)的加速器\n\n### 替换现有上游\n\n```bash\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\n\nbrew update\n\n```\n\n### 使用 homebrew-science 或者 homebrew-python\n\n```bash\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-science\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-science.git\n\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-python\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-python.git\n\nbrew update\n```\n\n# 优化命令行-改用 zsh\n\n> 使用 mac 的一个原因就是因为强大的命令行，原生终端已经很好了，但是还是可以进一步进行优化的\n\n## 安装 iterm2\n\n> 比终端好用的多的终端\n\n[官网下载](https://www.iterm2.com/)然后进行安装即可\n\n## zsh\n\n> zsh 兼容 bash 但是显示的细节更丰富\n\n![](https://upload-images.jianshu.io/upload_images/1864602-ba00e01e48afab32.png)\n\n### Zsh 具有以下主要功能：\n\n- 开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。\n- 在用户启动的所有 shell 中共享命令历史。\n- 通过扩展的文件通配符，可以不利用外部命令达到 find 命令一般展开文件名。\n- 改进的变量与数组处理。\n- 在缓冲区中编辑多行命令。\n- 多种兼容模式，例如使用/bin/sh 运行时可以伪装成 Bourne shell。\n  可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏。\n- 可加载的模块，提供其他各种支持：完整的 TCP 与 Unix 域套接字控制，\n- FTP 客户端与扩充过的数学函数。\n- 完全可定制化。\n\n### 安装\n\n自带的，iterm2 安装完之后文件夹都帮你建立好了\n\n### 启动\n\n```bash\nchsh -s /bin/zsh\n```\n\n### 美化\n\n#### 安装 oh my zsh\n\n```\nwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n```\n\n#### [更换主题和插件](https://www.jianshu.com/p/d194d29e488c?open_source=weibo_search)\n\n```\n修改主题：\n\n$ vim ~/.zshrc\n将ZSH_THEME改成ys\n\nZSH_THEME=\"ys\"\n更新配置：\n\n$ source ~/.zshrc\n```\n\n# node\n\n> 改用淘宝镜像 这样还能防止一些包要从国外下载源码再编译造成的问题\n\n## 安装原生的 node\n\n```\nbrew install node\n```\n\n## 升级为国内的[taobao 版](https://npm.taobao.org/)\n\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n```\n\n## node 版本管理\n\n> 讲道理，n 超级好用\n\n```\ncnpm i -g n\n```\n\n# VSCODE\n\n> 最强编辑器-之一\n\n安装插件可以参考以前的文章[vscode 插件分享](https://www.mizuka.top/2018/11/09/vscode%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/)\n","source":"_posts/Mac前端上手指南.md","raw":"---\ntitle: Mac前端上手指南\ntags:\n  - 前端\n  - 上手指南\n  - MAC\n  - 经验\ndate: 2019-02-11 11:41:57\ncategories: 可以公开的情报\n---\n\n# Mac 前端上手指南\n\n> MAC 是一个强大的生产力工具，但是因为 g\\*w 的原因以及网速的原因，还是需要一些优化和调整的\n\n[![](https://badge.juejin.im/entry/5c60eb815188256283253592/likes.svg?style=flat-square)](https://juejin.im/post/5c60eb5f51882524c84efba3)\n\n# [Homebrew](https://brew.sh/)\n\n> 一个强大的安装包管理工具.\n>\n> macOS 缺失的软件包的管理器\n\n## 安装\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n将以上命令粘贴至终端。\n\n脚本会在执行前暂停，并说明将它将做什么。高级安装选项在 这里 (required for Linux and Windows 10 Subsystem for Linux)。\n\n## 替换源\n\n> 参考[清华](https://mirror.tuna.tsinghua.edu.cn/help/homebrew/)的加速器\n\n### 替换现有上游\n\n```bash\ncd \"$(brew --repo)\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git\n\nbrew update\n\n```\n\n### 使用 homebrew-science 或者 homebrew-python\n\n```bash\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-science\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-science.git\n\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-python\"\ngit remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-python.git\n\nbrew update\n```\n\n# 优化命令行-改用 zsh\n\n> 使用 mac 的一个原因就是因为强大的命令行，原生终端已经很好了，但是还是可以进一步进行优化的\n\n## 安装 iterm2\n\n> 比终端好用的多的终端\n\n[官网下载](https://www.iterm2.com/)然后进行安装即可\n\n## zsh\n\n> zsh 兼容 bash 但是显示的细节更丰富\n\n![](https://upload-images.jianshu.io/upload_images/1864602-ba00e01e48afab32.png)\n\n### Zsh 具有以下主要功能：\n\n- 开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。\n- 在用户启动的所有 shell 中共享命令历史。\n- 通过扩展的文件通配符，可以不利用外部命令达到 find 命令一般展开文件名。\n- 改进的变量与数组处理。\n- 在缓冲区中编辑多行命令。\n- 多种兼容模式，例如使用/bin/sh 运行时可以伪装成 Bourne shell。\n  可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏。\n- 可加载的模块，提供其他各种支持：完整的 TCP 与 Unix 域套接字控制，\n- FTP 客户端与扩充过的数学函数。\n- 完全可定制化。\n\n### 安装\n\n自带的，iterm2 安装完之后文件夹都帮你建立好了\n\n### 启动\n\n```bash\nchsh -s /bin/zsh\n```\n\n### 美化\n\n#### 安装 oh my zsh\n\n```\nwget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh\n```\n\n#### [更换主题和插件](https://www.jianshu.com/p/d194d29e488c?open_source=weibo_search)\n\n```\n修改主题：\n\n$ vim ~/.zshrc\n将ZSH_THEME改成ys\n\nZSH_THEME=\"ys\"\n更新配置：\n\n$ source ~/.zshrc\n```\n\n# node\n\n> 改用淘宝镜像 这样还能防止一些包要从国外下载源码再编译造成的问题\n\n## 安装原生的 node\n\n```\nbrew install node\n```\n\n## 升级为国内的[taobao 版](https://npm.taobao.org/)\n\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n\n```\n\n## node 版本管理\n\n> 讲道理，n 超级好用\n\n```\ncnpm i -g n\n```\n\n# VSCODE\n\n> 最强编辑器-之一\n\n安装插件可以参考以前的文章[vscode 插件分享](https://www.mizuka.top/2018/11/09/vscode%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/)\n","slug":"Mac前端上手指南","published":1,"updated":"2019-02-11T03:44:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxge0004w6ilakzcg135","content":"<h1 id=\"Mac-前端上手指南\"><a href=\"#Mac-前端上手指南\" class=\"headerlink\" title=\"Mac 前端上手指南\"></a>Mac 前端上手指南</h1><blockquote>\n<p>MAC 是一个强大的生产力工具，但是因为 g*w 的原因以及网速的原因，还是需要一些优化和调整的</p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5c60eb5f51882524c84efba3\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5c60eb815188256283253592/likes.svg?style=flat-square\" alt></a></p>\n<h1 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a><a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a></h1><blockquote>\n<p>一个强大的安装包管理工具.</p>\n<p>macOS 缺失的软件包的管理器</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n<p>将以上命令粘贴至终端。</p>\n<p>脚本会在执行前暂停，并说明将它将做什么。高级安装选项在 这里 (required for Linux and Windows 10 Subsystem for Linux)。</p>\n<h2 id=\"替换源\"><a href=\"#替换源\" class=\"headerlink\" title=\"替换源\"></a>替换源</h2><blockquote>\n<p>参考<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/homebrew/\" target=\"_blank\" rel=\"noopener\">清华</a>的加速器</p>\n</blockquote>\n<h3 id=\"替换现有上游\"><a href=\"#替换现有上游\" class=\"headerlink\" title=\"替换现有上游\"></a>替换现有上游</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class=\"line\"></span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-homebrew-science-或者-homebrew-python\"><a href=\"#使用-homebrew-science-或者-homebrew-python\" class=\"headerlink\" title=\"使用 homebrew-science 或者 homebrew-python\"></a>使用 homebrew-science 或者 homebrew-python</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-science\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-science.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-python\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-python.git</span><br><span class=\"line\"></span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\n<h1 id=\"优化命令行-改用-zsh\"><a href=\"#优化命令行-改用-zsh\" class=\"headerlink\" title=\"优化命令行-改用 zsh\"></a>优化命令行-改用 zsh</h1><blockquote>\n<p>使用 mac 的一个原因就是因为强大的命令行，原生终端已经很好了，但是还是可以进一步进行优化的</p>\n</blockquote>\n<h2 id=\"安装-iterm2\"><a href=\"#安装-iterm2\" class=\"headerlink\" title=\"安装 iterm2\"></a>安装 iterm2</h2><blockquote>\n<p>比终端好用的多的终端</p>\n</blockquote>\n<p><a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"noopener\">官网下载</a>然后进行安装即可</p>\n<h2 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h2><blockquote>\n<p>zsh 兼容 bash 但是显示的细节更丰富</p>\n</blockquote>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1864602-ba00e01e48afab32.png\" alt></p>\n<h3 id=\"Zsh-具有以下主要功能：\"><a href=\"#Zsh-具有以下主要功能：\" class=\"headerlink\" title=\"Zsh 具有以下主要功能：\"></a>Zsh 具有以下主要功能：</h3><ul>\n<li>开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。</li>\n<li>在用户启动的所有 shell 中共享命令历史。</li>\n<li>通过扩展的文件通配符，可以不利用外部命令达到 find 命令一般展开文件名。</li>\n<li>改进的变量与数组处理。</li>\n<li>在缓冲区中编辑多行命令。</li>\n<li>多种兼容模式，例如使用/bin/sh 运行时可以伪装成 Bourne shell。<br>可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏。</li>\n<li>可加载的模块，提供其他各种支持：完整的 TCP 与 Unix 域套接字控制，</li>\n<li>FTP 客户端与扩充过的数学函数。</li>\n<li>完全可定制化。</li>\n</ul>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>自带的，iterm2 安装完之后文件夹都帮你建立好了</p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n<h3 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a>美化</h3><h4 id=\"安装-oh-my-zsh\"><a href=\"#安装-oh-my-zsh\" class=\"headerlink\" title=\"安装 oh my zsh\"></a>安装 oh my zsh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"更换主题和插件\"><a href=\"#更换主题和插件\" class=\"headerlink\" title=\"更换主题和插件\"></a><a href=\"https://www.jianshu.com/p/d194d29e488c?open_source=weibo_search\" target=\"_blank\" rel=\"noopener\">更换主题和插件</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改主题：</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim ~/.zshrc</span><br><span class=\"line\">将ZSH_THEME改成ys</span><br><span class=\"line\"></span><br><span class=\"line\">ZSH_THEME=&quot;ys&quot;</span><br><span class=\"line\">更新配置：</span><br><span class=\"line\"></span><br><span class=\"line\">$ source ~/.zshrc</span><br></pre></td></tr></table></figure>\n<h1 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h1><blockquote>\n<p>改用淘宝镜像 这样还能防止一些包要从国外下载源码再编译造成的问题</p>\n</blockquote>\n<h2 id=\"安装原生的-node\"><a href=\"#安装原生的-node\" class=\"headerlink\" title=\"安装原生的 node\"></a>安装原生的 node</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n<h2 id=\"升级为国内的taobao-版\"><a href=\"#升级为国内的taobao-版\" class=\"headerlink\" title=\"升级为国内的taobao 版\"></a>升级为国内的<a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">taobao 版</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h2 id=\"node-版本管理\"><a href=\"#node-版本管理\" class=\"headerlink\" title=\"node 版本管理\"></a>node 版本管理</h2><blockquote>\n<p>讲道理，n 超级好用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm i -g n</span><br></pre></td></tr></table></figure>\n<h1 id=\"VSCODE\"><a href=\"#VSCODE\" class=\"headerlink\" title=\"VSCODE\"></a>VSCODE</h1><blockquote>\n<p>最强编辑器-之一</p>\n</blockquote>\n<p>安装插件可以参考以前的文章<a href=\"https://www.mizuka.top/2018/11/09/vscode%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/\">vscode 插件分享</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mac-前端上手指南\"><a href=\"#Mac-前端上手指南\" class=\"headerlink\" title=\"Mac 前端上手指南\"></a>Mac 前端上手指南</h1><blockquote>\n<p>MAC 是一个强大的生产力工具，但是因为 g*w 的原因以及网速的原因，还是需要一些优化和调整的</p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5c60eb5f51882524c84efba3\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5c60eb815188256283253592/likes.svg?style=flat-square\" alt></a></p>\n<h1 id=\"Homebrew\"><a href=\"#Homebrew\" class=\"headerlink\" title=\"Homebrew\"></a><a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a></h1><blockquote>\n<p>一个强大的安装包管理工具.</p>\n<p>macOS 缺失的软件包的管理器</p>\n</blockquote>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n<p>将以上命令粘贴至终端。</p>\n<p>脚本会在执行前暂停，并说明将它将做什么。高级安装选项在 这里 (required for Linux and Windows 10 Subsystem for Linux)。</p>\n<h2 id=\"替换源\"><a href=\"#替换源\" class=\"headerlink\" title=\"替换源\"></a>替换源</h2><blockquote>\n<p>参考<a href=\"https://mirror.tuna.tsinghua.edu.cn/help/homebrew/\" target=\"_blank\" rel=\"noopener\">清华</a>的加速器</p>\n</blockquote>\n<h3 id=\"替换现有上游\"><a href=\"#替换现有上游\" class=\"headerlink\" title=\"替换现有上游\"></a>替换现有上游</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class=\"line\"></span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用-homebrew-science-或者-homebrew-python\"><a href=\"#使用-homebrew-science-或者-homebrew-python\" class=\"headerlink\" title=\"使用 homebrew-science 或者 homebrew-python\"></a>使用 homebrew-science 或者 homebrew-python</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-science\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-science.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">\"<span class=\"variable\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-python\"</span></span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-python.git</span><br><span class=\"line\"></span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\n<h1 id=\"优化命令行-改用-zsh\"><a href=\"#优化命令行-改用-zsh\" class=\"headerlink\" title=\"优化命令行-改用 zsh\"></a>优化命令行-改用 zsh</h1><blockquote>\n<p>使用 mac 的一个原因就是因为强大的命令行，原生终端已经很好了，但是还是可以进一步进行优化的</p>\n</blockquote>\n<h2 id=\"安装-iterm2\"><a href=\"#安装-iterm2\" class=\"headerlink\" title=\"安装 iterm2\"></a>安装 iterm2</h2><blockquote>\n<p>比终端好用的多的终端</p>\n</blockquote>\n<p><a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"noopener\">官网下载</a>然后进行安装即可</p>\n<h2 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h2><blockquote>\n<p>zsh 兼容 bash 但是显示的细节更丰富</p>\n</blockquote>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/1864602-ba00e01e48afab32.png\" alt></p>\n<h3 id=\"Zsh-具有以下主要功能：\"><a href=\"#Zsh-具有以下主要功能：\" class=\"headerlink\" title=\"Zsh 具有以下主要功能：\"></a>Zsh 具有以下主要功能：</h3><ul>\n<li>开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。</li>\n<li>在用户启动的所有 shell 中共享命令历史。</li>\n<li>通过扩展的文件通配符，可以不利用外部命令达到 find 命令一般展开文件名。</li>\n<li>改进的变量与数组处理。</li>\n<li>在缓冲区中编辑多行命令。</li>\n<li>多种兼容模式，例如使用/bin/sh 运行时可以伪装成 Bourne shell。<br>可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏。</li>\n<li>可加载的模块，提供其他各种支持：完整的 TCP 与 Unix 域套接字控制，</li>\n<li>FTP 客户端与扩充过的数学函数。</li>\n<li>完全可定制化。</li>\n</ul>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>自带的，iterm2 安装完之后文件夹都帮你建立好了</p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>\n<h3 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a>美化</h3><h4 id=\"安装-oh-my-zsh\"><a href=\"#安装-oh-my-zsh\" class=\"headerlink\" title=\"安装 oh my zsh\"></a>安装 oh my zsh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"更换主题和插件\"><a href=\"#更换主题和插件\" class=\"headerlink\" title=\"更换主题和插件\"></a><a href=\"https://www.jianshu.com/p/d194d29e488c?open_source=weibo_search\" target=\"_blank\" rel=\"noopener\">更换主题和插件</a></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改主题：</span><br><span class=\"line\"></span><br><span class=\"line\">$ vim ~/.zshrc</span><br><span class=\"line\">将ZSH_THEME改成ys</span><br><span class=\"line\"></span><br><span class=\"line\">ZSH_THEME=&quot;ys&quot;</span><br><span class=\"line\">更新配置：</span><br><span class=\"line\"></span><br><span class=\"line\">$ source ~/.zshrc</span><br></pre></td></tr></table></figure>\n<h1 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h1><blockquote>\n<p>改用淘宝镜像 这样还能防止一些包要从国外下载源码再编译造成的问题</p>\n</blockquote>\n<h2 id=\"安装原生的-node\"><a href=\"#安装原生的-node\" class=\"headerlink\" title=\"安装原生的 node\"></a>安装原生的 node</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n<h2 id=\"升级为国内的taobao-版\"><a href=\"#升级为国内的taobao-版\" class=\"headerlink\" title=\"升级为国内的taobao 版\"></a>升级为国内的<a href=\"https://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">taobao 版</a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<h2 id=\"node-版本管理\"><a href=\"#node-版本管理\" class=\"headerlink\" title=\"node 版本管理\"></a>node 版本管理</h2><blockquote>\n<p>讲道理，n 超级好用</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm i -g n</span><br></pre></td></tr></table></figure>\n<h1 id=\"VSCODE\"><a href=\"#VSCODE\" class=\"headerlink\" title=\"VSCODE\"></a>VSCODE</h1><blockquote>\n<p>最强编辑器-之一</p>\n</blockquote>\n<p>安装插件可以参考以前的文章<a href=\"https://www.mizuka.top/2018/11/09/vscode%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/\">vscode 插件分享</a></p>\n"},{"title":"RTAC86U刷机指南","date":"2018-12-15T09:32:01.000Z","header_image":"https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg","_content":"# 搬家之后当然要换一个更好的路由器啦\n> koolshare看到的推荐，新的架构 \b还是华硕出品趁着双十二就入手啦\n\n![](https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg)\n\n当然只是选择了一个最简单的刷机方式，原版刷官改\n具体直接参考[原版帖子](http://koolshare.cn/thread-139965-1-1.html)\n\n## 特色\n1. 同步华硕官方代码 \n2. koolshare软件中心支持\n3. ROG信仰皮肤加成\n\n# 刷机方法\n在固件升级页面下直接上传.w 后缀的固件文件\n## 固件下载\n384_32799\nMD5: 3E477C01D18CD455362B61DCCBF33652\nSHA1: A2C496EE545A94EADAC4CEC3C9B3A381B1B4ABB2\nhttp://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w\n\n## 刷虚拟内存\n> 这个路由器最大的问题在于\b架构变更之后，内存占的很厉害，所以需要刷官改的另一个原因就是需要安装虚拟内存\n\n虚拟内存需要挂载一个格式为ext4（ext3）的u盘\n### 格式化的方法\n#### osx\n如果没有 Homebrew 的话，需要先安装 Homebrew：\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n安装 e2fsprogs\n\nbrew install e2fsprogs\n\n把 U 盘插到 Mac 上，执行：\n\ndiskutil list\n\n找到自己 U 盘的盘符，比如我这里是：/dev/disk3s1，\n\n```/dev/disk3 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *30.8 GB    disk3\n   1:             Windows_FAT_32 SANDISK                 30.8 GB    disk3s1\n```\n然后执行格式化：\n\n```\ndiskutil unmountdisk /dev/disk3s1\nsudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext4 /dev/disk3s1\n```\n\n执行命令后会要求输入用户密码，然后输入 y 确认。\n\n#### win\n下一个\b[minitools](https://www.minitool.com/)\n\n### 加虚拟内存\n\n![软件中心](https://image.koolshare.cn/attachment/forum/201805/18/180949ce1sxrpcmqcxxyep.jpg)\n进软件中心下载就好啦\n\n# 重点，不可描述，红色小飞机插件\n[gayhub](https://github.com/hq450/fancyss) 注意架构，下载完了\b之后离线安装\n\nhave a nice day\n","source":"_posts/RTAC86U刷机指南.md","raw":"---\ntitle: RTAC86U刷机指南\ntags:\n  - RTAC86U\n  - 乳酸菌\n  - gfw\n  - 插件\ndate: 2018-12-15 17:32:01\ncategories: 可以公开的情报\nheader_image: https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg\n---\n# 搬家之后当然要换一个更好的路由器啦\n> koolshare看到的推荐，新的架构 \b还是华硕出品趁着双十二就入手啦\n\n![](https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg)\n\n当然只是选择了一个最简单的刷机方式，原版刷官改\n具体直接参考[原版帖子](http://koolshare.cn/thread-139965-1-1.html)\n\n## 特色\n1. 同步华硕官方代码 \n2. koolshare软件中心支持\n3. ROG信仰皮肤加成\n\n# 刷机方法\n在固件升级页面下直接上传.w 后缀的固件文件\n## 固件下载\n384_32799\nMD5: 3E477C01D18CD455362B61DCCBF33652\nSHA1: A2C496EE545A94EADAC4CEC3C9B3A381B1B4ABB2\nhttp://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w\n\n## 刷虚拟内存\n> 这个路由器最大的问题在于\b架构变更之后，内存占的很厉害，所以需要刷官改的另一个原因就是需要安装虚拟内存\n\n虚拟内存需要挂载一个格式为ext4（ext3）的u盘\n### 格式化的方法\n#### osx\n如果没有 Homebrew 的话，需要先安装 Homebrew：\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n安装 e2fsprogs\n\nbrew install e2fsprogs\n\n把 U 盘插到 Mac 上，执行：\n\ndiskutil list\n\n找到自己 U 盘的盘符，比如我这里是：/dev/disk3s1，\n\n```/dev/disk3 (external, physical):\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\n   0:     FDisk_partition_scheme                        *30.8 GB    disk3\n   1:             Windows_FAT_32 SANDISK                 30.8 GB    disk3s1\n```\n然后执行格式化：\n\n```\ndiskutil unmountdisk /dev/disk3s1\nsudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext4 /dev/disk3s1\n```\n\n执行命令后会要求输入用户密码，然后输入 y 确认。\n\n#### win\n下一个\b[minitools](https://www.minitool.com/)\n\n### 加虚拟内存\n\n![软件中心](https://image.koolshare.cn/attachment/forum/201805/18/180949ce1sxrpcmqcxxyep.jpg)\n进软件中心下载就好啦\n\n# 重点，不可描述，红色小飞机插件\n[gayhub](https://github.com/hq450/fancyss) 注意架构，下载完了\b之后离线安装\n\nhave a nice day\n","slug":"RTAC86U刷机指南","published":1,"updated":"2018-12-15T12:22:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxgj0006w6ilgm010o65","content":"<h1 id=\"搬家之后当然要换一个更好的路由器啦\"><a href=\"#搬家之后当然要换一个更好的路由器啦\" class=\"headerlink\" title=\"搬家之后当然要换一个更好的路由器啦\"></a>搬家之后当然要换一个更好的路由器啦</h1><blockquote>\n<p>koolshare看到的推荐，新的架构 \b还是华硕出品趁着双十二就入手啦</p>\n</blockquote>\n<p><img src=\"https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg\" alt></p>\n<p>当然只是选择了一个最简单的刷机方式，原版刷官改<br>具体直接参考<a href=\"http://koolshare.cn/thread-139965-1-1.html\" target=\"_blank\" rel=\"noopener\">原版帖子</a></p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ol>\n<li>同步华硕官方代码 </li>\n<li>koolshare软件中心支持</li>\n<li>ROG信仰皮肤加成</li>\n</ol>\n<h1 id=\"刷机方法\"><a href=\"#刷机方法\" class=\"headerlink\" title=\"刷机方法\"></a>刷机方法</h1><p>在固件升级页面下直接上传.w 后缀的固件文件</p>\n<h2 id=\"固件下载\"><a href=\"#固件下载\" class=\"headerlink\" title=\"固件下载\"></a>固件下载</h2><p>384_32799<br>MD5: 3E477C01D18CD455362B61DCCBF33652<br>SHA1: A2C496EE545A94EADAC4CEC3C9B3A381B1B4ABB2<br><a href=\"http://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w\" target=\"_blank\" rel=\"noopener\">http://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w</a></p>\n<h2 id=\"刷虚拟内存\"><a href=\"#刷虚拟内存\" class=\"headerlink\" title=\"刷虚拟内存\"></a>刷虚拟内存</h2><blockquote>\n<p>这个路由器最大的问题在于\b架构变更之后，内存占的很厉害，所以需要刷官改的另一个原因就是需要安装虚拟内存</p>\n</blockquote>\n<p>虚拟内存需要挂载一个格式为ext4（ext3）的u盘</p>\n<h3 id=\"格式化的方法\"><a href=\"#格式化的方法\" class=\"headerlink\" title=\"格式化的方法\"></a>格式化的方法</h3><h4 id=\"osx\"><a href=\"#osx\" class=\"headerlink\" title=\"osx\"></a>osx</h4><p>如果没有 Homebrew 的话，需要先安装 Homebrew：</p>\n<p>/usr/bin/ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</a></p>\n<p>安装 e2fsprogs</p>\n<p>brew install e2fsprogs</p>\n<p>把 U 盘插到 Mac 上，执行：</p>\n<p>diskutil list</p>\n<p>找到自己 U 盘的盘符，比如我这里是：/dev/disk3s1，</p>\n<figure class=\"highlight plain\"><figcaption><span>(external, physical):</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">0:     FDisk_partition_scheme                        *30.8 GB    disk3</span><br><span class=\"line\">1:             Windows_FAT_32 SANDISK                 30.8 GB    disk3s1</span><br></pre></td></tr></table></figure>\n<p>然后执行格式化：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil unmountdisk /dev/disk3s1</span><br><span class=\"line\">sudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext4 /dev/disk3s1</span><br></pre></td></tr></table></figure>\n<p>执行命令后会要求输入用户密码，然后输入 y 确认。</p>\n<h4 id=\"win\"><a href=\"#win\" class=\"headerlink\" title=\"win\"></a>win</h4><p>下一个\b<a href=\"https://www.minitool.com/\" target=\"_blank\" rel=\"noopener\">minitools</a></p>\n<h3 id=\"加虚拟内存\"><a href=\"#加虚拟内存\" class=\"headerlink\" title=\"加虚拟内存\"></a>加虚拟内存</h3><p><img src=\"https://image.koolshare.cn/attachment/forum/201805/18/180949ce1sxrpcmqcxxyep.jpg\" alt=\"软件中心\"><br>进软件中心下载就好啦</p>\n<h1 id=\"重点，不可描述，红色小飞机插件\"><a href=\"#重点，不可描述，红色小飞机插件\" class=\"headerlink\" title=\"重点，不可描述，红色小飞机插件\"></a>重点，不可描述，红色小飞机插件</h1><p><a href=\"https://github.com/hq450/fancyss\" target=\"_blank\" rel=\"noopener\">gayhub</a> 注意架构，下载完了\b之后离线安装</p>\n<p>have a nice day</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"搬家之后当然要换一个更好的路由器啦\"><a href=\"#搬家之后当然要换一个更好的路由器啦\" class=\"headerlink\" title=\"搬家之后当然要换一个更好的路由器啦\"></a>搬家之后当然要换一个更好的路由器啦</h1><blockquote>\n<p>koolshare看到的推荐，新的架构 \b还是华硕出品趁着双十二就入手啦</p>\n</blockquote>\n<p><img src=\"https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/rtac86u/IMG_4420.jpeg\" alt></p>\n<p>当然只是选择了一个最简单的刷机方式，原版刷官改<br>具体直接参考<a href=\"http://koolshare.cn/thread-139965-1-1.html\" target=\"_blank\" rel=\"noopener\">原版帖子</a></p>\n<h2 id=\"特色\"><a href=\"#特色\" class=\"headerlink\" title=\"特色\"></a>特色</h2><ol>\n<li>同步华硕官方代码 </li>\n<li>koolshare软件中心支持</li>\n<li>ROG信仰皮肤加成</li>\n</ol>\n<h1 id=\"刷机方法\"><a href=\"#刷机方法\" class=\"headerlink\" title=\"刷机方法\"></a>刷机方法</h1><p>在固件升级页面下直接上传.w 后缀的固件文件</p>\n<h2 id=\"固件下载\"><a href=\"#固件下载\" class=\"headerlink\" title=\"固件下载\"></a>固件下载</h2><p>384_32799<br>MD5: 3E477C01D18CD455362B61DCCBF33652<br>SHA1: A2C496EE545A94EADAC4CEC3C9B3A381B1B4ABB2<br><a href=\"http://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w\" target=\"_blank\" rel=\"noopener\">http://firmware.koolshare.cn/Koolshare_ASUS_Official_Mod/RT-AC86U_3.0.0.4.384.32799/RT-AC86U_384_32799_koolshare_cferom_ubi.w</a></p>\n<h2 id=\"刷虚拟内存\"><a href=\"#刷虚拟内存\" class=\"headerlink\" title=\"刷虚拟内存\"></a>刷虚拟内存</h2><blockquote>\n<p>这个路由器最大的问题在于\b架构变更之后，内存占的很厉害，所以需要刷官改的另一个原因就是需要安装虚拟内存</p>\n</blockquote>\n<p>虚拟内存需要挂载一个格式为ext4（ext3）的u盘</p>\n<h3 id=\"格式化的方法\"><a href=\"#格式化的方法\" class=\"headerlink\" title=\"格式化的方法\"></a>格式化的方法</h3><h4 id=\"osx\"><a href=\"#osx\" class=\"headerlink\" title=\"osx\"></a>osx</h4><p>如果没有 Homebrew 的话，需要先安装 Homebrew：</p>\n<p>/usr/bin/ruby -e “$(curl -fsSL <a href=\"https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;\" target=\"_blank\" rel=\"noopener\">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</a></p>\n<p>安装 e2fsprogs</p>\n<p>brew install e2fsprogs</p>\n<p>把 U 盘插到 Mac 上，执行：</p>\n<p>diskutil list</p>\n<p>找到自己 U 盘的盘符，比如我这里是：/dev/disk3s1，</p>\n<figure class=\"highlight plain\"><figcaption><span>(external, physical):</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#:                       TYPE NAME                    SIZE       IDENTIFIER</span><br><span class=\"line\">0:     FDisk_partition_scheme                        *30.8 GB    disk3</span><br><span class=\"line\">1:             Windows_FAT_32 SANDISK                 30.8 GB    disk3s1</span><br></pre></td></tr></table></figure>\n<p>然后执行格式化：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskutil unmountdisk /dev/disk3s1</span><br><span class=\"line\">sudo $(brew --prefix e2fsprogs)/sbin/mkfs.ext4 /dev/disk3s1</span><br></pre></td></tr></table></figure>\n<p>执行命令后会要求输入用户密码，然后输入 y 确认。</p>\n<h4 id=\"win\"><a href=\"#win\" class=\"headerlink\" title=\"win\"></a>win</h4><p>下一个\b<a href=\"https://www.minitool.com/\" target=\"_blank\" rel=\"noopener\">minitools</a></p>\n<h3 id=\"加虚拟内存\"><a href=\"#加虚拟内存\" class=\"headerlink\" title=\"加虚拟内存\"></a>加虚拟内存</h3><p><img src=\"https://image.koolshare.cn/attachment/forum/201805/18/180949ce1sxrpcmqcxxyep.jpg\" alt=\"软件中心\"><br>进软件中心下载就好啦</p>\n<h1 id=\"重点，不可描述，红色小飞机插件\"><a href=\"#重点，不可描述，红色小飞机插件\" class=\"headerlink\" title=\"重点，不可描述，红色小飞机插件\"></a>重点，不可描述，红色小飞机插件</h1><p><a href=\"https://github.com/hq450/fancyss\" target=\"_blank\" rel=\"noopener\">gayhub</a> 注意架构，下载完了\b之后离线安装</p>\n<p>have a nice day</p>\n"},{"title":"android导致文字偏上的问题","date":"2018-12-04T10:17:35.000Z","_content":"# 问题\n![](https://upload-images.jianshu.io/upload_images/1401034-3d1a4becc0dbd1bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/670/format/webp)\n移动端android有时候总是不居中，经过搜索，大概就是因为webview不支持奇数字号 例如\n```\n.class {\n   line-height: 13px;\n   font-size: 13px;\n}\n```\n或者(rem可能生成的字号为奇数)\n```\n.class {\n   line-height: 5rem;\n   font-size: 5rem;\n}\n```\n\n# 解决方案\n## scale\n```\n    font-size: 26px; // *2\n    transform: scale(.5);\n```\n\n## table布局(flex 同理)\n```\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n```\n\n## line-height\n```\n    line-height: normal;\n```","source":"_posts/android导致文字偏上的问题.md","raw":"---\ntitle: android导致文字偏上的问题\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\n  - android\n  - line-height\n  - font-size\ndate: 2018-12-04 18:17:35\ncategories:\n---\n# 问题\n![](https://upload-images.jianshu.io/upload_images/1401034-3d1a4becc0dbd1bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/670/format/webp)\n移动端android有时候总是不居中，经过搜索，大概就是因为webview不支持奇数字号 例如\n```\n.class {\n   line-height: 13px;\n   font-size: 13px;\n}\n```\n或者(rem可能生成的字号为奇数)\n```\n.class {\n   line-height: 5rem;\n   font-size: 5rem;\n}\n```\n\n# 解决方案\n## scale\n```\n    font-size: 26px; // *2\n    transform: scale(.5);\n```\n\n## table布局(flex 同理)\n```\n    display: table-cell;\n    text-align: center;\n    vertical-align: middle;\n```\n\n## line-height\n```\n    line-height: normal;\n```","slug":"android导致文字偏上的问题","published":1,"updated":"2018-12-04T10:27:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxgm0008w6il18vdbqt3","content":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p><img src=\"https://upload-images.jianshu.io/upload_images/1401034-3d1a4becc0dbd1bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/670/format/webp\" alt><br>移动端android有时候总是不居中，经过搜索，大概就是因为webview不支持奇数字号 例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class &#123;</span><br><span class=\"line\">   line-height: 13px;</span><br><span class=\"line\">   font-size: 13px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>或者(rem可能生成的字号为奇数)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class &#123;</span><br><span class=\"line\">   line-height: 5rem;</span><br><span class=\"line\">   font-size: 5rem;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><h2 id=\"scale\"><a href=\"#scale\" class=\"headerlink\" title=\"scale\"></a>scale</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-size: 26px; // *2</span><br><span class=\"line\">transform: scale(.5);</span><br></pre></td></tr></table></figure>\n<h2 id=\"table布局-flex-同理\"><a href=\"#table布局-flex-同理\" class=\"headerlink\" title=\"table布局(flex 同理)\"></a>table布局(flex 同理)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display: table-cell;</span><br><span class=\"line\">text-align: center;</span><br><span class=\"line\">vertical-align: middle;</span><br></pre></td></tr></table></figure>\n<h2 id=\"line-height\"><a href=\"#line-height\" class=\"headerlink\" title=\"line-height\"></a>line-height</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">line-height: normal;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><p><img src=\"https://upload-images.jianshu.io/upload_images/1401034-3d1a4becc0dbd1bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/670/format/webp\" alt><br>移动端android有时候总是不居中，经过搜索，大概就是因为webview不支持奇数字号 例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class &#123;</span><br><span class=\"line\">   line-height: 13px;</span><br><span class=\"line\">   font-size: 13px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>或者(rem可能生成的字号为奇数)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.class &#123;</span><br><span class=\"line\">   line-height: 5rem;</span><br><span class=\"line\">   font-size: 5rem;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><h2 id=\"scale\"><a href=\"#scale\" class=\"headerlink\" title=\"scale\"></a>scale</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-size: 26px; // *2</span><br><span class=\"line\">transform: scale(.5);</span><br></pre></td></tr></table></figure>\n<h2 id=\"table布局-flex-同理\"><a href=\"#table布局-flex-同理\" class=\"headerlink\" title=\"table布局(flex 同理)\"></a>table布局(flex 同理)</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">display: table-cell;</span><br><span class=\"line\">text-align: center;</span><br><span class=\"line\">vertical-align: middle;</span><br></pre></td></tr></table></figure>\n<h2 id=\"line-height\"><a href=\"#line-height\" class=\"headerlink\" title=\"line-height\"></a>line-height</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">line-height: normal;</span><br></pre></td></tr></table></figure>"},{"title":"axios兜底错误处理","date":"2019-09-04T10:11:57.000Z","_content":"\n# axios的兜底报错\n\n项目的网络请求层使用了axios，axios是一个及其好用的库，但是在业务使用上出现了一些问题\n\n## 出现原因\n众所周知，前端一般通过ajax向后端请求数据然后处理后显示在网页/app上，当然人都是懒得，总是希望有一些自动完成的事，比如这一次，如果不是需要特殊处理的特定错误，直接弹toast结束。\n\n错误处理还是很容易，axios增加拦截器，如果是指定的错误，直接```throw new Error('错误')``` 剩下的交给```promise.catch```干就好了，问题集中在如何兜底这个catch，如果不处理，会变成```unhandledrejection```错误\n\n### 解决方案\n#### 最原始的方案\n高阶函数 throwMessage，自动在promise之后增加catch函数，问题是这个要记得手动引入，和自动这个理念还是有点区别的.  \n\n```javascript\n\nexport function throwMessage<T = any>(responsePromise: Promise<T>) {\n  return responsePromise.catch((e: Error) => {\n    console.error(`error`, e)\n    message.error(e.message)\n  })\n}\n```\n\n每次使用都要```throwMessage(promise)```容易忘，如果有必要，还要写**lint**规则防止忘记\n\n#### webpack方案\n既然打包的是webpack，那么使用webpack在转译原始代码的时候注入就好了嘛. 推荐一个[promise-catch-loader](https://github.com/xuqiang521/promise-catch-loader)自动处理好这一系列问题 具体因为没有太研究，不做展开\n\n\n#### 事件监听方案\n上文提到了，如果promise没有捕获错误，会自动变成unhandlered rejection错误，这个是可以全局监听的，具体[在MDN上可以看](https://developer.mozilla.org/zh-CN/docs/Web/Events/unhandledrejection)\n\n那么 我们在window上直接监听就好了\n\n```javascript\nwindow.addEventListener('unhandledrejection', event => {\n  event.preventDefault()\n});\n```\n问题是，太全局了\n\n\n#### 处理Promise链方案\n这种是最终处理的方案，当然也是最魔改的方案，考虑到**只运行在前端，内存溢出情况不多**，方能实现\n\naxios返回的是promise，promise是遵循PromiseA+方案，内部其实是有一条promise链的，我们的目的就在于，在promise链条的**最后一个promise**上挂上catch,反正预先被处理了最后一个也不会触发\n\n##### 问题来了\n如果你直接看promise的话，是只能看到，then，catch，finally这些方法的，并没办法看到promise链，也没办法顺着链访问到最后\n\n##### 如何解决\n我们的目标是将其变为链式结构，简单来说，只要每个then和catch都能记下他的后继即可。  \n所以最终我选择注入promise的两个方法\n\n##### 实现代码\n\n```typescript\n\n/**\n * 继承然后注入两个方法\n */\nexport class ChainedPromise<T> extends Promise<T> {\n  nextPromise?: Promise<any>\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    const promise = super.then(onfulfilled, onrejected)\n    this.nextPromise = promise\n    return promise\n  }\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    const promise = super.catch(onrejected)\n    this.nextPromise = promise\n    return promise\n  }\n}\n\n/**\n * 暴露给外面的方法，axios通过拦截器，通过封装service都能调用它来在入口处自动注入\n */\nfunction autoTravel<T>(promise: Promise<T>): Promise<T> {\n  const getLastPromise = function(promise: ChainedPromise<any>): Promise<any> {\n    if (promise.nextPromise) {\n      return getLastPromise(promise.nextPromise)\n    }\n    return promise\n  }\n\n  /**\n   * Promise内部的自动形成链条，就能顺着链条找到最后一个了\n   */\n  const autoTravelPromise = new ChainedPromise<T>((resolve, reject) => {\n    promise.then(resolve).catch(responseError => {\n  \t  // throwMessage为之前定义的，promise上自动加catch的方法\n      throwMessage(getLastPromise(autoTravelPromise))\n      reject(responseError)\n    })\n  })\n  return autoTravelPromise\n}\n\n\n```","source":"_posts/axios兜底错误处理.md","raw":"---\ntitle: axios兜底错误处理\ntags:\n  - 前端\n  - 经验\n  - axios\n  - promise\n  - 错误处理\ndate: 2019-09-04 18:11:57\ncategories: 可以公开的情报\n---\n\n# axios的兜底报错\n\n项目的网络请求层使用了axios，axios是一个及其好用的库，但是在业务使用上出现了一些问题\n\n## 出现原因\n众所周知，前端一般通过ajax向后端请求数据然后处理后显示在网页/app上，当然人都是懒得，总是希望有一些自动完成的事，比如这一次，如果不是需要特殊处理的特定错误，直接弹toast结束。\n\n错误处理还是很容易，axios增加拦截器，如果是指定的错误，直接```throw new Error('错误')``` 剩下的交给```promise.catch```干就好了，问题集中在如何兜底这个catch，如果不处理，会变成```unhandledrejection```错误\n\n### 解决方案\n#### 最原始的方案\n高阶函数 throwMessage，自动在promise之后增加catch函数，问题是这个要记得手动引入，和自动这个理念还是有点区别的.  \n\n```javascript\n\nexport function throwMessage<T = any>(responsePromise: Promise<T>) {\n  return responsePromise.catch((e: Error) => {\n    console.error(`error`, e)\n    message.error(e.message)\n  })\n}\n```\n\n每次使用都要```throwMessage(promise)```容易忘，如果有必要，还要写**lint**规则防止忘记\n\n#### webpack方案\n既然打包的是webpack，那么使用webpack在转译原始代码的时候注入就好了嘛. 推荐一个[promise-catch-loader](https://github.com/xuqiang521/promise-catch-loader)自动处理好这一系列问题 具体因为没有太研究，不做展开\n\n\n#### 事件监听方案\n上文提到了，如果promise没有捕获错误，会自动变成unhandlered rejection错误，这个是可以全局监听的，具体[在MDN上可以看](https://developer.mozilla.org/zh-CN/docs/Web/Events/unhandledrejection)\n\n那么 我们在window上直接监听就好了\n\n```javascript\nwindow.addEventListener('unhandledrejection', event => {\n  event.preventDefault()\n});\n```\n问题是，太全局了\n\n\n#### 处理Promise链方案\n这种是最终处理的方案，当然也是最魔改的方案，考虑到**只运行在前端，内存溢出情况不多**，方能实现\n\naxios返回的是promise，promise是遵循PromiseA+方案，内部其实是有一条promise链的，我们的目的就在于，在promise链条的**最后一个promise**上挂上catch,反正预先被处理了最后一个也不会触发\n\n##### 问题来了\n如果你直接看promise的话，是只能看到，then，catch，finally这些方法的，并没办法看到promise链，也没办法顺着链访问到最后\n\n##### 如何解决\n我们的目标是将其变为链式结构，简单来说，只要每个then和catch都能记下他的后继即可。  \n所以最终我选择注入promise的两个方法\n\n##### 实现代码\n\n```typescript\n\n/**\n * 继承然后注入两个方法\n */\nexport class ChainedPromise<T> extends Promise<T> {\n  nextPromise?: Promise<any>\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    const promise = super.then(onfulfilled, onrejected)\n    this.nextPromise = promise\n    return promise\n  }\n  catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<T | TResult> {\n    const promise = super.catch(onrejected)\n    this.nextPromise = promise\n    return promise\n  }\n}\n\n/**\n * 暴露给外面的方法，axios通过拦截器，通过封装service都能调用它来在入口处自动注入\n */\nfunction autoTravel<T>(promise: Promise<T>): Promise<T> {\n  const getLastPromise = function(promise: ChainedPromise<any>): Promise<any> {\n    if (promise.nextPromise) {\n      return getLastPromise(promise.nextPromise)\n    }\n    return promise\n  }\n\n  /**\n   * Promise内部的自动形成链条，就能顺着链条找到最后一个了\n   */\n  const autoTravelPromise = new ChainedPromise<T>((resolve, reject) => {\n    promise.then(resolve).catch(responseError => {\n  \t  // throwMessage为之前定义的，promise上自动加catch的方法\n      throwMessage(getLastPromise(autoTravelPromise))\n      reject(responseError)\n    })\n  })\n  return autoTravelPromise\n}\n\n\n```","slug":"axios兜底错误处理","published":1,"updated":"2019-09-04T10:01:51.336Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxgo0009w6ili495tqzl","content":"<h1 id=\"axios的兜底报错\"><a href=\"#axios的兜底报错\" class=\"headerlink\" title=\"axios的兜底报错\"></a>axios的兜底报错</h1><p>项目的网络请求层使用了axios，axios是一个及其好用的库，但是在业务使用上出现了一些问题</p>\n<h2 id=\"出现原因\"><a href=\"#出现原因\" class=\"headerlink\" title=\"出现原因\"></a>出现原因</h2><p>众所周知，前端一般通过ajax向后端请求数据然后处理后显示在网页/app上，当然人都是懒得，总是希望有一些自动完成的事，比如这一次，如果不是需要特殊处理的特定错误，直接弹toast结束。</p>\n<p>错误处理还是很容易，axios增加拦截器，如果是指定的错误，直接<figure class=\"highlight plain\"><figcaption><span>new Error('错误')``` 剩下的交给```promise.catch```干就好了，问题集中在如何兜底这个catch，如果不处理，会变成```unhandledrejection```错误</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 解决方案</span><br><span class=\"line\">#### 最原始的方案</span><br><span class=\"line\">高阶函数 throwMessage，自动在promise之后增加catch函数，问题是这个要记得手动引入，和自动这个理念还是有点区别的.  </span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\"></span><br><span class=\"line\">export function throwMessage&lt;T = any&gt;(responsePromise: Promise&lt;T&gt;) &#123;</span><br><span class=\"line\">  return responsePromise.catch((e: Error) =&gt; &#123;</span><br><span class=\"line\">    console.error(`error`, e)</span><br><span class=\"line\">    message.error(e.message)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>每次使用都要<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### webpack方案</span><br><span class=\"line\">既然打包的是webpack，那么使用webpack在转译原始代码的时候注入就好了嘛. 推荐一个[promise-catch-loader](https://github.com/xuqiang521/promise-catch-loader)自动处理好这一系列问题 具体因为没有太研究，不做展开</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#### 事件监听方案</span><br><span class=\"line\">上文提到了，如果promise没有捕获错误，会自动变成unhandlered rejection错误，这个是可以全局监听的，具体[在MDN上可以看](https://developer.mozilla.org/zh-CN/docs/Web/Events/unhandledrejection)</span><br><span class=\"line\"></span><br><span class=\"line\">那么 我们在window上直接监听就好了</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">window.addEventListener(&apos;unhandledrejection&apos;, event =&gt; &#123;</span><br><span class=\"line\">  event.preventDefault()</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>问题是，太全局了</p>\n<h4 id=\"处理Promise链方案\"><a href=\"#处理Promise链方案\" class=\"headerlink\" title=\"处理Promise链方案\"></a>处理Promise链方案</h4><p>这种是最终处理的方案，当然也是最魔改的方案，考虑到<strong>只运行在前端，内存溢出情况不多</strong>，方能实现</p>\n<p>axios返回的是promise，promise是遵循PromiseA+方案，内部其实是有一条promise链的，我们的目的就在于，在promise链条的<strong>最后一个promise</strong>上挂上catch,反正预先被处理了最后一个也不会触发</p>\n<h5 id=\"问题来了\"><a href=\"#问题来了\" class=\"headerlink\" title=\"问题来了\"></a>问题来了</h5><p>如果你直接看promise的话，是只能看到，then，catch，finally这些方法的，并没办法看到promise链，也没办法顺着链访问到最后</p>\n<h5 id=\"如何解决\"><a href=\"#如何解决\" class=\"headerlink\" title=\"如何解决\"></a>如何解决</h5><p>我们的目标是将其变为链式结构，简单来说，只要每个then和catch都能记下他的后继即可。<br>所以最终我选择注入promise的两个方法</p>\n<h5 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h5><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承然后注入两个方法</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> ChainedPromise&lt;T&gt; <span class=\"keyword\">extends</span> <span class=\"built_in\">Promise</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  nextPromise?: <span class=\"built_in\">Promise</span>&lt;<span class=\"built_in\">any</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  then&lt;TResult1 = T, TResult2 = never&gt;(</span><br><span class=\"line\">    onfulfilled?: <span class=\"function\">(<span class=\"params\">(<span class=\"params\">value: T</span>) =&gt; TResult1 | PromiseLike&lt;TResult1&gt;</span>) | <span class=\"params\">undefined</span> | <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">onrejected</span>?: (<span class=\"params\">(<span class=\"params\">reason: <span class=\"built_in\">any</span></span>) =&gt; TResult2 | PromiseLike&lt;TResult2&gt;</span>) | <span class=\"params\">undefined</span> | <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">  ): <span class=\"params\">Promise</span>&lt;<span class=\"params\">TResult1</span> | <span class=\"params\">TResult2</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">const</span> <span class=\"params\">promise</span> = <span class=\"params\">super</span>.<span class=\"params\">then</span>(<span class=\"params\">onfulfilled, onrejected</span>)</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">nextPromise</span> = <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">catch</span>&lt;<span class=\"params\">TResult</span> = <span class=\"params\">never</span>&gt;(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    onrejected?: (<span class=\"params\">(<span class=\"params\">reason: <span class=\"built_in\">any</span></span>) =&gt; TResult | PromiseLike&lt;TResult&gt;</span>) | <span class=\"literal\">undefined</span> | <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  </span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">T</span> | <span class=\"params\">TResult</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">const</span> <span class=\"params\">promise</span> = <span class=\"params\">super</span>.<span class=\"params\">catch</span>(<span class=\"params\">onrejected</span>)</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">nextPromise</span> = <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">/**</span></span><br><span class=\"line\"><span class=\"function\"> * 暴露给外面的方法，<span class=\"params\">axios</span>通过拦截器，通过封装<span class=\"params\">service</span>都能调用它来在入口处自动注入</span></span><br><span class=\"line\"><span class=\"function\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">function</span> <span class=\"params\">autoTravel</span>&lt;<span class=\"params\">T</span>&gt;(<span class=\"params\">promise: <span class=\"built_in\">Promise</span>&lt;T&gt;</span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">T</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">getLastPromise</span> = <span class=\"params\">function</span>(<span class=\"params\">promise: ChainedPromise&lt;<span class=\"built_in\">any</span>&gt;</span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">any</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">if</span> (<span class=\"params\">promise.nextPromise</span>) &#123;</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">return</span> <span class=\"params\">getLastPromise</span>(<span class=\"params\">promise.nextPromise</span>)</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  /**</span></span><br><span class=\"line\"><span class=\"function\">   * <span class=\"params\">Promise</span>内部的自动形成链条，就能顺着链条找到最后一个了</span></span><br><span class=\"line\"><span class=\"function\">   */</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">autoTravelPromise</span> = <span class=\"params\">new</span> <span class=\"params\">ChainedPromise</span>&lt;<span class=\"params\">T</span>&gt;(<span class=\"params\">(<span class=\"params\">resolve, reject</span>) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    promise.then(<span class=\"params\">resolve</span>).<span class=\"keyword\">catch</span>(<span class=\"params\">responseError =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">  \t  <span class=\"comment\">// throwMessage为之前定义的，promise上自动加catch的方法</span></span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">      throwMessage(<span class=\"params\">getLastPromise(<span class=\"params\">autoTravelPromise</span>)</span>)</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">      reject(<span class=\"params\">responseError</span>)</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">    &#125;</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  &#125;</span>)</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">return</span> <span class=\"params\">autoTravelPromise</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"axios的兜底报错\"><a href=\"#axios的兜底报错\" class=\"headerlink\" title=\"axios的兜底报错\"></a>axios的兜底报错</h1><p>项目的网络请求层使用了axios，axios是一个及其好用的库，但是在业务使用上出现了一些问题</p>\n<h2 id=\"出现原因\"><a href=\"#出现原因\" class=\"headerlink\" title=\"出现原因\"></a>出现原因</h2><p>众所周知，前端一般通过ajax向后端请求数据然后处理后显示在网页/app上，当然人都是懒得，总是希望有一些自动完成的事，比如这一次，如果不是需要特殊处理的特定错误，直接弹toast结束。</p>\n<p>错误处理还是很容易，axios增加拦截器，如果是指定的错误，直接<figure class=\"highlight plain\"><figcaption><span>new Error('错误')``` 剩下的交给```promise.catch```干就好了，问题集中在如何兜底这个catch，如果不处理，会变成```unhandledrejection```错误</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 解决方案</span><br><span class=\"line\">#### 最原始的方案</span><br><span class=\"line\">高阶函数 throwMessage，自动在promise之后增加catch函数，问题是这个要记得手动引入，和自动这个理念还是有点区别的.  </span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\"></span><br><span class=\"line\">export function throwMessage&lt;T = any&gt;(responsePromise: Promise&lt;T&gt;) &#123;</span><br><span class=\"line\">  return responsePromise.catch((e: Error) =&gt; &#123;</span><br><span class=\"line\">    console.error(`error`, e)</span><br><span class=\"line\">    message.error(e.message)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>每次使用都要<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### webpack方案</span><br><span class=\"line\">既然打包的是webpack，那么使用webpack在转译原始代码的时候注入就好了嘛. 推荐一个[promise-catch-loader](https://github.com/xuqiang521/promise-catch-loader)自动处理好这一系列问题 具体因为没有太研究，不做展开</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#### 事件监听方案</span><br><span class=\"line\">上文提到了，如果promise没有捕获错误，会自动变成unhandlered rejection错误，这个是可以全局监听的，具体[在MDN上可以看](https://developer.mozilla.org/zh-CN/docs/Web/Events/unhandledrejection)</span><br><span class=\"line\"></span><br><span class=\"line\">那么 我们在window上直接监听就好了</span><br><span class=\"line\"></span><br><span class=\"line\">```javascript</span><br><span class=\"line\">window.addEventListener(&apos;unhandledrejection&apos;, event =&gt; &#123;</span><br><span class=\"line\">  event.preventDefault()</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>问题是，太全局了</p>\n<h4 id=\"处理Promise链方案\"><a href=\"#处理Promise链方案\" class=\"headerlink\" title=\"处理Promise链方案\"></a>处理Promise链方案</h4><p>这种是最终处理的方案，当然也是最魔改的方案，考虑到<strong>只运行在前端，内存溢出情况不多</strong>，方能实现</p>\n<p>axios返回的是promise，promise是遵循PromiseA+方案，内部其实是有一条promise链的，我们的目的就在于，在promise链条的<strong>最后一个promise</strong>上挂上catch,反正预先被处理了最后一个也不会触发</p>\n<h5 id=\"问题来了\"><a href=\"#问题来了\" class=\"headerlink\" title=\"问题来了\"></a>问题来了</h5><p>如果你直接看promise的话，是只能看到，then，catch，finally这些方法的，并没办法看到promise链，也没办法顺着链访问到最后</p>\n<h5 id=\"如何解决\"><a href=\"#如何解决\" class=\"headerlink\" title=\"如何解决\"></a>如何解决</h5><p>我们的目标是将其变为链式结构，简单来说，只要每个then和catch都能记下他的后继即可。<br>所以最终我选择注入promise的两个方法</p>\n<h5 id=\"实现代码\"><a href=\"#实现代码\" class=\"headerlink\" title=\"实现代码\"></a>实现代码</h5><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 继承然后注入两个方法</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> ChainedPromise&lt;T&gt; <span class=\"keyword\">extends</span> <span class=\"built_in\">Promise</span>&lt;T&gt; &#123;</span><br><span class=\"line\">  nextPromise?: <span class=\"built_in\">Promise</span>&lt;<span class=\"built_in\">any</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  then&lt;TResult1 = T, TResult2 = never&gt;(</span><br><span class=\"line\">    onfulfilled?: <span class=\"function\">(<span class=\"params\">(<span class=\"params\">value: T</span>) =&gt; TResult1 | PromiseLike&lt;TResult1&gt;</span>) | <span class=\"params\">undefined</span> | <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">onrejected</span>?: (<span class=\"params\">(<span class=\"params\">reason: <span class=\"built_in\">any</span></span>) =&gt; TResult2 | PromiseLike&lt;TResult2&gt;</span>) | <span class=\"params\">undefined</span> | <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">  ): <span class=\"params\">Promise</span>&lt;<span class=\"params\">TResult1</span> | <span class=\"params\">TResult2</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">const</span> <span class=\"params\">promise</span> = <span class=\"params\">super</span>.<span class=\"params\">then</span>(<span class=\"params\">onfulfilled, onrejected</span>)</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">nextPromise</span> = <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">catch</span>&lt;<span class=\"params\">TResult</span> = <span class=\"params\">never</span>&gt;(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    onrejected?: (<span class=\"params\">(<span class=\"params\">reason: <span class=\"built_in\">any</span></span>) =&gt; TResult | PromiseLike&lt;TResult&gt;</span>) | <span class=\"literal\">undefined</span> | <span class=\"literal\">null</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  </span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">T</span> | <span class=\"params\">TResult</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">const</span> <span class=\"params\">promise</span> = <span class=\"params\">super</span>.<span class=\"params\">catch</span>(<span class=\"params\">onrejected</span>)</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">nextPromise</span> = <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">/**</span></span><br><span class=\"line\"><span class=\"function\"> * 暴露给外面的方法，<span class=\"params\">axios</span>通过拦截器，通过封装<span class=\"params\">service</span>都能调用它来在入口处自动注入</span></span><br><span class=\"line\"><span class=\"function\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">function</span> <span class=\"params\">autoTravel</span>&lt;<span class=\"params\">T</span>&gt;(<span class=\"params\">promise: <span class=\"built_in\">Promise</span>&lt;T&gt;</span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">T</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">getLastPromise</span> = <span class=\"params\">function</span>(<span class=\"params\">promise: ChainedPromise&lt;<span class=\"built_in\">any</span>&gt;</span>): <span class=\"params\">Promise</span>&lt;<span class=\"params\">any</span>&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">if</span> (<span class=\"params\">promise.nextPromise</span>) &#123;</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">return</span> <span class=\"params\">getLastPromise</span>(<span class=\"params\">promise.nextPromise</span>)</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">return</span> <span class=\"params\">promise</span></span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  /**</span></span><br><span class=\"line\"><span class=\"function\">   * <span class=\"params\">Promise</span>内部的自动形成链条，就能顺着链条找到最后一个了</span></span><br><span class=\"line\"><span class=\"function\">   */</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">const</span> <span class=\"params\">autoTravelPromise</span> = <span class=\"params\">new</span> <span class=\"params\">ChainedPromise</span>&lt;<span class=\"params\">T</span>&gt;(<span class=\"params\">(<span class=\"params\">resolve, reject</span>) =&gt; &#123;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    promise.then(<span class=\"params\">resolve</span>).<span class=\"keyword\">catch</span>(<span class=\"params\">responseError =&gt; &#123;</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">  \t  <span class=\"comment\">// throwMessage为之前定义的，promise上自动加catch的方法</span></span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">      throwMessage(<span class=\"params\">getLastPromise(<span class=\"params\">autoTravelPromise</span>)</span>)</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">      reject(<span class=\"params\">responseError</span>)</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"params\">    &#125;</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  &#125;</span>)</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">return</span> <span class=\"params\">autoTravelPromise</span></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>"},{"title":"axios如何中断请求","date":"2019-03-29T03:41:57.000Z","_content":"\n# axios 如何中断请求\n\naxios 是一个非常方便的请求库，但是缺没有原生提供一个 abort 接口，因为 axios 的返回是一个 promise，我们可以利用 promise 的特性来实现一个 abort 方法\n\n## Promise.race\n\npromise.race 方法从字面意思上就是赛跑，其中只要有任意一个完成了，就返回完成的那个，有一个失败了，就改为失败，利用这个特性就能完成我们的 abort 方法\n\n```js\nPromise.race([\n        // 等待取消组\n        new Promise((_resolve, reject) => {\n          notify.onClose = function() {\n            reject(new Error('手动停止导出！'))\n          }\n        }),\n        // 获取数据组\n        axios.get()\n)\n```\n\n当然，例子中利用了 element-ui 的 notify 组件，绑定了 notify 组件的 onClose 方法，实际上也可以通过封装对象的方式实现\n","source":"_posts/axios如何中断请求.md","raw":"---\ntitle: axios如何中断请求\ntags:\n  - 前端\n  - 上手指南\n  - MAC\n  - 经验\ndate: 2019-03-29 11:41:57\ncategories: 可以公开的情报\n---\n\n# axios 如何中断请求\n\naxios 是一个非常方便的请求库，但是缺没有原生提供一个 abort 接口，因为 axios 的返回是一个 promise，我们可以利用 promise 的特性来实现一个 abort 方法\n\n## Promise.race\n\npromise.race 方法从字面意思上就是赛跑，其中只要有任意一个完成了，就返回完成的那个，有一个失败了，就改为失败，利用这个特性就能完成我们的 abort 方法\n\n```js\nPromise.race([\n        // 等待取消组\n        new Promise((_resolve, reject) => {\n          notify.onClose = function() {\n            reject(new Error('手动停止导出！'))\n          }\n        }),\n        // 获取数据组\n        axios.get()\n)\n```\n\n当然，例子中利用了 element-ui 的 notify 组件，绑定了 notify 组件的 onClose 方法，实际上也可以通过封装对象的方式实现\n","slug":"axios如何中断请求","published":1,"updated":"2019-03-29T02:56:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxgq000bw6ilkfv51k5g","content":"<h1 id=\"axios-如何中断请求\"><a href=\"#axios-如何中断请求\" class=\"headerlink\" title=\"axios 如何中断请求\"></a>axios 如何中断请求</h1><p>axios 是一个非常方便的请求库，但是缺没有原生提供一个 abort 接口，因为 axios 的返回是一个 promise，我们可以利用 promise 的特性来实现一个 abort 方法</p>\n<h2 id=\"Promise-race\"><a href=\"#Promise-race\" class=\"headerlink\" title=\"Promise.race\"></a>Promise.race</h2><p>promise.race 方法从字面意思上就是赛跑，其中只要有任意一个完成了，就返回完成的那个，有一个失败了，就改为失败，利用这个特性就能完成我们的 abort 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.race([</span><br><span class=\"line\">        <span class=\"comment\">// 等待取消组</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">_resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          notify.onClose = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'手动停止导出！'</span>))</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 获取数据组</span></span><br><span class=\"line\">        axios.get()</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>当然，例子中利用了 element-ui 的 notify 组件，绑定了 notify 组件的 onClose 方法，实际上也可以通过封装对象的方式实现</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"axios-如何中断请求\"><a href=\"#axios-如何中断请求\" class=\"headerlink\" title=\"axios 如何中断请求\"></a>axios 如何中断请求</h1><p>axios 是一个非常方便的请求库，但是缺没有原生提供一个 abort 接口，因为 axios 的返回是一个 promise，我们可以利用 promise 的特性来实现一个 abort 方法</p>\n<h2 id=\"Promise-race\"><a href=\"#Promise-race\" class=\"headerlink\" title=\"Promise.race\"></a>Promise.race</h2><p>promise.race 方法从字面意思上就是赛跑，其中只要有任意一个完成了，就返回完成的那个，有一个失败了，就改为失败，利用这个特性就能完成我们的 abort 方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.race([</span><br><span class=\"line\">        <span class=\"comment\">// 等待取消组</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">_resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          notify.onClose = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            reject(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'手动停止导出！'</span>))</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        <span class=\"comment\">// 获取数据组</span></span><br><span class=\"line\">        axios.get()</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>当然，例子中利用了 element-ui 的 notify 组件，绑定了 notify 组件的 onClose 方法，实际上也可以通过封装对象的方式实现</p>\n"},{"title":"html上实现div按照宽高比自适应","date":"2018-11-25T01:40:02.000Z","_content":"\n# html 上实现 div 按照宽高比自适应\n\n原理很简单，padding 的百分比是根据宽度作为百分比自动设置的，所以容器上使用\n\n```less\n.container {\n  height: 0;\n  padding-top: 114%;\n  .data {\n    width: 100%;\n    height: 100%;\n  }\n}\n```\n\n就可以了\n","source":"_posts/html上实现div按照宽高比自适应.md","raw":"---\ntitle: html上实现div按照宽高比自适应\ntags:\n  - 宽高比\n  - html5\n  - vue\ndate: 2018-11-25 09:40:02\ncategories: 可以公开的情报\n---\n\n# html 上实现 div 按照宽高比自适应\n\n原理很简单，padding 的百分比是根据宽度作为百分比自动设置的，所以容器上使用\n\n```less\n.container {\n  height: 0;\n  padding-top: 114%;\n  .data {\n    width: 100%;\n    height: 100%;\n  }\n}\n```\n\n就可以了\n","slug":"html上实现div按照宽高比自适应","published":1,"updated":"2019-11-25T08:32:29.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxh0000dw6illluamqsy","content":"<h1 id=\"html-上实现-div-按照宽高比自适应\"><a href=\"#html-上实现-div-按照宽高比自适应\" class=\"headerlink\" title=\"html 上实现 div 按照宽高比自适应\"></a>html 上实现 div 按照宽高比自适应</h1><p>原理很简单，padding 的百分比是根据宽度作为百分比自动设置的，所以容器上使用</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">114%</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.data</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>就可以了</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"html-上实现-div-按照宽高比自适应\"><a href=\"#html-上实现-div-按照宽高比自适应\" class=\"headerlink\" title=\"html 上实现 div 按照宽高比自适应\"></a>html 上实现 div 按照宽高比自适应</h1><p>原理很简单，padding 的百分比是根据宽度作为百分比自动设置的，所以容器上使用</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"number\">114%</span>;</span><br><span class=\"line\">  <span class=\"selector-class\">.data</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>就可以了</p>\n"},{"title":"react-route4实现prompt自定义样式","date":"2019-10-11T14:11:57.000Z","_content":"\n# 原因\n\n项目中需要对正在编辑的页面做监测是否退出页面，退出则弹出提示，本身使用了 react-route，无奈 ui 不满足自定义的样式（嫌丑）所以通过自定义方案，做了一个新的版本\n\n当然还是通过[https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39](https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39)来实现的\n\n## ant-design 的代码\n\n```typescript\nimport React from \"react\";\nimport * as H from \"history\";\nimport { Modal, Icon, Button } from \"antd\";\nimport { Prompt } from \"react-router-dom\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nexport interface PromptProps extends RouteComponentProps {\n  message: string | ((location: H.Location) => string | boolean);\n  when?: boolean;\n}\n\nexport class RouteLeavingGuard extends React.Component<\n  PromptProps,\n  {\n    modalVisible: boolean;\n    lastLocation: H.Location | null;\n    confirmedNavigation: boolean;\n  }\n> {\n  constructor(props: PromptProps) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      lastLocation: null,\n      confirmedNavigation: false\n    };\n  }\n  showModal = (location: H.Location) =>\n    this.setState({\n      modalVisible: true,\n      lastLocation: location\n    });\n  closeModal = (callback?: () => void) =>\n    this.setState(\n      {\n        modalVisible: false\n      },\n      callback\n    );\n  handleBlockedNavigation = (nextLocation: H.Location) => {\n    const { confirmedNavigation } = this.state;\n    if (!confirmedNavigation) {\n      this.showModal(nextLocation);\n      return false;\n    }\n\n    return true;\n  };\n\n  handleConfirmNavigationClick = () =>\n    this.closeModal(() => {\n      const { lastLocation } = this.state;\n      const { history } = this.props;\n      if (lastLocation) {\n        this.setState(\n          {\n            confirmedNavigation: true\n          },\n          () => {\n            /**\n             * 走跳转\n             */\n            history.push(lastLocation.pathname + lastLocation.search);\n          }\n        );\n      }\n    });\n\n  render() {\n    const { when, message } = this.props;\n    const { modalVisible, lastLocation } = this.state;\n    return (\n      <>\n        <Prompt when={when} message={this.handleBlockedNavigation} />\n        <Modal\n          visible={modalVisible}\n          okText=\"确定\"\n          closable={false}\n          maskClosable={false}\n          keyboard={false}\n          footer={null}\n          cancelText=\"取消\"\n          width={420}\n          onCancel={() => this.closeModal()}\n          onOk={this.handleConfirmNavigationClick}\n        >\n          {typeof message === \"function\" ? (\n            lastLocation && message(lastLocation)\n          ) : (\n            <div>\n              <Icon\n                style={{\n                  marginLeft: 8,\n                  marginRight: 16,\n                  fontSize: 20,\n                  position: \"relative\",\n                  top: 2\n                }}\n                type=\"question-circle\"\n                theme=\"twoTone\"\n                twoToneColor={\"#faad14\"}\n              />\n              {message}\n              <div style={{ textAlign: \"center\", marginTop: 24 }}>\n                <Button\n                  style={{ marginRight: 16 }}\n                  type={\"primary\"}\n                  onClick={this.handleConfirmNavigationClick}\n                >\n                  确定\n                </Button>\n                <Button onClick={() => this.closeModal()}>取消</Button>\n              </div>\n            </div>\n          )}\n        </Modal>\n      </>\n    );\n  }\n}\nexport default withRouter(RouteLeavingGuard);\n```\n","source":"_posts/react-route4实现prompt自定义样式.md","raw":"---\ntitle: react-route4实现prompt自定义样式\ntags:\n  - 前端\n  - css\n  - js\n  - react\n  - react-route\n  - prompt\n  - 退出校验\ndate: 2019-10-11 22:11:57\ncategories: 可以公开的情报\n---\n\n# 原因\n\n项目中需要对正在编辑的页面做监测是否退出页面，退出则弹出提示，本身使用了 react-route，无奈 ui 不满足自定义的样式（嫌丑）所以通过自定义方案，做了一个新的版本\n\n当然还是通过[https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39](https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39)来实现的\n\n## ant-design 的代码\n\n```typescript\nimport React from \"react\";\nimport * as H from \"history\";\nimport { Modal, Icon, Button } from \"antd\";\nimport { Prompt } from \"react-router-dom\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nexport interface PromptProps extends RouteComponentProps {\n  message: string | ((location: H.Location) => string | boolean);\n  when?: boolean;\n}\n\nexport class RouteLeavingGuard extends React.Component<\n  PromptProps,\n  {\n    modalVisible: boolean;\n    lastLocation: H.Location | null;\n    confirmedNavigation: boolean;\n  }\n> {\n  constructor(props: PromptProps) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      lastLocation: null,\n      confirmedNavigation: false\n    };\n  }\n  showModal = (location: H.Location) =>\n    this.setState({\n      modalVisible: true,\n      lastLocation: location\n    });\n  closeModal = (callback?: () => void) =>\n    this.setState(\n      {\n        modalVisible: false\n      },\n      callback\n    );\n  handleBlockedNavigation = (nextLocation: H.Location) => {\n    const { confirmedNavigation } = this.state;\n    if (!confirmedNavigation) {\n      this.showModal(nextLocation);\n      return false;\n    }\n\n    return true;\n  };\n\n  handleConfirmNavigationClick = () =>\n    this.closeModal(() => {\n      const { lastLocation } = this.state;\n      const { history } = this.props;\n      if (lastLocation) {\n        this.setState(\n          {\n            confirmedNavigation: true\n          },\n          () => {\n            /**\n             * 走跳转\n             */\n            history.push(lastLocation.pathname + lastLocation.search);\n          }\n        );\n      }\n    });\n\n  render() {\n    const { when, message } = this.props;\n    const { modalVisible, lastLocation } = this.state;\n    return (\n      <>\n        <Prompt when={when} message={this.handleBlockedNavigation} />\n        <Modal\n          visible={modalVisible}\n          okText=\"确定\"\n          closable={false}\n          maskClosable={false}\n          keyboard={false}\n          footer={null}\n          cancelText=\"取消\"\n          width={420}\n          onCancel={() => this.closeModal()}\n          onOk={this.handleConfirmNavigationClick}\n        >\n          {typeof message === \"function\" ? (\n            lastLocation && message(lastLocation)\n          ) : (\n            <div>\n              <Icon\n                style={{\n                  marginLeft: 8,\n                  marginRight: 16,\n                  fontSize: 20,\n                  position: \"relative\",\n                  top: 2\n                }}\n                type=\"question-circle\"\n                theme=\"twoTone\"\n                twoToneColor={\"#faad14\"}\n              />\n              {message}\n              <div style={{ textAlign: \"center\", marginTop: 24 }}>\n                <Button\n                  style={{ marginRight: 16 }}\n                  type={\"primary\"}\n                  onClick={this.handleConfirmNavigationClick}\n                >\n                  确定\n                </Button>\n                <Button onClick={() => this.closeModal()}>取消</Button>\n              </div>\n            </div>\n          )}\n        </Modal>\n      </>\n    );\n  }\n}\nexport default withRouter(RouteLeavingGuard);\n```\n","slug":"react-route4实现prompt自定义样式","published":1,"updated":"2019-10-11T15:18:25.649Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxh3000fw6il3txjkory","content":"<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>项目中需要对正在编辑的页面做监测是否退出页面，退出则弹出提示，本身使用了 react-route，无奈 ui 不满足自定义的样式（嫌丑）所以通过自定义方案，做了一个新的版本</p>\n<p>当然还是通过<a href=\"https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39\" target=\"_blank\" rel=\"noopener\">https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39</a>来实现的</p>\n<h2 id=\"ant-design-的代码\"><a href=\"#ant-design-的代码\" class=\"headerlink\" title=\"ant-design 的代码\"></a>ant-design 的代码</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> H <span class=\"keyword\">from</span> <span class=\"string\">\"history\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Modal, Icon, Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"antd\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Prompt &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-router-dom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; withRouter, RouteComponentProps &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> PromptProps <span class=\"keyword\">extends</span> RouteComponentProps &#123;</span><br><span class=\"line\">  message: <span class=\"built_in\">string</span> | <span class=\"function\">(<span class=\"params\">(<span class=\"params\">location: H.Location</span>) =&gt; <span class=\"built_in\">string</span> | <span class=\"built_in\">boolean</span></span>);</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">when</span>?: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">export</span> <span class=\"params\">class</span> <span class=\"params\">RouteLeavingGuard</span> <span class=\"params\">extends</span> <span class=\"params\">React</span>.<span class=\"params\">Component</span>&lt;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">PromptProps</span>,</span></span><br><span class=\"line\"><span class=\"function\">  &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">modalVisible</span>: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">lastLocation</span>: <span class=\"params\">H</span>.<span class=\"params\">Location</span> | <span class=\"params\">null</span>;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">confirmedNavigation</span>: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">constructor</span>(<span class=\"params\">props: PromptProps</span>) &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">super</span>(<span class=\"params\">props</span>);</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">state</span> = &#123;</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">modalVisible</span>: <span class=\"params\">false</span>,</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">lastLocation</span>: <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">confirmedNavigation</span>: <span class=\"params\">false</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">showModal</span> = (<span class=\"params\">location: H.Location</span>) =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      modalVisible: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      lastLocation: location</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  closeModal = <span class=\"function\">(<span class=\"params\">callback?: (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">void</span></span>) =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        modalVisible: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      callback</span><br><span class=\"line\">    );</span><br><span class=\"line\">  handleBlockedNavigation = <span class=\"function\">(<span class=\"params\">nextLocation: H.Location</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; confirmedNavigation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!confirmedNavigation) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.showModal(nextLocation);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleConfirmNavigationClick = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.closeModal(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; lastLocation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; history &#125; = <span class=\"keyword\">this</span>.props;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (lastLocation) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            confirmedNavigation: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          () =&gt; &#123;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * 走跳转</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            history.push(lastLocation.pathname + lastLocation.search);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; when, message &#125; = <span class=\"keyword\">this</span>.props;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; modalVisible, lastLocation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;&gt;</span><br><span class=\"line\">        &lt;Prompt when=&#123;when&#125; message=&#123;<span class=\"keyword\">this</span>.handleBlockedNavigation&#125; /&gt;</span><br><span class=\"line\">        &lt;Modal</span><br><span class=\"line\">          visible=&#123;modalVisible&#125;</span><br><span class=\"line\">          okText=<span class=\"string\">\"确定\"</span></span><br><span class=\"line\">          closable=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          maskClosable=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          keyboard=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          footer=&#123;<span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">          cancelText=<span class=\"string\">\"取消\"</span></span><br><span class=\"line\">          width=&#123;<span class=\"number\">420</span>&#125;</span><br><span class=\"line\">          onCancel=&#123;<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">this</span>.closeModal()&#125;</span><br><span class=\"line\">          onOk=&#123;<span class=\"keyword\">this</span>.handleConfirmNavigationClick&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &#123;<span class=\"keyword\">typeof</span> message === <span class=\"string\">\"function\"</span> ? (</span><br><span class=\"line\">            lastLocation &amp;&amp; message(lastLocation)</span><br><span class=\"line\">          ) : (</span><br><span class=\"line\">            &lt;div&gt;</span><br><span class=\"line\">              &lt;Icon</span><br><span class=\"line\">                style=&#123;&#123;</span><br><span class=\"line\">                  marginLeft: <span class=\"number\">8</span>,</span><br><span class=\"line\">                  marginRight: <span class=\"number\">16</span>,</span><br><span class=\"line\">                  fontSize: <span class=\"number\">20</span>,</span><br><span class=\"line\">                  position: <span class=\"string\">\"relative\"</span>,</span><br><span class=\"line\">                  top: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">type</span>=<span class=\"string\">\"question-circle\"</span></span><br><span class=\"line\">                theme=<span class=\"string\">\"twoTone\"</span></span><br><span class=\"line\">                twoToneColor=&#123;<span class=\"string\">\"#faad14\"</span>&#125;</span><br><span class=\"line\">              /&gt;</span><br><span class=\"line\">              &#123;message&#125;</span><br><span class=\"line\">              &lt;div style=&#123;&#123; textAlign: <span class=\"string\">\"center\"</span>, marginTop: <span class=\"number\">24</span> &#125;&#125;&gt;</span><br><span class=\"line\">                &lt;Button</span><br><span class=\"line\">                  style=&#123;&#123; marginRight: <span class=\"number\">16</span> &#125;&#125;</span><br><span class=\"line\">                  <span class=\"keyword\">type</span>=&#123;<span class=\"string\">\"primary\"</span>&#125;</span><br><span class=\"line\">                  onClick=&#123;<span class=\"keyword\">this</span>.handleConfirmNavigationClick&#125;</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                  确定</span><br><span class=\"line\">                &lt;<span class=\"regexp\">/Button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;Button onClick=&#123;() =&gt; this.closeModal()&#125;&gt;取消&lt;/</span>Button&gt;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">          )&#125;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Modal&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> withRouter(RouteLeavingGuard);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><p>项目中需要对正在编辑的页面做监测是否退出页面，退出则弹出提示，本身使用了 react-route，无奈 ui 不满足自定义的样式（嫌丑）所以通过自定义方案，做了一个新的版本</p>\n<p>当然还是通过<a href=\"https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39\" target=\"_blank\" rel=\"noopener\">https://medium.com/@michaelchan_13570/using-react-router-v4-prompt-with-custom-modal-component-ca839f5faf39</a>来实现的</p>\n<h2 id=\"ant-design-的代码\"><a href=\"#ant-design-的代码\" class=\"headerlink\" title=\"ant-design 的代码\"></a>ant-design 的代码</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> H <span class=\"keyword\">from</span> <span class=\"string\">\"history\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Modal, Icon, Button &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"antd\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Prompt &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-router-dom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; withRouter, RouteComponentProps &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-router\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> PromptProps <span class=\"keyword\">extends</span> RouteComponentProps &#123;</span><br><span class=\"line\">  message: <span class=\"built_in\">string</span> | <span class=\"function\">(<span class=\"params\">(<span class=\"params\">location: H.Location</span>) =&gt; <span class=\"built_in\">string</span> | <span class=\"built_in\">boolean</span></span>);</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">when</span>?: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">export</span> <span class=\"params\">class</span> <span class=\"params\">RouteLeavingGuard</span> <span class=\"params\">extends</span> <span class=\"params\">React</span>.<span class=\"params\">Component</span>&lt;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">PromptProps</span>,</span></span><br><span class=\"line\"><span class=\"function\">  &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">modalVisible</span>: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">lastLocation</span>: <span class=\"params\">H</span>.<span class=\"params\">Location</span> | <span class=\"params\">null</span>;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">confirmedNavigation</span>: <span class=\"params\">boolean</span>;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">&gt; &#123;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">constructor</span>(<span class=\"params\">props: PromptProps</span>) &#123;</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">super</span>(<span class=\"params\">props</span>);</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"params\">this</span>.<span class=\"params\">state</span> = &#123;</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">modalVisible</span>: <span class=\"params\">false</span>,</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">lastLocation</span>: <span class=\"params\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"params\">confirmedNavigation</span>: <span class=\"params\">false</span></span></span><br><span class=\"line\"><span class=\"function\">    &#125;;</span></span><br><span class=\"line\"><span class=\"function\">  &#125;</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"params\">showModal</span> = (<span class=\"params\">location: H.Location</span>) =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      modalVisible: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      lastLocation: location</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  closeModal = <span class=\"function\">(<span class=\"params\">callback?: (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">void</span></span>) =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        modalVisible: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      callback</span><br><span class=\"line\">    );</span><br><span class=\"line\">  handleBlockedNavigation = <span class=\"function\">(<span class=\"params\">nextLocation: H.Location</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; confirmedNavigation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!confirmedNavigation) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.showModal(nextLocation);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleConfirmNavigationClick = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.closeModal(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; lastLocation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; history &#125; = <span class=\"keyword\">this</span>.props;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (lastLocation) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            confirmedNavigation: <span class=\"literal\">true</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          () =&gt; &#123;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">             * 走跳转</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            history.push(lastLocation.pathname + lastLocation.search);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; when, message &#125; = <span class=\"keyword\">this</span>.props;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; modalVisible, lastLocation &#125; = <span class=\"keyword\">this</span>.state;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;&gt;</span><br><span class=\"line\">        &lt;Prompt when=&#123;when&#125; message=&#123;<span class=\"keyword\">this</span>.handleBlockedNavigation&#125; /&gt;</span><br><span class=\"line\">        &lt;Modal</span><br><span class=\"line\">          visible=&#123;modalVisible&#125;</span><br><span class=\"line\">          okText=<span class=\"string\">\"确定\"</span></span><br><span class=\"line\">          closable=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          maskClosable=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          keyboard=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">          footer=&#123;<span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">          cancelText=<span class=\"string\">\"取消\"</span></span><br><span class=\"line\">          width=&#123;<span class=\"number\">420</span>&#125;</span><br><span class=\"line\">          onCancel=&#123;<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">this</span>.closeModal()&#125;</span><br><span class=\"line\">          onOk=&#123;<span class=\"keyword\">this</span>.handleConfirmNavigationClick&#125;</span><br><span class=\"line\">        &gt;</span><br><span class=\"line\">          &#123;<span class=\"keyword\">typeof</span> message === <span class=\"string\">\"function\"</span> ? (</span><br><span class=\"line\">            lastLocation &amp;&amp; message(lastLocation)</span><br><span class=\"line\">          ) : (</span><br><span class=\"line\">            &lt;div&gt;</span><br><span class=\"line\">              &lt;Icon</span><br><span class=\"line\">                style=&#123;&#123;</span><br><span class=\"line\">                  marginLeft: <span class=\"number\">8</span>,</span><br><span class=\"line\">                  marginRight: <span class=\"number\">16</span>,</span><br><span class=\"line\">                  fontSize: <span class=\"number\">20</span>,</span><br><span class=\"line\">                  position: <span class=\"string\">\"relative\"</span>,</span><br><span class=\"line\">                  top: <span class=\"number\">2</span></span><br><span class=\"line\">                &#125;&#125;</span><br><span class=\"line\">                <span class=\"keyword\">type</span>=<span class=\"string\">\"question-circle\"</span></span><br><span class=\"line\">                theme=<span class=\"string\">\"twoTone\"</span></span><br><span class=\"line\">                twoToneColor=&#123;<span class=\"string\">\"#faad14\"</span>&#125;</span><br><span class=\"line\">              /&gt;</span><br><span class=\"line\">              &#123;message&#125;</span><br><span class=\"line\">              &lt;div style=&#123;&#123; textAlign: <span class=\"string\">\"center\"</span>, marginTop: <span class=\"number\">24</span> &#125;&#125;&gt;</span><br><span class=\"line\">                &lt;Button</span><br><span class=\"line\">                  style=&#123;&#123; marginRight: <span class=\"number\">16</span> &#125;&#125;</span><br><span class=\"line\">                  <span class=\"keyword\">type</span>=&#123;<span class=\"string\">\"primary\"</span>&#125;</span><br><span class=\"line\">                  onClick=&#123;<span class=\"keyword\">this</span>.handleConfirmNavigationClick&#125;</span><br><span class=\"line\">                &gt;</span><br><span class=\"line\">                  确定</span><br><span class=\"line\">                &lt;<span class=\"regexp\">/Button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;Button onClick=&#123;() =&gt; this.closeModal()&#125;&gt;取消&lt;/</span>Button&gt;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;/</span>div&gt;</span><br><span class=\"line\">          )&#125;</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/Modal&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>&gt;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> withRouter(RouteLeavingGuard);</span><br></pre></td></tr></table></figure>\n"},{"title":"umi.js约定式路由如何生成breadcrumbs","date":"2019-08-15T02:32:01.000Z","_content":"\n# umi.js 约定式路由如何生成 breadcrumbs\n\numi，中文可发音为乌米，是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持类 next.js 的约定式路由\n\n## 遇到的问题\n\n因为比较喜欢约定式路由，看目录结构很清晰，所以整个项目都是使用了约定式的路由结构，相对的，umi 会在 pages 下自动建立自己的 router 问题，将路由配置管理在里面  \n但是到了建立自动的面包屑的时候却遇到了问题，没办法初始化\n\n### 官方的方法\n\n[https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91](https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91)\n\n```javascript\nimport NavLink from \"umi/navlink\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\n\n// 更多配置请移步 https://github.com/icd2k3/react-router-breadcrumbs-hoc\nconst routes = [\n  { path: \"/\", breadcrumb: \"首页\" },\n  { path: \"/list\", breadcrumb: \"List Page\" }\n];\n\nexport default withBreadcrumbs(routes)(({ breadcrumbs }) => (\n  <div>\n    {breadcrumbs.map((breadcrumb, index) => (\n      <span key={breadcrumb.key}>\n        <NavLink to={breadcrumb.props.match.url}>{breadcrumb}</NavLink>\n        {index < breadcrumbs.length - 1 && <i> / </i>}\n      </span>\n    ))}\n  </div>\n));\n```\n\n### 实际的问题\n\nroutes 并不是自己配置的所以没办法传入，google 全网也没提到如何解决，于是实际问题变成了如何获取 routes\n\n#### 解决方案 1\n\n既然`src/pages/.umi/router`这个文件已经存在了，直接引入，让 webpack 最终自动打包进去\n\n实际上，因为用的 typescript，没办法直接引入 js 文件，最终失败\n\n#### 解决方案 2\n\n手写\n\n和用约定式路由的理念冲突了\n\n#### 最终解决方案\n\n它既然缺 routes,umi 又会自动生成，那就直接直接挪出来用呗 umi 使用的路由插件提供了[更新时回调功能](https://www.npmjs.com/package/umi-plugin-routes#optionupdate) 借用这个，在订好的路径下将路由信息导出来就好了\n\n##### 具体代码\n\n修改.umirc.js 中的 routes 为\n\n```\n\n        routes: {\n          exclude: [\n            /models\\//,\n            /services\\//,\n            /utils\\//,\n            /model\\.(t|j)sx?$/,\n            /service\\.(t|j)sx?$/,\n            /utils\\.(t|j)sx?$/,\n            /components\\//,\n          ],\n          update(routes) {\n            fs.writeFileSync(\n              './src/utils/routes.ts',\n              `/**\n * 自动根据配置生成的路由文件，方便获取目录结构\n */\nexport default ${JSON.stringify(routes[0].routes.filter(route => route.path), null, 2).replace(\n                /\"(\\w+)\":/g,\n                '$1:',\n              )}`,\n              { flag: 'w' },\n            )\n            return routes\n          },\n        },\n```\n\n最终，breadcrumbs 就能实时获取路由信息了\n","source":"_posts/umi.js约定式路由如何生成breadcrumbs.md","raw":"---\ntitle: umi.js约定式路由如何生成breadcrumbs\ntags:\n  - umi.js\n  - 面包屑\n  - 路由\n  - 约定式路由\ndate: 2019-08-15 10:32:01\ncategories: 可以公开的情报\n---\n\n# umi.js 约定式路由如何生成 breadcrumbs\n\numi，中文可发音为乌米，是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持类 next.js 的约定式路由\n\n## 遇到的问题\n\n因为比较喜欢约定式路由，看目录结构很清晰，所以整个项目都是使用了约定式的路由结构，相对的，umi 会在 pages 下自动建立自己的 router 问题，将路由配置管理在里面  \n但是到了建立自动的面包屑的时候却遇到了问题，没办法初始化\n\n### 官方的方法\n\n[https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91](https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91)\n\n```javascript\nimport NavLink from \"umi/navlink\";\nimport withBreadcrumbs from \"react-router-breadcrumbs-hoc\";\n\n// 更多配置请移步 https://github.com/icd2k3/react-router-breadcrumbs-hoc\nconst routes = [\n  { path: \"/\", breadcrumb: \"首页\" },\n  { path: \"/list\", breadcrumb: \"List Page\" }\n];\n\nexport default withBreadcrumbs(routes)(({ breadcrumbs }) => (\n  <div>\n    {breadcrumbs.map((breadcrumb, index) => (\n      <span key={breadcrumb.key}>\n        <NavLink to={breadcrumb.props.match.url}>{breadcrumb}</NavLink>\n        {index < breadcrumbs.length - 1 && <i> / </i>}\n      </span>\n    ))}\n  </div>\n));\n```\n\n### 实际的问题\n\nroutes 并不是自己配置的所以没办法传入，google 全网也没提到如何解决，于是实际问题变成了如何获取 routes\n\n#### 解决方案 1\n\n既然`src/pages/.umi/router`这个文件已经存在了，直接引入，让 webpack 最终自动打包进去\n\n实际上，因为用的 typescript，没办法直接引入 js 文件，最终失败\n\n#### 解决方案 2\n\n手写\n\n和用约定式路由的理念冲突了\n\n#### 最终解决方案\n\n它既然缺 routes,umi 又会自动生成，那就直接直接挪出来用呗 umi 使用的路由插件提供了[更新时回调功能](https://www.npmjs.com/package/umi-plugin-routes#optionupdate) 借用这个，在订好的路径下将路由信息导出来就好了\n\n##### 具体代码\n\n修改.umirc.js 中的 routes 为\n\n```\n\n        routes: {\n          exclude: [\n            /models\\//,\n            /services\\//,\n            /utils\\//,\n            /model\\.(t|j)sx?$/,\n            /service\\.(t|j)sx?$/,\n            /utils\\.(t|j)sx?$/,\n            /components\\//,\n          ],\n          update(routes) {\n            fs.writeFileSync(\n              './src/utils/routes.ts',\n              `/**\n * 自动根据配置生成的路由文件，方便获取目录结构\n */\nexport default ${JSON.stringify(routes[0].routes.filter(route => route.path), null, 2).replace(\n                /\"(\\w+)\":/g,\n                '$1:',\n              )}`,\n              { flag: 'w' },\n            )\n            return routes\n          },\n        },\n```\n\n最终，breadcrumbs 就能实时获取路由信息了\n","slug":"umi.js约定式路由如何生成breadcrumbs","published":1,"updated":"2019-08-15T02:32:31.208Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxh5000hw6il3ixgy4ru","content":"<h1 id=\"umi-js-约定式路由如何生成-breadcrumbs\"><a href=\"#umi-js-约定式路由如何生成-breadcrumbs\" class=\"headerlink\" title=\"umi.js 约定式路由如何生成 breadcrumbs\"></a>umi.js 约定式路由如何生成 breadcrumbs</h1><p>umi，中文可发音为乌米，是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持类 next.js 的约定式路由</p>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><p>因为比较喜欢约定式路由，看目录结构很清晰，所以整个项目都是使用了约定式的路由结构，相对的，umi 会在 pages 下自动建立自己的 router 问题，将路由配置管理在里面<br>但是到了建立自动的面包屑的时候却遇到了问题，没办法初始化</p>\n<h3 id=\"官方的方法\"><a href=\"#官方的方法\" class=\"headerlink\" title=\"官方的方法\"></a>官方的方法</h3><p><a href=\"https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91\" target=\"_blank\" rel=\"noopener\">https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> NavLink <span class=\"keyword\">from</span> <span class=\"string\">\"umi/navlink\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> withBreadcrumbs <span class=\"keyword\">from</span> <span class=\"string\">\"react-router-breadcrumbs-hoc\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更多配置请移步 https://github.com/icd2k3/react-router-breadcrumbs-hoc</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">\"/\"</span>, <span class=\"attr\">breadcrumb</span>: <span class=\"string\">\"首页\"</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">\"/list\"</span>, <span class=\"attr\">breadcrumb</span>: <span class=\"string\">\"List Page\"</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> withBreadcrumbs(routes)(<span class=\"function\">(<span class=\"params\">&#123; breadcrumbs &#125;</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;breadcrumbs.map(<span class=\"function\">(<span class=\"params\">breadcrumb, index</span>) =&gt;</span> (</span><br><span class=\"line\">      &lt;span key=&#123;breadcrumb.key&#125;&gt;</span><br><span class=\"line\">        &lt;NavLink to=&#123;breadcrumb.props.match.url&#125;&gt;&#123;breadcrumb&#125;&lt;<span class=\"regexp\">/NavLink&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;index &lt; breadcrumbs.length - 1 &amp;&amp; &lt;i&gt; /</span> <span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span>&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    ))&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n<h3 id=\"实际的问题\"><a href=\"#实际的问题\" class=\"headerlink\" title=\"实际的问题\"></a>实际的问题</h3><p>routes 并不是自己配置的所以没办法传入，google 全网也没提到如何解决，于是实际问题变成了如何获取 routes</p>\n<h4 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案 1\"></a>解决方案 1</h4><p>既然<code>src/pages/.umi/router</code>这个文件已经存在了，直接引入，让 webpack 最终自动打包进去</p>\n<p>实际上，因为用的 typescript，没办法直接引入 js 文件，最终失败</p>\n<h4 id=\"解决方案-2\"><a href=\"#解决方案-2\" class=\"headerlink\" title=\"解决方案 2\"></a>解决方案 2</h4><p>手写</p>\n<p>和用约定式路由的理念冲突了</p>\n<h4 id=\"最终解决方案\"><a href=\"#最终解决方案\" class=\"headerlink\" title=\"最终解决方案\"></a>最终解决方案</h4><p>它既然缺 routes,umi 又会自动生成，那就直接直接挪出来用呗 umi 使用的路由插件提供了<a href=\"https://www.npmjs.com/package/umi-plugin-routes#optionupdate\" target=\"_blank\" rel=\"noopener\">更新时回调功能</a> 借用这个，在订好的路径下将路由信息导出来就好了</p>\n<h5 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h5><p>修改.umirc.js 中的 routes 为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">        routes: &#123;</span><br><span class=\"line\">          exclude: [</span><br><span class=\"line\">            /models\\//,</span><br><span class=\"line\">            /services\\//,</span><br><span class=\"line\">            /utils\\//,</span><br><span class=\"line\">            /model\\.(t|j)sx?$/,</span><br><span class=\"line\">            /service\\.(t|j)sx?$/,</span><br><span class=\"line\">            /utils\\.(t|j)sx?$/,</span><br><span class=\"line\">            /components\\//,</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          update(routes) &#123;</span><br><span class=\"line\">            fs.writeFileSync(</span><br><span class=\"line\">              &apos;./src/utils/routes.ts&apos;,</span><br><span class=\"line\">              `/**</span><br><span class=\"line\"> * 自动根据配置生成的路由文件，方便获取目录结构</span><br><span class=\"line\"> */</span><br><span class=\"line\">export default $&#123;JSON.stringify(routes[0].routes.filter(route =&gt; route.path), null, 2).replace(</span><br><span class=\"line\">                /&quot;(\\w+)&quot;:/g,</span><br><span class=\"line\">                &apos;$1:&apos;,</span><br><span class=\"line\">              )&#125;`,</span><br><span class=\"line\">              &#123; flag: &apos;w&apos; &#125;,</span><br><span class=\"line\">            )</span><br><span class=\"line\">            return routes</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br></pre></td></tr></table></figure>\n<p>最终，breadcrumbs 就能实时获取路由信息了</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"umi-js-约定式路由如何生成-breadcrumbs\"><a href=\"#umi-js-约定式路由如何生成-breadcrumbs\" class=\"headerlink\" title=\"umi.js 约定式路由如何生成 breadcrumbs\"></a>umi.js 约定式路由如何生成 breadcrumbs</h1><p>umi，中文可发音为乌米，是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持类 next.js 的约定式路由</p>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><p>因为比较喜欢约定式路由，看目录结构很清晰，所以整个项目都是使用了约定式的路由结构，相对的，umi 会在 pages 下自动建立自己的 router 问题，将路由配置管理在里面<br>但是到了建立自动的面包屑的时候却遇到了问题，没办法初始化</p>\n<h3 id=\"官方的方法\"><a href=\"#官方的方法\" class=\"headerlink\" title=\"官方的方法\"></a>官方的方法</h3><p><a href=\"https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91\" target=\"_blank\" rel=\"noopener\">https://umijs.org/zh/guide/router.html#%E9%9D%A2%E5%8C%85%E5%B1%91</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> NavLink <span class=\"keyword\">from</span> <span class=\"string\">\"umi/navlink\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> withBreadcrumbs <span class=\"keyword\">from</span> <span class=\"string\">\"react-router-breadcrumbs-hoc\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更多配置请移步 https://github.com/icd2k3/react-router-breadcrumbs-hoc</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> routes = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">\"/\"</span>, <span class=\"attr\">breadcrumb</span>: <span class=\"string\">\"首页\"</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">\"/list\"</span>, <span class=\"attr\">breadcrumb</span>: <span class=\"string\">\"List Page\"</span> &#125;</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> withBreadcrumbs(routes)(<span class=\"function\">(<span class=\"params\">&#123; breadcrumbs &#125;</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &#123;breadcrumbs.map(<span class=\"function\">(<span class=\"params\">breadcrumb, index</span>) =&gt;</span> (</span><br><span class=\"line\">      &lt;span key=&#123;breadcrumb.key&#125;&gt;</span><br><span class=\"line\">        &lt;NavLink to=&#123;breadcrumb.props.match.url&#125;&gt;&#123;breadcrumb&#125;&lt;<span class=\"regexp\">/NavLink&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#123;index &lt; breadcrumbs.length - 1 &amp;&amp; &lt;i&gt; /</span> <span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span>&#125;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    ))&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n<h3 id=\"实际的问题\"><a href=\"#实际的问题\" class=\"headerlink\" title=\"实际的问题\"></a>实际的问题</h3><p>routes 并不是自己配置的所以没办法传入，google 全网也没提到如何解决，于是实际问题变成了如何获取 routes</p>\n<h4 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案 1\"></a>解决方案 1</h4><p>既然<code>src/pages/.umi/router</code>这个文件已经存在了，直接引入，让 webpack 最终自动打包进去</p>\n<p>实际上，因为用的 typescript，没办法直接引入 js 文件，最终失败</p>\n<h4 id=\"解决方案-2\"><a href=\"#解决方案-2\" class=\"headerlink\" title=\"解决方案 2\"></a>解决方案 2</h4><p>手写</p>\n<p>和用约定式路由的理念冲突了</p>\n<h4 id=\"最终解决方案\"><a href=\"#最终解决方案\" class=\"headerlink\" title=\"最终解决方案\"></a>最终解决方案</h4><p>它既然缺 routes,umi 又会自动生成，那就直接直接挪出来用呗 umi 使用的路由插件提供了<a href=\"https://www.npmjs.com/package/umi-plugin-routes#optionupdate\" target=\"_blank\" rel=\"noopener\">更新时回调功能</a> 借用这个，在订好的路径下将路由信息导出来就好了</p>\n<h5 id=\"具体代码\"><a href=\"#具体代码\" class=\"headerlink\" title=\"具体代码\"></a>具体代码</h5><p>修改.umirc.js 中的 routes 为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">        routes: &#123;</span><br><span class=\"line\">          exclude: [</span><br><span class=\"line\">            /models\\//,</span><br><span class=\"line\">            /services\\//,</span><br><span class=\"line\">            /utils\\//,</span><br><span class=\"line\">            /model\\.(t|j)sx?$/,</span><br><span class=\"line\">            /service\\.(t|j)sx?$/,</span><br><span class=\"line\">            /utils\\.(t|j)sx?$/,</span><br><span class=\"line\">            /components\\//,</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          update(routes) &#123;</span><br><span class=\"line\">            fs.writeFileSync(</span><br><span class=\"line\">              &apos;./src/utils/routes.ts&apos;,</span><br><span class=\"line\">              `/**</span><br><span class=\"line\"> * 自动根据配置生成的路由文件，方便获取目录结构</span><br><span class=\"line\"> */</span><br><span class=\"line\">export default $&#123;JSON.stringify(routes[0].routes.filter(route =&gt; route.path), null, 2).replace(</span><br><span class=\"line\">                /&quot;(\\w+)&quot;:/g,</span><br><span class=\"line\">                &apos;$1:&apos;,</span><br><span class=\"line\">              )&#125;`,</span><br><span class=\"line\">              &#123; flag: &apos;w&apos; &#125;,</span><br><span class=\"line\">            )</span><br><span class=\"line\">            return routes</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;,</span><br></pre></td></tr></table></figure>\n<p>最终，breadcrumbs 就能实时获取路由信息了</p>\n"},{"title":"vscode在debugger的时候如何加载插件","date":"2019-08-15T07:32:01.000Z","_content":"\n# 最终的 launch.js 配置\n\n```\n{\n  // 使用 IntelliSense 了解相关属性。\n  // 悬停以查看现有属性的描述。\n  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"chrome\",\n      \"request\": \"launch\",\n      \"name\": \"Launch Chrome against localhost\",\n      \"url\": \"http://localhost:8081\",\n      \"webRoot\": \"${workspaceFolder}\",\n      \"runtimeArgs\": [\n        \"--load-extension=~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/3.6.0_0\"\n      ]\n    }\n  ]\n}\n```\n","source":"_posts/vscode在debugger的时候如何加载插件.md","raw":"---\ntitle: vscode在debugger的时候如何加载插件\ntags:\n  - vscode\n  - chrome\ndate: 2019-08-15 15:32:01\ncategories: 可以公开的情报\n---\n\n# 最终的 launch.js 配置\n\n```\n{\n  // 使用 IntelliSense 了解相关属性。\n  // 悬停以查看现有属性的描述。\n  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"chrome\",\n      \"request\": \"launch\",\n      \"name\": \"Launch Chrome against localhost\",\n      \"url\": \"http://localhost:8081\",\n      \"webRoot\": \"${workspaceFolder}\",\n      \"runtimeArgs\": [\n        \"--load-extension=~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/3.6.0_0\"\n      ]\n    }\n  ]\n}\n```\n","slug":"vscode在debugger的时候如何加载插件","published":1,"updated":"2019-08-15T07:21:18.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxh8000kw6ilu9aj4xed","content":"<h1 id=\"最终的-launch-js-配置\"><a href=\"#最终的-launch-js-配置\" class=\"headerlink\" title=\"最终的 launch.js 配置\"></a>最终的 launch.js 配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  // 使用 IntelliSense 了解相关属性。</span><br><span class=\"line\">  // 悬停以查看现有属性的描述。</span><br><span class=\"line\">  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">  &quot;configurations&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;type&quot;: &quot;chrome&quot;,</span><br><span class=\"line\">      &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">      &quot;name&quot;: &quot;Launch Chrome against localhost&quot;,</span><br><span class=\"line\">      &quot;url&quot;: &quot;http://localhost:8081&quot;,</span><br><span class=\"line\">      &quot;webRoot&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">      &quot;runtimeArgs&quot;: [</span><br><span class=\"line\">        &quot;--load-extension=~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/3.6.0_0&quot;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"最终的-launch-js-配置\"><a href=\"#最终的-launch-js-配置\" class=\"headerlink\" title=\"最终的 launch.js 配置\"></a>最终的 launch.js 配置</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  // 使用 IntelliSense 了解相关属性。</span><br><span class=\"line\">  // 悬停以查看现有属性的描述。</span><br><span class=\"line\">  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class=\"line\">  &quot;configurations&quot;: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      &quot;type&quot;: &quot;chrome&quot;,</span><br><span class=\"line\">      &quot;request&quot;: &quot;launch&quot;,</span><br><span class=\"line\">      &quot;name&quot;: &quot;Launch Chrome against localhost&quot;,</span><br><span class=\"line\">      &quot;url&quot;: &quot;http://localhost:8081&quot;,</span><br><span class=\"line\">      &quot;webRoot&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class=\"line\">      &quot;runtimeArgs&quot;: [</span><br><span class=\"line\">        &quot;--load-extension=~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/3.6.0_0&quot;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"vscode插件分享","date":"2018-11-09T02:26:22.000Z","_content":"# VSCODE的插件系列\n> 使用vscode进行开发怎么能少的了插件呢  \n\n[![](https://badge.juejin.im/entry/5be530546fb9a049f153b37f/likes.svg?style=flat-square)](https://juejin.im/post/5be53004f265da615b70f7a0)\n\n丰富的插件让vscode更加好用 顺便推荐图床[（图床地址）](https://sm.ms/)\n\n# 美化插件\n* background 给编辑器窗口加个背景！唯一的缺点是vscode会\b显示已损坏，当然啦，并不影响使用\n![](https://i.loli.net/2018/11/09/5be524d44f7b0.png)\n可以参考以下配置\n```javascript\n  \"background.useDefault\": false,\n  \"background.style\": {\n    \"content\": \"''\",\n    \"pointer-events\": \"none\",\n    \"position\": \"absolute\",\n    \"z-index\": \"99999\",\n    \"width\": \"100%\",\n    \"height\": \"100%\",\n    \"background-position\": \"100% 90%\",\n    \"background-size\": \"auto 60%\",\n    \"background-repeat\": \"no-repeat\",\n    \"opacity\": 0.1\n  },\n  \"background.customImages\": [\n    \"背景图片地址1\",\n    \"背景图片地址2\",\n    \"背景图片地址3\"\n  ],\n```\n\n* carbon-now-sh 一个非常好看的代码截图工具 整合之后 \b选中然后快捷键就能截图啦 ![](https://i.loli.net/2018/11/09/5be5271f9c4e3.png)\n\n# \b开发辅助\n## Debugger\n* Debugger for Chrome 看名字就知道了\n* open in browser 懒得开浏览器用的\n* Quokka.js 实时计算，查看结果\n![](https://quokkajs.com/assets/img/vsc1.gif)\n\n## 路径补全以及包大小\n* File Peek\n* Import Cost 计算引入需要占用多大的地方\n* Path Intellisense\n\n## npm\n* npm\n* NPM-Scripts 方便运行脚本\n\n## 格式化\n* ESLint\n* Prettier 格式化\n* Vetur vue格式化以及相关配置\n* Vue 2 Snippets\n\neslint 和 prettier配合使用，vue自动保存格式化的配置\n```\n  \"vetur.format.defaultFormatter.html\": \"none\", // 默认html的方法\n  \"eslint.autoFixOnSave\": true, // 自动保存\n  \"eslint.validate\": [\n    {\n      \"language\": \"vue\",\n      \"autoFix\": true\n    },\n    {\n      \"language\": \"html\",\n      \"autoFix\": true\n    },\n    {\n      \"language\": \"javascript\",\n      \"autoFix\": true\n    }\n  ],\n  \"prettier.singleQuote\": true, // ' or \"\"\n  \"prettier.semi\": false, // 分号\n  \"prettier.eslintIntegration\": true, // 走eslint\n```\n\n## 其他\n* GitLens 比自带的git好用多了的git 还能显示xx行是谁什么时候提交的\n* Settings Sync 同步设置到git上\n**强烈推荐** 具体安装步骤可以参考[其他人的博客](https://blog.csdn.net/u012207345/article/details/78246623)\n这里就\b写一下mac下的快捷键  \n```\ndownloadSettings\t    ⇧⌥D\nextension.updateSettings    ⇧⌥U\n```\n\n最后送上我当前配置的gist，\b有需要的可以安装上setting sync后将创建的gist改成这个来自动获取插件哦\n[gist 地址](https://gist.github.com/mizuka-wu/5c74462ce1620fd62af7beb88501d163)","source":"_posts/vscode插件分享.md","raw":"---\ntitle: vscode插件分享\ntags:\n  - 笔记\n  - 学习\n  - 记录\n  - vscode\ndate: 2018-11-09 10:26:22\ncategories: 开发的捷径\n---\n# VSCODE的插件系列\n> 使用vscode进行开发怎么能少的了插件呢  \n\n[![](https://badge.juejin.im/entry/5be530546fb9a049f153b37f/likes.svg?style=flat-square)](https://juejin.im/post/5be53004f265da615b70f7a0)\n\n丰富的插件让vscode更加好用 顺便推荐图床[（图床地址）](https://sm.ms/)\n\n# 美化插件\n* background 给编辑器窗口加个背景！唯一的缺点是vscode会\b显示已损坏，当然啦，并不影响使用\n![](https://i.loli.net/2018/11/09/5be524d44f7b0.png)\n可以参考以下配置\n```javascript\n  \"background.useDefault\": false,\n  \"background.style\": {\n    \"content\": \"''\",\n    \"pointer-events\": \"none\",\n    \"position\": \"absolute\",\n    \"z-index\": \"99999\",\n    \"width\": \"100%\",\n    \"height\": \"100%\",\n    \"background-position\": \"100% 90%\",\n    \"background-size\": \"auto 60%\",\n    \"background-repeat\": \"no-repeat\",\n    \"opacity\": 0.1\n  },\n  \"background.customImages\": [\n    \"背景图片地址1\",\n    \"背景图片地址2\",\n    \"背景图片地址3\"\n  ],\n```\n\n* carbon-now-sh 一个非常好看的代码截图工具 整合之后 \b选中然后快捷键就能截图啦 ![](https://i.loli.net/2018/11/09/5be5271f9c4e3.png)\n\n# \b开发辅助\n## Debugger\n* Debugger for Chrome 看名字就知道了\n* open in browser 懒得开浏览器用的\n* Quokka.js 实时计算，查看结果\n![](https://quokkajs.com/assets/img/vsc1.gif)\n\n## 路径补全以及包大小\n* File Peek\n* Import Cost 计算引入需要占用多大的地方\n* Path Intellisense\n\n## npm\n* npm\n* NPM-Scripts 方便运行脚本\n\n## 格式化\n* ESLint\n* Prettier 格式化\n* Vetur vue格式化以及相关配置\n* Vue 2 Snippets\n\neslint 和 prettier配合使用，vue自动保存格式化的配置\n```\n  \"vetur.format.defaultFormatter.html\": \"none\", // 默认html的方法\n  \"eslint.autoFixOnSave\": true, // 自动保存\n  \"eslint.validate\": [\n    {\n      \"language\": \"vue\",\n      \"autoFix\": true\n    },\n    {\n      \"language\": \"html\",\n      \"autoFix\": true\n    },\n    {\n      \"language\": \"javascript\",\n      \"autoFix\": true\n    }\n  ],\n  \"prettier.singleQuote\": true, // ' or \"\"\n  \"prettier.semi\": false, // 分号\n  \"prettier.eslintIntegration\": true, // 走eslint\n```\n\n## 其他\n* GitLens 比自带的git好用多了的git 还能显示xx行是谁什么时候提交的\n* Settings Sync 同步设置到git上\n**强烈推荐** 具体安装步骤可以参考[其他人的博客](https://blog.csdn.net/u012207345/article/details/78246623)\n这里就\b写一下mac下的快捷键  \n```\ndownloadSettings\t    ⇧⌥D\nextension.updateSettings    ⇧⌥U\n```\n\n最后送上我当前配置的gist，\b有需要的可以安装上setting sync后将创建的gist改成这个来自动获取插件哦\n[gist 地址](https://gist.github.com/mizuka-wu/5c74462ce1620fd62af7beb88501d163)","slug":"vscode插件分享","published":1,"updated":"2018-11-09T06:59:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxha000mw6il38s5gh7w","content":"<h1 id=\"VSCODE的插件系列\"><a href=\"#VSCODE的插件系列\" class=\"headerlink\" title=\"VSCODE的插件系列\"></a>VSCODE的插件系列</h1><blockquote>\n<p>使用vscode进行开发怎么能少的了插件呢  </p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5be53004f265da615b70f7a0\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5be530546fb9a049f153b37f/likes.svg?style=flat-square\" alt></a></p>\n<p>丰富的插件让vscode更加好用 顺便推荐图床<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">（图床地址）</a></p>\n<h1 id=\"美化插件\"><a href=\"#美化插件\" class=\"headerlink\" title=\"美化插件\"></a>美化插件</h1><ul>\n<li><p>background 给编辑器窗口加个背景！唯一的缺点是vscode会\b显示已损坏，当然啦，并不影响使用<br><img src=\"https://i.loli.net/2018/11/09/5be524d44f7b0.png\" alt><br>可以参考以下配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"background.useDefault\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"string\">\"background.style\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"content\"</span>: <span class=\"string\">\"''\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"pointer-events\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"z-index\"</span>: <span class=\"string\">\"99999\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-position\"</span>: <span class=\"string\">\"100% 90%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-size\"</span>: <span class=\"string\">\"auto 60%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-repeat\"</span>: <span class=\"string\">\"no-repeat\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"opacity\"</span>: <span class=\"number\">0.1</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">\"background.customImages\"</span>: [</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址1\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址2\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址3\"</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>carbon-now-sh 一个非常好看的代码截图工具 整合之后 \b选中然后快捷键就能截图啦 <img src=\"https://i.loli.net/2018/11/09/5be5271f9c4e3.png\" alt></p>\n</li>\n</ul>\n<h1 id=\"开发辅助\"><a href=\"#开发辅助\" class=\"headerlink\" title=\"\b开发辅助\"></a>\b开发辅助</h1><h2 id=\"Debugger\"><a href=\"#Debugger\" class=\"headerlink\" title=\"Debugger\"></a>Debugger</h2><ul>\n<li>Debugger for Chrome 看名字就知道了</li>\n<li>open in browser 懒得开浏览器用的</li>\n<li>Quokka.js 实时计算，查看结果<br><img src=\"https://quokkajs.com/assets/img/vsc1.gif\" alt></li>\n</ul>\n<h2 id=\"路径补全以及包大小\"><a href=\"#路径补全以及包大小\" class=\"headerlink\" title=\"路径补全以及包大小\"></a>路径补全以及包大小</h2><ul>\n<li>File Peek</li>\n<li>Import Cost 计算引入需要占用多大的地方</li>\n<li>Path Intellisense</li>\n</ul>\n<h2 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h2><ul>\n<li>npm</li>\n<li>NPM-Scripts 方便运行脚本</li>\n</ul>\n<h2 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h2><ul>\n<li>ESLint</li>\n<li>Prettier 格式化</li>\n<li>Vetur vue格式化以及相关配置</li>\n<li>Vue 2 Snippets</li>\n</ul>\n<p>eslint 和 prettier配合使用，vue自动保存格式化的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;vetur.format.defaultFormatter.html&quot;: &quot;none&quot;, // 默认html的方法</span><br><span class=\"line\">&quot;eslint.autoFixOnSave&quot;: true, // 自动保存</span><br><span class=\"line\">&quot;eslint.validate&quot;: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;vue&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;html&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">],</span><br><span class=\"line\">&quot;prettier.singleQuote&quot;: true, // &apos; or &quot;&quot;</span><br><span class=\"line\">&quot;prettier.semi&quot;: false, // 分号</span><br><span class=\"line\">&quot;prettier.eslintIntegration&quot;: true, // 走eslint</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>GitLens 比自带的git好用多了的git 还能显示xx行是谁什么时候提交的</li>\n<li>Settings Sync 同步设置到git上<br><strong>强烈推荐</strong> 具体安装步骤可以参考<a href=\"https://blog.csdn.net/u012207345/article/details/78246623\" target=\"_blank\" rel=\"noopener\">其他人的博客</a><br>这里就\b写一下mac下的快捷键  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">downloadSettings\t    ⇧⌥D</span><br><span class=\"line\">extension.updateSettings    ⇧⌥U</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>最后送上我当前配置的gist，\b有需要的可以安装上setting sync后将创建的gist改成这个来自动获取插件哦<br><a href=\"https://gist.github.com/mizuka-wu/5c74462ce1620fd62af7beb88501d163\" target=\"_blank\" rel=\"noopener\">gist 地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"VSCODE的插件系列\"><a href=\"#VSCODE的插件系列\" class=\"headerlink\" title=\"VSCODE的插件系列\"></a>VSCODE的插件系列</h1><blockquote>\n<p>使用vscode进行开发怎么能少的了插件呢  </p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5be53004f265da615b70f7a0\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5be530546fb9a049f153b37f/likes.svg?style=flat-square\" alt></a></p>\n<p>丰富的插件让vscode更加好用 顺便推荐图床<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">（图床地址）</a></p>\n<h1 id=\"美化插件\"><a href=\"#美化插件\" class=\"headerlink\" title=\"美化插件\"></a>美化插件</h1><ul>\n<li><p>background 给编辑器窗口加个背景！唯一的缺点是vscode会\b显示已损坏，当然啦，并不影响使用<br><img src=\"https://i.loli.net/2018/11/09/5be524d44f7b0.png\" alt><br>可以参考以下配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"background.useDefault\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"string\">\"background.style\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"content\"</span>: <span class=\"string\">\"''\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"pointer-events\"</span>: <span class=\"string\">\"none\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"z-index\"</span>: <span class=\"string\">\"99999\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-position\"</span>: <span class=\"string\">\"100% 90%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-size\"</span>: <span class=\"string\">\"auto 60%\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"background-repeat\"</span>: <span class=\"string\">\"no-repeat\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"opacity\"</span>: <span class=\"number\">0.1</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">\"background.customImages\"</span>: [</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址1\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址2\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"背景图片地址3\"</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>carbon-now-sh 一个非常好看的代码截图工具 整合之后 \b选中然后快捷键就能截图啦 <img src=\"https://i.loli.net/2018/11/09/5be5271f9c4e3.png\" alt></p>\n</li>\n</ul>\n<h1 id=\"开发辅助\"><a href=\"#开发辅助\" class=\"headerlink\" title=\"\b开发辅助\"></a>\b开发辅助</h1><h2 id=\"Debugger\"><a href=\"#Debugger\" class=\"headerlink\" title=\"Debugger\"></a>Debugger</h2><ul>\n<li>Debugger for Chrome 看名字就知道了</li>\n<li>open in browser 懒得开浏览器用的</li>\n<li>Quokka.js 实时计算，查看结果<br><img src=\"https://quokkajs.com/assets/img/vsc1.gif\" alt></li>\n</ul>\n<h2 id=\"路径补全以及包大小\"><a href=\"#路径补全以及包大小\" class=\"headerlink\" title=\"路径补全以及包大小\"></a>路径补全以及包大小</h2><ul>\n<li>File Peek</li>\n<li>Import Cost 计算引入需要占用多大的地方</li>\n<li>Path Intellisense</li>\n</ul>\n<h2 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h2><ul>\n<li>npm</li>\n<li>NPM-Scripts 方便运行脚本</li>\n</ul>\n<h2 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h2><ul>\n<li>ESLint</li>\n<li>Prettier 格式化</li>\n<li>Vetur vue格式化以及相关配置</li>\n<li>Vue 2 Snippets</li>\n</ul>\n<p>eslint 和 prettier配合使用，vue自动保存格式化的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;vetur.format.defaultFormatter.html&quot;: &quot;none&quot;, // 默认html的方法</span><br><span class=\"line\">&quot;eslint.autoFixOnSave&quot;: true, // 自动保存</span><br><span class=\"line\">&quot;eslint.validate&quot;: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;vue&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;html&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;language&quot;: &quot;javascript&quot;,</span><br><span class=\"line\">    &quot;autoFix&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">],</span><br><span class=\"line\">&quot;prettier.singleQuote&quot;: true, // &apos; or &quot;&quot;</span><br><span class=\"line\">&quot;prettier.semi&quot;: false, // 分号</span><br><span class=\"line\">&quot;prettier.eslintIntegration&quot;: true, // 走eslint</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>GitLens 比自带的git好用多了的git 还能显示xx行是谁什么时候提交的</li>\n<li>Settings Sync 同步设置到git上<br><strong>强烈推荐</strong> 具体安装步骤可以参考<a href=\"https://blog.csdn.net/u012207345/article/details/78246623\" target=\"_blank\" rel=\"noopener\">其他人的博客</a><br>这里就\b写一下mac下的快捷键  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">downloadSettings\t    ⇧⌥D</span><br><span class=\"line\">extension.updateSettings    ⇧⌥U</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>最后送上我当前配置的gist，\b有需要的可以安装上setting sync后将创建的gist改成这个来自动获取插件哦<br><a href=\"https://gist.github.com/mizuka-wu/5c74462ce1620fd62af7beb88501d163\" target=\"_blank\" rel=\"noopener\">gist 地址</a></p>\n"},{"title":"webpack正确的引入pdf.js","date":"2019-08-15T07:32:01.000Z","_content":"\n# pdf.js\n\n废话不多说,直接上代码\n\n```javascript\nimport pdfjs from 'pdfjs-dist/webpack'\n```\n\n简单明了，不用考虑 pdf.worker.js,不用考虑 cdn\n\n## 附上最近做的 pdf 生成和导出的两个库的基础配置\n\n```javascript\nimport pdfMake from 'pdfmake-support-chinese-fonts/pdfmake.min'\nimport pdfFonts from 'pdfmake-support-chinese-fonts/vfs_fonts'\nimport pdfjs from 'pdfjs-dist/webpack'\npdfMake.vfs = pdfFonts.pdfMake.vfs\npdfMake.fonts = {\n  Roboto: {\n    normal: 'Roboto-Regular.ttf',\n    bold: 'Roboto-Regular.ttf',\n    italics: 'Roboto-Regular.ttf',\n    bolditalics: 'Roboto-Regular.ttf'\n  },\n  fangzhen: {\n    normal: 'fzhei-jt.TTF',\n    bold: 'fzhei-jt.TTF',\n    italics: 'fzhei-jt.TTF',\n    bolditalics: 'fzhei-jt.TTF'\n  }\n}\n\nexport const pdfMaker = pdfMake\nexport const pdfViewer = pdfjs\n```\n","source":"_posts/webpack正确的引入pdfjs.md","raw":"---\ntitle: webpack正确的引入pdf.js\ntags:\n  - 笔记\n  - 学习\n  - 记录\n  - vscode\ndate: 2019-08-15 15:32:01\ncategories: 开发的捷径\n---\n\n# pdf.js\n\n废话不多说,直接上代码\n\n```javascript\nimport pdfjs from 'pdfjs-dist/webpack'\n```\n\n简单明了，不用考虑 pdf.worker.js,不用考虑 cdn\n\n## 附上最近做的 pdf 生成和导出的两个库的基础配置\n\n```javascript\nimport pdfMake from 'pdfmake-support-chinese-fonts/pdfmake.min'\nimport pdfFonts from 'pdfmake-support-chinese-fonts/vfs_fonts'\nimport pdfjs from 'pdfjs-dist/webpack'\npdfMake.vfs = pdfFonts.pdfMake.vfs\npdfMake.fonts = {\n  Roboto: {\n    normal: 'Roboto-Regular.ttf',\n    bold: 'Roboto-Regular.ttf',\n    italics: 'Roboto-Regular.ttf',\n    bolditalics: 'Roboto-Regular.ttf'\n  },\n  fangzhen: {\n    normal: 'fzhei-jt.TTF',\n    bold: 'fzhei-jt.TTF',\n    italics: 'fzhei-jt.TTF',\n    bolditalics: 'fzhei-jt.TTF'\n  }\n}\n\nexport const pdfMaker = pdfMake\nexport const pdfViewer = pdfjs\n```\n","slug":"webpack正确的引入pdfjs","published":1,"updated":"2019-10-31T01:08:40.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhd000pw6ilrq2sfq0k","content":"<h1 id=\"pdf-js\"><a href=\"#pdf-js\" class=\"headerlink\" title=\"pdf.js\"></a>pdf.js</h1><p>废话不多说,直接上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pdfjs <span class=\"keyword\">from</span> <span class=\"string\">'pdfjs-dist/webpack'</span></span><br></pre></td></tr></table></figure>\n<p>简单明了，不用考虑 pdf.worker.js,不用考虑 cdn</p>\n<h2 id=\"附上最近做的-pdf-生成和导出的两个库的基础配置\"><a href=\"#附上最近做的-pdf-生成和导出的两个库的基础配置\" class=\"headerlink\" title=\"附上最近做的 pdf 生成和导出的两个库的基础配置\"></a>附上最近做的 pdf 生成和导出的两个库的基础配置</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pdfMake <span class=\"keyword\">from</span> <span class=\"string\">'pdfmake-support-chinese-fonts/pdfmake.min'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pdfFonts <span class=\"keyword\">from</span> <span class=\"string\">'pdfmake-support-chinese-fonts/vfs_fonts'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pdfjs <span class=\"keyword\">from</span> <span class=\"string\">'pdfjs-dist/webpack'</span></span><br><span class=\"line\">pdfMake.vfs = pdfFonts.pdfMake.vfs</span><br><span class=\"line\">pdfMake.fonts = &#123;</span><br><span class=\"line\">  Roboto: &#123;</span><br><span class=\"line\">    normal: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    bold: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    italics: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    bolditalics: <span class=\"string\">'Roboto-Regular.ttf'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  fangzhen: &#123;</span><br><span class=\"line\">    normal: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    bold: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    italics: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    bolditalics: <span class=\"string\">'fzhei-jt.TTF'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pdfMaker = pdfMake</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pdfViewer = pdfjs</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"pdf-js\"><a href=\"#pdf-js\" class=\"headerlink\" title=\"pdf.js\"></a>pdf.js</h1><p>废话不多说,直接上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pdfjs <span class=\"keyword\">from</span> <span class=\"string\">'pdfjs-dist/webpack'</span></span><br></pre></td></tr></table></figure>\n<p>简单明了，不用考虑 pdf.worker.js,不用考虑 cdn</p>\n<h2 id=\"附上最近做的-pdf-生成和导出的两个库的基础配置\"><a href=\"#附上最近做的-pdf-生成和导出的两个库的基础配置\" class=\"headerlink\" title=\"附上最近做的 pdf 生成和导出的两个库的基础配置\"></a>附上最近做的 pdf 生成和导出的两个库的基础配置</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pdfMake <span class=\"keyword\">from</span> <span class=\"string\">'pdfmake-support-chinese-fonts/pdfmake.min'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pdfFonts <span class=\"keyword\">from</span> <span class=\"string\">'pdfmake-support-chinese-fonts/vfs_fonts'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pdfjs <span class=\"keyword\">from</span> <span class=\"string\">'pdfjs-dist/webpack'</span></span><br><span class=\"line\">pdfMake.vfs = pdfFonts.pdfMake.vfs</span><br><span class=\"line\">pdfMake.fonts = &#123;</span><br><span class=\"line\">  Roboto: &#123;</span><br><span class=\"line\">    normal: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    bold: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    italics: <span class=\"string\">'Roboto-Regular.ttf'</span>,</span><br><span class=\"line\">    bolditalics: <span class=\"string\">'Roboto-Regular.ttf'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  fangzhen: &#123;</span><br><span class=\"line\">    normal: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    bold: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    italics: <span class=\"string\">'fzhei-jt.TTF'</span>,</span><br><span class=\"line\">    bolditalics: <span class=\"string\">'fzhei-jt.TTF'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pdfMaker = pdfMake</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> pdfViewer = pdfjs</span><br></pre></td></tr></table></figure>\n"},{"title":"一次Rem莫名失效的解决过程","date":"2019-10-29T08:17:35.000Z","_content":"\n# 事件起因\n\n以前同事突然之间让我过来帮忙解决一个他无法理解的问题，手机活动页使用了 rem 来自适应屏幕，但是文字却莫名奇妙的变大了？\n\n## 定位原因\n\n因为无法看到源码，只能考虑根据条件过滤出可能造成问题的原因和临界条件，根据对方所说，只有一块区域粘贴上需要的文本之后，字体莫名的放大了\n\n原始的\n\n```html\n<div>\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n</div>\n```\n\n想要的\n\n```html\nxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxx\n```\n\n实际上\n\n```html\nXXXXXXXXXXXXXXXXXXXXX XXX XXXXXXXXXXXXXXXXXXXXX XXXXXXXXX XXXXXXXXXXXX\nXXXXXXXXXXXX XXXXXXX XXXXXXXXXXXXXXXXXXXXX\n```\n\n只有这个 div 里文字都被放大了\n\n所以考虑这段文本的临时解决方案和实际问题原因\n\n### 临时方案\n\n1. style 钉死 font-size 可行\n2. 用 div 替代 br 重新排列 可行\n\n### 查找原因\n\n#### 可能性 1: 粘贴进的文本有奇怪字符串导致问题\n\n查阅了浏览器特性，应该没有这个问题，同时重新手打了一遍，问题依旧\n\n#### 可能性 2: 浏览器特性和字数有关\n\n在手打的情况下，验证了字符串数少于一定的量之后整个显示是正常的\n\n#### 可能性 3: 和浏览器最小字符大小有关\n\n比最小的 12px 大，所以排除\n\n综上，是字符串数量的问题，以上，有了原因就能找到解决方案了\n\n## 问题原因\n\n> 这个特性被称做「Text Autosizer」，又称「Font Boosting」、「Font Inflation」，是 Webkit 给移动端浏览器提供的一个特性：当我们在手机上浏览网页时，很可能因为原始页面宽度较大，在手机屏幕上缩小后就看不清其中的文字了。而 Font Boosting 特性在这时会自动将其中的文字字体变大，保证在即不需要左右滑动屏幕，也不需要双击放大屏幕内容的前提下，也可以让人们方便的阅读页面中的文本。\n\n![](https://cloud.githubusercontent.com/assets/339891/9324116/d7c37ef0-45b9-11e5-8e7d-5d882063f2f4.png)\n\n具体解析可以看[这篇文章](https://github.com/amfe/article/issues/10)\n\n## 解决问题\n\n1. 因为事先知道哪个 div，所以在这个 div 上添加`max-height: 9999px`;\n2. 不知道为啥，`display: inline;` 也可以\n3. 根据试验，`text-size-adjust: none;` 也行 s\n","source":"_posts/一次Rem莫名失效的解决.md","raw":"---\ntitle: 一次Rem莫名失效的解决过程\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\n  - font-size\n  - rem\ndate: 2019-10-29 16:17:35\ncategories: 可以公开的情报\n---\n\n# 事件起因\n\n以前同事突然之间让我过来帮忙解决一个他无法理解的问题，手机活动页使用了 rem 来自适应屏幕，但是文字却莫名奇妙的变大了？\n\n## 定位原因\n\n因为无法看到源码，只能考虑根据条件过滤出可能造成问题的原因和临界条件，根据对方所说，只有一块区域粘贴上需要的文本之后，字体莫名的放大了\n\n原始的\n\n```html\n<div>\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n  xxxxxxx<br />\n  xxxxxxxxxxxxxxxxxxxxxxx<br />\n</div>\n```\n\n想要的\n\n```html\nxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxx\n```\n\n实际上\n\n```html\nXXXXXXXXXXXXXXXXXXXXX XXX XXXXXXXXXXXXXXXXXXXXX XXXXXXXXX XXXXXXXXXXXX\nXXXXXXXXXXXX XXXXXXX XXXXXXXXXXXXXXXXXXXXX\n```\n\n只有这个 div 里文字都被放大了\n\n所以考虑这段文本的临时解决方案和实际问题原因\n\n### 临时方案\n\n1. style 钉死 font-size 可行\n2. 用 div 替代 br 重新排列 可行\n\n### 查找原因\n\n#### 可能性 1: 粘贴进的文本有奇怪字符串导致问题\n\n查阅了浏览器特性，应该没有这个问题，同时重新手打了一遍，问题依旧\n\n#### 可能性 2: 浏览器特性和字数有关\n\n在手打的情况下，验证了字符串数少于一定的量之后整个显示是正常的\n\n#### 可能性 3: 和浏览器最小字符大小有关\n\n比最小的 12px 大，所以排除\n\n综上，是字符串数量的问题，以上，有了原因就能找到解决方案了\n\n## 问题原因\n\n> 这个特性被称做「Text Autosizer」，又称「Font Boosting」、「Font Inflation」，是 Webkit 给移动端浏览器提供的一个特性：当我们在手机上浏览网页时，很可能因为原始页面宽度较大，在手机屏幕上缩小后就看不清其中的文字了。而 Font Boosting 特性在这时会自动将其中的文字字体变大，保证在即不需要左右滑动屏幕，也不需要双击放大屏幕内容的前提下，也可以让人们方便的阅读页面中的文本。\n\n![](https://cloud.githubusercontent.com/assets/339891/9324116/d7c37ef0-45b9-11e5-8e7d-5d882063f2f4.png)\n\n具体解析可以看[这篇文章](https://github.com/amfe/article/issues/10)\n\n## 解决问题\n\n1. 因为事先知道哪个 div，所以在这个 div 上添加`max-height: 9999px`;\n2. 不知道为啥，`display: inline;` 也可以\n3. 根据试验，`text-size-adjust: none;` 也行 s\n","slug":"一次Rem莫名失效的解决","published":1,"updated":"2019-10-30T02:02:57.051Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhg000tw6ild6x09jjt","content":"<h1 id=\"事件起因\"><a href=\"#事件起因\" class=\"headerlink\" title=\"事件起因\"></a>事件起因</h1><p>以前同事突然之间让我过来帮忙解决一个他无法理解的问题，手机活动页使用了 rem 来自适应屏幕，但是文字却莫名奇妙的变大了？</p>\n<h2 id=\"定位原因\"><a href=\"#定位原因\" class=\"headerlink\" title=\"定位原因\"></a>定位原因</h2><p>因为无法看到源码，只能考虑根据条件过滤出可能造成问题的原因和临界条件，根据对方所说，只有一块区域粘贴上需要的文本之后，字体莫名的放大了</p>\n<p>原始的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>想要的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxx</span><br><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxx</span><br><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure>\n<p>实际上</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XXXXXXXXXXXXXXXXXXXXX XXX XXXXXXXXXXXXXXXXXXXXX XXXXXXXXX XXXXXXXXXXXX</span><br><span class=\"line\">XXXXXXXXXXXX XXXXXXX XXXXXXXXXXXXXXXXXXXXX</span><br></pre></td></tr></table></figure>\n<p>只有这个 div 里文字都被放大了</p>\n<p>所以考虑这段文本的临时解决方案和实际问题原因</p>\n<h3 id=\"临时方案\"><a href=\"#临时方案\" class=\"headerlink\" title=\"临时方案\"></a>临时方案</h3><ol>\n<li>style 钉死 font-size 可行</li>\n<li>用 div 替代 br 重新排列 可行</li>\n</ol>\n<h3 id=\"查找原因\"><a href=\"#查找原因\" class=\"headerlink\" title=\"查找原因\"></a>查找原因</h3><h4 id=\"可能性-1-粘贴进的文本有奇怪字符串导致问题\"><a href=\"#可能性-1-粘贴进的文本有奇怪字符串导致问题\" class=\"headerlink\" title=\"可能性 1: 粘贴进的文本有奇怪字符串导致问题\"></a>可能性 1: 粘贴进的文本有奇怪字符串导致问题</h4><p>查阅了浏览器特性，应该没有这个问题，同时重新手打了一遍，问题依旧</p>\n<h4 id=\"可能性-2-浏览器特性和字数有关\"><a href=\"#可能性-2-浏览器特性和字数有关\" class=\"headerlink\" title=\"可能性 2: 浏览器特性和字数有关\"></a>可能性 2: 浏览器特性和字数有关</h4><p>在手打的情况下，验证了字符串数少于一定的量之后整个显示是正常的</p>\n<h4 id=\"可能性-3-和浏览器最小字符大小有关\"><a href=\"#可能性-3-和浏览器最小字符大小有关\" class=\"headerlink\" title=\"可能性 3: 和浏览器最小字符大小有关\"></a>可能性 3: 和浏览器最小字符大小有关</h4><p>比最小的 12px 大，所以排除</p>\n<p>综上，是字符串数量的问题，以上，有了原因就能找到解决方案了</p>\n<h2 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h2><blockquote>\n<p>这个特性被称做「Text Autosizer」，又称「Font Boosting」、「Font Inflation」，是 Webkit 给移动端浏览器提供的一个特性：当我们在手机上浏览网页时，很可能因为原始页面宽度较大，在手机屏幕上缩小后就看不清其中的文字了。而 Font Boosting 特性在这时会自动将其中的文字字体变大，保证在即不需要左右滑动屏幕，也不需要双击放大屏幕内容的前提下，也可以让人们方便的阅读页面中的文本。</p>\n</blockquote>\n<p><img src=\"https://cloud.githubusercontent.com/assets/339891/9324116/d7c37ef0-45b9-11e5-8e7d-5d882063f2f4.png\" alt></p>\n<p>具体解析可以看<a href=\"https://github.com/amfe/article/issues/10\" target=\"_blank\" rel=\"noopener\">这篇文章</a></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><ol>\n<li>因为事先知道哪个 div，所以在这个 div 上添加<code>max-height: 9999px</code>;</li>\n<li>不知道为啥，<code>display: inline;</code> 也可以</li>\n<li>根据试验，<code>text-size-adjust: none;</code> 也行 s</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"事件起因\"><a href=\"#事件起因\" class=\"headerlink\" title=\"事件起因\"></a>事件起因</h1><p>以前同事突然之间让我过来帮忙解决一个他无法理解的问题，手机活动页使用了 rem 来自适应屏幕，但是文字却莫名奇妙的变大了？</p>\n<h2 id=\"定位原因\"><a href=\"#定位原因\" class=\"headerlink\" title=\"定位原因\"></a>定位原因</h2><p>因为无法看到源码，只能考虑根据条件过滤出可能造成问题的原因和临界条件，根据对方所说，只有一块区域粘贴上需要的文本之后，字体莫名的放大了</p>\n<p>原始的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">  xxxxxxxxxxxxxxxxxxxxxxx<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>想要的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxx</span><br><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxx xxxxxxx</span><br><span class=\"line\">xxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure>\n<p>实际上</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XXXXXXXXXXXXXXXXXXXXX XXX XXXXXXXXXXXXXXXXXXXXX XXXXXXXXX XXXXXXXXXXXX</span><br><span class=\"line\">XXXXXXXXXXXX XXXXXXX XXXXXXXXXXXXXXXXXXXXX</span><br></pre></td></tr></table></figure>\n<p>只有这个 div 里文字都被放大了</p>\n<p>所以考虑这段文本的临时解决方案和实际问题原因</p>\n<h3 id=\"临时方案\"><a href=\"#临时方案\" class=\"headerlink\" title=\"临时方案\"></a>临时方案</h3><ol>\n<li>style 钉死 font-size 可行</li>\n<li>用 div 替代 br 重新排列 可行</li>\n</ol>\n<h3 id=\"查找原因\"><a href=\"#查找原因\" class=\"headerlink\" title=\"查找原因\"></a>查找原因</h3><h4 id=\"可能性-1-粘贴进的文本有奇怪字符串导致问题\"><a href=\"#可能性-1-粘贴进的文本有奇怪字符串导致问题\" class=\"headerlink\" title=\"可能性 1: 粘贴进的文本有奇怪字符串导致问题\"></a>可能性 1: 粘贴进的文本有奇怪字符串导致问题</h4><p>查阅了浏览器特性，应该没有这个问题，同时重新手打了一遍，问题依旧</p>\n<h4 id=\"可能性-2-浏览器特性和字数有关\"><a href=\"#可能性-2-浏览器特性和字数有关\" class=\"headerlink\" title=\"可能性 2: 浏览器特性和字数有关\"></a>可能性 2: 浏览器特性和字数有关</h4><p>在手打的情况下，验证了字符串数少于一定的量之后整个显示是正常的</p>\n<h4 id=\"可能性-3-和浏览器最小字符大小有关\"><a href=\"#可能性-3-和浏览器最小字符大小有关\" class=\"headerlink\" title=\"可能性 3: 和浏览器最小字符大小有关\"></a>可能性 3: 和浏览器最小字符大小有关</h4><p>比最小的 12px 大，所以排除</p>\n<p>综上，是字符串数量的问题，以上，有了原因就能找到解决方案了</p>\n<h2 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h2><blockquote>\n<p>这个特性被称做「Text Autosizer」，又称「Font Boosting」、「Font Inflation」，是 Webkit 给移动端浏览器提供的一个特性：当我们在手机上浏览网页时，很可能因为原始页面宽度较大，在手机屏幕上缩小后就看不清其中的文字了。而 Font Boosting 特性在这时会自动将其中的文字字体变大，保证在即不需要左右滑动屏幕，也不需要双击放大屏幕内容的前提下，也可以让人们方便的阅读页面中的文本。</p>\n</blockquote>\n<p><img src=\"https://cloud.githubusercontent.com/assets/339891/9324116/d7c37ef0-45b9-11e5-8e7d-5d882063f2f4.png\" alt></p>\n<p>具体解析可以看<a href=\"https://github.com/amfe/article/issues/10\" target=\"_blank\" rel=\"noopener\">这篇文章</a></p>\n<h2 id=\"解决问题\"><a href=\"#解决问题\" class=\"headerlink\" title=\"解决问题\"></a>解决问题</h2><ol>\n<li>因为事先知道哪个 div，所以在这个 div 上添加<code>max-height: 9999px</code>;</li>\n<li>不知道为啥，<code>display: inline;</code> 也可以</li>\n<li>根据试验，<code>text-size-adjust: none;</code> 也行 s</li>\n</ol>\n"},{"title":"一次node内存泄漏排查和解决","date":"2019-06-10T02:41:57.000Z","_content":"\n# 背景\n\n公司需要对接各种渠道，进行渠道管理进行了统一规范，生成了 ChannelManager 这个类，上线后发现一直报警，内存居高不下，而且走势呈阶梯上升，判断发生了内存泄漏\n\n## 技术栈\n\n### Nuxt\n\n基于 nuxt 和 vue 开发的一套前端代码\n\n### nodejs 性能平台\n\nalinode，一个 ali 官方出的用来监控整个 node 内存和机器运行情况的程序，非常好用，问题是数据有一定延时\n\n## 解决的步骤\n\n### 首先尝试临时解决问题\n\n因为线上一共有四台机器跑 ssr，所以通过设置不同的 crontab 进行分批重启 pm2，使得服务不间断\n\n### 下线问题的 feture\n\n最近上线的 feture 只有 channelManager，于是回滚代码之后重新发布，发现问题解决，找到问题代码区域\n\n### CodeReview\n\n开会大家回顾整个问题代码，分析之后发现可能的问题在于使用了 global 的 mixin，改成 Vue plugin 的形式使用，具体可以参考[这个 issue](https://github.com/vuejs/vue/issues/5089#issuecomment-284260111)\n测试环境下发现问题依旧没有解决\n\n### 验尸\n\n对比了最近几次 alinode 抓下的堆快照，发现所有的闭包都是 vue 实例，而且都会有一个同样的 key`$channelManager`\n\n### 找出问题所在\n\n最终发现是上 channelManager 的时候在 nuxt 的 plugin 中使用了 inject，因为 inject 的时候是同一个实例，本身的目的是可以获取 channel 列表\n\n```javascript\nmodule.exports = (ctx, inject) => {\n  const ChannelManager = require('ChannelManager')\n  inject('channelManager', ChannelManager)\n}\n```\n\n## 原因\n\n在于 v8 的整个 gc 机制在于是否能够被访问到，因为 inject 之后不知道为何从 channelManager 能够访问到所有 inject 之后的 vue 实例，所以这一系列的 vue 对象都不可被回收\n","source":"_posts/一次node内存泄漏排查和解决.md","raw":"---\ntitle: 一次node内存泄漏排查和解决\ntags:\n  - 前端\n  - 经验\ndate: 2019-06-010 10:41:57\ncategories: 可以公开的情报\n---\n\n# 背景\n\n公司需要对接各种渠道，进行渠道管理进行了统一规范，生成了 ChannelManager 这个类，上线后发现一直报警，内存居高不下，而且走势呈阶梯上升，判断发生了内存泄漏\n\n## 技术栈\n\n### Nuxt\n\n基于 nuxt 和 vue 开发的一套前端代码\n\n### nodejs 性能平台\n\nalinode，一个 ali 官方出的用来监控整个 node 内存和机器运行情况的程序，非常好用，问题是数据有一定延时\n\n## 解决的步骤\n\n### 首先尝试临时解决问题\n\n因为线上一共有四台机器跑 ssr，所以通过设置不同的 crontab 进行分批重启 pm2，使得服务不间断\n\n### 下线问题的 feture\n\n最近上线的 feture 只有 channelManager，于是回滚代码之后重新发布，发现问题解决，找到问题代码区域\n\n### CodeReview\n\n开会大家回顾整个问题代码，分析之后发现可能的问题在于使用了 global 的 mixin，改成 Vue plugin 的形式使用，具体可以参考[这个 issue](https://github.com/vuejs/vue/issues/5089#issuecomment-284260111)\n测试环境下发现问题依旧没有解决\n\n### 验尸\n\n对比了最近几次 alinode 抓下的堆快照，发现所有的闭包都是 vue 实例，而且都会有一个同样的 key`$channelManager`\n\n### 找出问题所在\n\n最终发现是上 channelManager 的时候在 nuxt 的 plugin 中使用了 inject，因为 inject 的时候是同一个实例，本身的目的是可以获取 channel 列表\n\n```javascript\nmodule.exports = (ctx, inject) => {\n  const ChannelManager = require('ChannelManager')\n  inject('channelManager', ChannelManager)\n}\n```\n\n## 原因\n\n在于 v8 的整个 gc 机制在于是否能够被访问到，因为 inject 之后不知道为何从 channelManager 能够访问到所有 inject 之后的 vue 实例，所以这一系列的 vue 对象都不可被回收\n","slug":"一次node内存泄漏排查和解决","published":1,"updated":"2019-06-10T02:28:35.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhh000xw6ilhks7zvy1","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>公司需要对接各种渠道，进行渠道管理进行了统一规范，生成了 ChannelManager 这个类，上线后发现一直报警，内存居高不下，而且走势呈阶梯上升，判断发生了内存泄漏</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><h3 id=\"Nuxt\"><a href=\"#Nuxt\" class=\"headerlink\" title=\"Nuxt\"></a>Nuxt</h3><p>基于 nuxt 和 vue 开发的一套前端代码</p>\n<h3 id=\"nodejs-性能平台\"><a href=\"#nodejs-性能平台\" class=\"headerlink\" title=\"nodejs 性能平台\"></a>nodejs 性能平台</h3><p>alinode，一个 ali 官方出的用来监控整个 node 内存和机器运行情况的程序，非常好用，问题是数据有一定延时</p>\n<h2 id=\"解决的步骤\"><a href=\"#解决的步骤\" class=\"headerlink\" title=\"解决的步骤\"></a>解决的步骤</h2><h3 id=\"首先尝试临时解决问题\"><a href=\"#首先尝试临时解决问题\" class=\"headerlink\" title=\"首先尝试临时解决问题\"></a>首先尝试临时解决问题</h3><p>因为线上一共有四台机器跑 ssr，所以通过设置不同的 crontab 进行分批重启 pm2，使得服务不间断</p>\n<h3 id=\"下线问题的-feture\"><a href=\"#下线问题的-feture\" class=\"headerlink\" title=\"下线问题的 feture\"></a>下线问题的 feture</h3><p>最近上线的 feture 只有 channelManager，于是回滚代码之后重新发布，发现问题解决，找到问题代码区域</p>\n<h3 id=\"CodeReview\"><a href=\"#CodeReview\" class=\"headerlink\" title=\"CodeReview\"></a>CodeReview</h3><p>开会大家回顾整个问题代码，分析之后发现可能的问题在于使用了 global 的 mixin，改成 Vue plugin 的形式使用，具体可以参考<a href=\"https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\" target=\"_blank\" rel=\"noopener\">这个 issue</a><br>测试环境下发现问题依旧没有解决</p>\n<h3 id=\"验尸\"><a href=\"#验尸\" class=\"headerlink\" title=\"验尸\"></a>验尸</h3><p>对比了最近几次 alinode 抓下的堆快照，发现所有的闭包都是 vue 实例，而且都会有一个同样的 key<code>$channelManager</code></p>\n<h3 id=\"找出问题所在\"><a href=\"#找出问题所在\" class=\"headerlink\" title=\"找出问题所在\"></a>找出问题所在</h3><p>最终发现是上 channelManager 的时候在 nuxt 的 plugin 中使用了 inject，因为 inject 的时候是同一个实例，本身的目的是可以获取 channel 列表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">ctx, inject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ChannelManager = <span class=\"built_in\">require</span>(<span class=\"string\">'ChannelManager'</span>)</span><br><span class=\"line\">  inject(<span class=\"string\">'channelManager'</span>, ChannelManager)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>在于 v8 的整个 gc 机制在于是否能够被访问到，因为 inject 之后不知道为何从 channelManager 能够访问到所有 inject 之后的 vue 实例，所以这一系列的 vue 对象都不可被回收</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>公司需要对接各种渠道，进行渠道管理进行了统一规范，生成了 ChannelManager 这个类，上线后发现一直报警，内存居高不下，而且走势呈阶梯上升，判断发生了内存泄漏</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><h3 id=\"Nuxt\"><a href=\"#Nuxt\" class=\"headerlink\" title=\"Nuxt\"></a>Nuxt</h3><p>基于 nuxt 和 vue 开发的一套前端代码</p>\n<h3 id=\"nodejs-性能平台\"><a href=\"#nodejs-性能平台\" class=\"headerlink\" title=\"nodejs 性能平台\"></a>nodejs 性能平台</h3><p>alinode，一个 ali 官方出的用来监控整个 node 内存和机器运行情况的程序，非常好用，问题是数据有一定延时</p>\n<h2 id=\"解决的步骤\"><a href=\"#解决的步骤\" class=\"headerlink\" title=\"解决的步骤\"></a>解决的步骤</h2><h3 id=\"首先尝试临时解决问题\"><a href=\"#首先尝试临时解决问题\" class=\"headerlink\" title=\"首先尝试临时解决问题\"></a>首先尝试临时解决问题</h3><p>因为线上一共有四台机器跑 ssr，所以通过设置不同的 crontab 进行分批重启 pm2，使得服务不间断</p>\n<h3 id=\"下线问题的-feture\"><a href=\"#下线问题的-feture\" class=\"headerlink\" title=\"下线问题的 feture\"></a>下线问题的 feture</h3><p>最近上线的 feture 只有 channelManager，于是回滚代码之后重新发布，发现问题解决，找到问题代码区域</p>\n<h3 id=\"CodeReview\"><a href=\"#CodeReview\" class=\"headerlink\" title=\"CodeReview\"></a>CodeReview</h3><p>开会大家回顾整个问题代码，分析之后发现可能的问题在于使用了 global 的 mixin，改成 Vue plugin 的形式使用，具体可以参考<a href=\"https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\" target=\"_blank\" rel=\"noopener\">这个 issue</a><br>测试环境下发现问题依旧没有解决</p>\n<h3 id=\"验尸\"><a href=\"#验尸\" class=\"headerlink\" title=\"验尸\"></a>验尸</h3><p>对比了最近几次 alinode 抓下的堆快照，发现所有的闭包都是 vue 实例，而且都会有一个同样的 key<code>$channelManager</code></p>\n<h3 id=\"找出问题所在\"><a href=\"#找出问题所在\" class=\"headerlink\" title=\"找出问题所在\"></a>找出问题所在</h3><p>最终发现是上 channelManager 的时候在 nuxt 的 plugin 中使用了 inject，因为 inject 的时候是同一个实例，本身的目的是可以获取 channel 列表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">ctx, inject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ChannelManager = <span class=\"built_in\">require</span>(<span class=\"string\">'ChannelManager'</span>)</span><br><span class=\"line\">  inject(<span class=\"string\">'channelManager'</span>, ChannelManager)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h2><p>在于 v8 的整个 gc 机制在于是否能够被访问到，因为 inject 之后不知道为何从 channelManager 能够访问到所有 inject 之后的 vue 实例，所以这一系列的 vue 对象都不可被回收</p>\n"},{"title":"上传app卡在通过app store进行鉴定","date":"2019-07-09T10:17:35.000Z","_content":"\n```bash\ncd ~\nmv .itmstransporter/ .old_itmstransporter/\n\"/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/itms/bin/iTMSTransporter\"\n```\n","source":"_posts/上传app卡在通过App store进行鉴定.md","raw":"---\ntitle: 上传app卡在通过app store进行鉴定\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\n  - ios\ndate: 2019-07-09 18:17:35\ncategories:\n---\n\n```bash\ncd ~\nmv .itmstransporter/ .old_itmstransporter/\n\"/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/itms/bin/iTMSTransporter\"\n```\n","slug":"上传app卡在通过App store进行鉴定","published":1,"updated":"2019-07-11T11:34:50.731Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhj0010w6il67z6qsei","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mv .itmstransporter/ .old_itmstransporter/</span><br><span class=\"line\"><span class=\"string\">\"/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/itms/bin/iTMSTransporter\"</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mv .itmstransporter/ .old_itmstransporter/</span><br><span class=\"line\"><span class=\"string\">\"/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/itms/bin/iTMSTransporter\"</span></span><br></pre></td></tr></table></figure>\n"},{"title":"从js数组重查找出重复元素的方法","date":"2018-10-18T03:12:53.000Z","_content":"# 一段从数组中获取重复数据的代码\n```\nArray.prototype.duplicate=function() {\n  let tmp = [];\n  this.concat().sort().sort(function(a,b){\n    if(a==b && tmp.indexOf(a) === -1) tmp.push(a);\n  });\n  return tmp;\n}\n```\n","source":"_posts/从js数组重查找出重复元素的方法.md","raw":"---\ntitle: 从js数组重查找出重复元素的方法\ndate: 2018-10-18 11:12:53\ntags:\n    - js\n    - ecmascript\n    - 数组\n    - 技巧\ncategories: 开发的捷径    \n---\n# 一段从数组中获取重复数据的代码\n```\nArray.prototype.duplicate=function() {\n  let tmp = [];\n  this.concat().sort().sort(function(a,b){\n    if(a==b && tmp.indexOf(a) === -1) tmp.push(a);\n  });\n  return tmp;\n}\n```\n","slug":"从js数组重查找出重复元素的方法","published":1,"updated":"2018-10-18T03:14:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhl0014w6iltpjz70l3","content":"<h1 id=\"一段从数组中获取重复数据的代码\"><a href=\"#一段从数组中获取重复数据的代码\" class=\"headerlink\" title=\"一段从数组中获取重复数据的代码\"></a>一段从数组中获取重复数据的代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.prototype.duplicate=function() &#123;</span><br><span class=\"line\">  let tmp = [];</span><br><span class=\"line\">  this.concat().sort().sort(function(a,b)&#123;</span><br><span class=\"line\">    if(a==b &amp;&amp; tmp.indexOf(a) === -1) tmp.push(a);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"一段从数组中获取重复数据的代码\"><a href=\"#一段从数组中获取重复数据的代码\" class=\"headerlink\" title=\"一段从数组中获取重复数据的代码\"></a>一段从数组中获取重复数据的代码</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array.prototype.duplicate=function() &#123;</span><br><span class=\"line\">  let tmp = [];</span><br><span class=\"line\">  this.concat().sort().sort(function(a,b)&#123;</span><br><span class=\"line\">    if(a==b &amp;&amp; tmp.indexOf(a) === -1) tmp.push(a);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  return tmp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"关于最近一年多工作的反思-复盘","date":"2019-12-28T13:17:35.000Z","_content":"\n> 年底将至，宜三省吾身，是时候做个年终总结了\n\n2019 年，经历了从**票牛**到**饿了么**的工作历程，想想在票牛工作的一年时间，回过头来，感觉已经做了很多，又感觉没有做什么，所以也是时候做个复盘，来看看自己做过哪些，又有哪些不足了\n\n## 我经历过什么\n\n### 从一个业务到另一个业务\n\n- 票牛，应该是我进入的第一家比较正规的公司，有完善的研发和公司机制，整个研发团队分成了三条业务线，刚入公司进入的就是内容线，主题负责的还是**小程序**(当时还是原生的)的改进以及内容线各类**h5**页面的编写，当然也负责了一部分后台管理系统页面的编写\n\n- 到了 19 年初，公司整体重组，从此又开始重头干起了商家端的所有工具，这次就不仅仅只是网页和小程序了，这一次还加上了公司原先**react native**的部分，不过趁着这个机会，倒是完全熟悉了整个 react 的生态部分\n\n- 7 月份的时候，又因为战略问题，去构建了新的项目，这一次稍微简单一点，只有 pc 的部分，负责的方面也有了一些变化，变为了整个前端的架构\n\n- 到了饿了么，就又是另一个业务了\n\n### 技术栈的变化\n\n之前因为要做一个静态站点，就考虑使用了一下`jquery`(兼容一下 api)，结果发现已经基本不会写了 orz\n\n之前一直都是以`vue`为主，进了票牛之后，因为历史项目的原因，也是一边用`ng1`一边用`vue`进行开发的，后来开发 app 的时候又开始`react`的旅程\n\n当然影响最大的一点就是`react`16.9 推出之后，新的**生命周期**和**hooks**语法真的是太香了，简直改变了整个开发体验，现在感觉下来\n\n#### 从上手和快速开发来说\n\nvue > react > ng1\n\n#### 从构建大型项目和写的愉快程度来说\n\nreact + typescript > anything\n\ntypescript + react 真的是太香了有没有，虽然在追踪变化和判断是否需要`rerender`这点上比不过 vue，不过规范化和代码提示真的是很爽啊！！！\n\n### 思想上的变化\n\n其实在之前使用**百度出的 lavas**的时候就感觉到了，约定大于配置的好处，一个**通俗易懂**的约定其实是可以节省一大堆事的。\n\n所以在改造整个票牛前端项目的时候，也是在逐渐贯彻这种思想，从项目的重构到编写开发工具的时候，将整个约定扔在了文档里，然后照着约定写就是了，当然啦，如果要从约定里拿配置文件的话，倒是容易冲突，这点一开始没想好，这种东西以后想办法埋在`process.env`里就会比较好吧\n\n另一个地方就是，如果有地方你认为不爽，那就熟悉他并且改造他就是了，方便自己的同时也会同时方便别人\n\n## 反思\n\n### Seed\n\n当时做这个工具确实想的比较少，最开始的设想只不过是方便迁移老旧的 `ng`\n页面到新的`vue`页面，毕竟从后台管理工具的角度来说，基本后台管理工具的思想都是一致的，**表单 + 列表**查询，所以只做了`form`，`table`，`filter`三个渲染器级别的规划以及一套简单的`DSL`系统，没想到之后根据运营的意见和自己的玩乐心，做了越来越多的功能进去\n\n#### 不太好的地方\n\n- 没办法解偶，也没办法模块化使用，其实在某些场景，只需要表单，有些只需要 table\n- 代码示例没写好\n- 文档更新速度太慢了\n- DSL 的设计上还是有点问题\n\n#### 还行的点吧\n\n- 对比了那么多产品，`seed`还是本着这玩意就是个组件的心态做的，所以非常的轻量，倒是很多产品都本着我就是要教你用`json`布局整个页面的想法，插拔性太差了\n- Seed 的**excel**支持非常的棒！支持导入导出批量，还能自定义覆盖，excel 导出还对后台做了优化，防止一次性导出太大\n- 轻量化\n- `slot`狂魔属性，基本靠着`slot`啥都能自定义\n- 其他很多小功能，其实都是为运营定制的，应该还不错吧\n\n### 个人目标还是不是很清晰\n\n其实有时候挺迷茫的，目前的我之后该往哪个方向发展呢\n\n## 再起航\n\n不仅仅为了，工资，其实还是为了换个环境，重新思考之前所做的一切，`Seed`也打算重新写一版更好的，这次绝对不咕\n","source":"_posts/关于最近一年多工作的反思-复盘.md","raw":"---\ntitle: 关于最近一年多工作的反思-复盘\ntags:\n  - 可以公开的情报\n  - 前端\ndate: 2019-12-28 21:17:35\ncategories: 所思所想\n---\n\n> 年底将至，宜三省吾身，是时候做个年终总结了\n\n2019 年，经历了从**票牛**到**饿了么**的工作历程，想想在票牛工作的一年时间，回过头来，感觉已经做了很多，又感觉没有做什么，所以也是时候做个复盘，来看看自己做过哪些，又有哪些不足了\n\n## 我经历过什么\n\n### 从一个业务到另一个业务\n\n- 票牛，应该是我进入的第一家比较正规的公司，有完善的研发和公司机制，整个研发团队分成了三条业务线，刚入公司进入的就是内容线，主题负责的还是**小程序**(当时还是原生的)的改进以及内容线各类**h5**页面的编写，当然也负责了一部分后台管理系统页面的编写\n\n- 到了 19 年初，公司整体重组，从此又开始重头干起了商家端的所有工具，这次就不仅仅只是网页和小程序了，这一次还加上了公司原先**react native**的部分，不过趁着这个机会，倒是完全熟悉了整个 react 的生态部分\n\n- 7 月份的时候，又因为战略问题，去构建了新的项目，这一次稍微简单一点，只有 pc 的部分，负责的方面也有了一些变化，变为了整个前端的架构\n\n- 到了饿了么，就又是另一个业务了\n\n### 技术栈的变化\n\n之前因为要做一个静态站点，就考虑使用了一下`jquery`(兼容一下 api)，结果发现已经基本不会写了 orz\n\n之前一直都是以`vue`为主，进了票牛之后，因为历史项目的原因，也是一边用`ng1`一边用`vue`进行开发的，后来开发 app 的时候又开始`react`的旅程\n\n当然影响最大的一点就是`react`16.9 推出之后，新的**生命周期**和**hooks**语法真的是太香了，简直改变了整个开发体验，现在感觉下来\n\n#### 从上手和快速开发来说\n\nvue > react > ng1\n\n#### 从构建大型项目和写的愉快程度来说\n\nreact + typescript > anything\n\ntypescript + react 真的是太香了有没有，虽然在追踪变化和判断是否需要`rerender`这点上比不过 vue，不过规范化和代码提示真的是很爽啊！！！\n\n### 思想上的变化\n\n其实在之前使用**百度出的 lavas**的时候就感觉到了，约定大于配置的好处，一个**通俗易懂**的约定其实是可以节省一大堆事的。\n\n所以在改造整个票牛前端项目的时候，也是在逐渐贯彻这种思想，从项目的重构到编写开发工具的时候，将整个约定扔在了文档里，然后照着约定写就是了，当然啦，如果要从约定里拿配置文件的话，倒是容易冲突，这点一开始没想好，这种东西以后想办法埋在`process.env`里就会比较好吧\n\n另一个地方就是，如果有地方你认为不爽，那就熟悉他并且改造他就是了，方便自己的同时也会同时方便别人\n\n## 反思\n\n### Seed\n\n当时做这个工具确实想的比较少，最开始的设想只不过是方便迁移老旧的 `ng`\n页面到新的`vue`页面，毕竟从后台管理工具的角度来说，基本后台管理工具的思想都是一致的，**表单 + 列表**查询，所以只做了`form`，`table`，`filter`三个渲染器级别的规划以及一套简单的`DSL`系统，没想到之后根据运营的意见和自己的玩乐心，做了越来越多的功能进去\n\n#### 不太好的地方\n\n- 没办法解偶，也没办法模块化使用，其实在某些场景，只需要表单，有些只需要 table\n- 代码示例没写好\n- 文档更新速度太慢了\n- DSL 的设计上还是有点问题\n\n#### 还行的点吧\n\n- 对比了那么多产品，`seed`还是本着这玩意就是个组件的心态做的，所以非常的轻量，倒是很多产品都本着我就是要教你用`json`布局整个页面的想法，插拔性太差了\n- Seed 的**excel**支持非常的棒！支持导入导出批量，还能自定义覆盖，excel 导出还对后台做了优化，防止一次性导出太大\n- 轻量化\n- `slot`狂魔属性，基本靠着`slot`啥都能自定义\n- 其他很多小功能，其实都是为运营定制的，应该还不错吧\n\n### 个人目标还是不是很清晰\n\n其实有时候挺迷茫的，目前的我之后该往哪个方向发展呢\n\n## 再起航\n\n不仅仅为了，工资，其实还是为了换个环境，重新思考之前所做的一切，`Seed`也打算重新写一版更好的，这次绝对不咕\n","slug":"关于最近一年多工作的反思-复盘","published":1,"updated":"2019-12-28T14:59:24.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhn0017w6ilvwqy2cwt","content":"<blockquote>\n<p>年底将至，宜三省吾身，是时候做个年终总结了</p>\n</blockquote>\n<p>2019 年，经历了从<strong>票牛</strong>到<strong>饿了么</strong>的工作历程，想想在票牛工作的一年时间，回过头来，感觉已经做了很多，又感觉没有做什么，所以也是时候做个复盘，来看看自己做过哪些，又有哪些不足了</p>\n<h2 id=\"我经历过什么\"><a href=\"#我经历过什么\" class=\"headerlink\" title=\"我经历过什么\"></a>我经历过什么</h2><h3 id=\"从一个业务到另一个业务\"><a href=\"#从一个业务到另一个业务\" class=\"headerlink\" title=\"从一个业务到另一个业务\"></a>从一个业务到另一个业务</h3><ul>\n<li><p>票牛，应该是我进入的第一家比较正规的公司，有完善的研发和公司机制，整个研发团队分成了三条业务线，刚入公司进入的就是内容线，主题负责的还是<strong>小程序</strong>(当时还是原生的)的改进以及内容线各类<strong>h5</strong>页面的编写，当然也负责了一部分后台管理系统页面的编写</p>\n</li>\n<li><p>到了 19 年初，公司整体重组，从此又开始重头干起了商家端的所有工具，这次就不仅仅只是网页和小程序了，这一次还加上了公司原先<strong>react native</strong>的部分，不过趁着这个机会，倒是完全熟悉了整个 react 的生态部分</p>\n</li>\n<li><p>7 月份的时候，又因为战略问题，去构建了新的项目，这一次稍微简单一点，只有 pc 的部分，负责的方面也有了一些变化，变为了整个前端的架构</p>\n</li>\n<li><p>到了饿了么，就又是另一个业务了</p>\n</li>\n</ul>\n<h3 id=\"技术栈的变化\"><a href=\"#技术栈的变化\" class=\"headerlink\" title=\"技术栈的变化\"></a>技术栈的变化</h3><p>之前因为要做一个静态站点，就考虑使用了一下<code>jquery</code>(兼容一下 api)，结果发现已经基本不会写了 orz</p>\n<p>之前一直都是以<code>vue</code>为主，进了票牛之后，因为历史项目的原因，也是一边用<code>ng1</code>一边用<code>vue</code>进行开发的，后来开发 app 的时候又开始<code>react</code>的旅程</p>\n<p>当然影响最大的一点就是<code>react</code>16.9 推出之后，新的<strong>生命周期</strong>和<strong>hooks</strong>语法真的是太香了，简直改变了整个开发体验，现在感觉下来</p>\n<h4 id=\"从上手和快速开发来说\"><a href=\"#从上手和快速开发来说\" class=\"headerlink\" title=\"从上手和快速开发来说\"></a>从上手和快速开发来说</h4><p>vue &gt; react &gt; ng1</p>\n<h4 id=\"从构建大型项目和写的愉快程度来说\"><a href=\"#从构建大型项目和写的愉快程度来说\" class=\"headerlink\" title=\"从构建大型项目和写的愉快程度来说\"></a>从构建大型项目和写的愉快程度来说</h4><p>react + typescript &gt; anything</p>\n<p>typescript + react 真的是太香了有没有，虽然在追踪变化和判断是否需要<code>rerender</code>这点上比不过 vue，不过规范化和代码提示真的是很爽啊！！！</p>\n<h3 id=\"思想上的变化\"><a href=\"#思想上的变化\" class=\"headerlink\" title=\"思想上的变化\"></a>思想上的变化</h3><p>其实在之前使用<strong>百度出的 lavas</strong>的时候就感觉到了，约定大于配置的好处，一个<strong>通俗易懂</strong>的约定其实是可以节省一大堆事的。</p>\n<p>所以在改造整个票牛前端项目的时候，也是在逐渐贯彻这种思想，从项目的重构到编写开发工具的时候，将整个约定扔在了文档里，然后照着约定写就是了，当然啦，如果要从约定里拿配置文件的话，倒是容易冲突，这点一开始没想好，这种东西以后想办法埋在<code>process.env</code>里就会比较好吧</p>\n<p>另一个地方就是，如果有地方你认为不爽，那就熟悉他并且改造他就是了，方便自己的同时也会同时方便别人</p>\n<h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><h3 id=\"Seed\"><a href=\"#Seed\" class=\"headerlink\" title=\"Seed\"></a>Seed</h3><p>当时做这个工具确实想的比较少，最开始的设想只不过是方便迁移老旧的 <code>ng</code><br>页面到新的<code>vue</code>页面，毕竟从后台管理工具的角度来说，基本后台管理工具的思想都是一致的，<strong>表单 + 列表</strong>查询，所以只做了<code>form</code>，<code>table</code>，<code>filter</code>三个渲染器级别的规划以及一套简单的<code>DSL</code>系统，没想到之后根据运营的意见和自己的玩乐心，做了越来越多的功能进去</p>\n<h4 id=\"不太好的地方\"><a href=\"#不太好的地方\" class=\"headerlink\" title=\"不太好的地方\"></a>不太好的地方</h4><ul>\n<li>没办法解偶，也没办法模块化使用，其实在某些场景，只需要表单，有些只需要 table</li>\n<li>代码示例没写好</li>\n<li>文档更新速度太慢了</li>\n<li>DSL 的设计上还是有点问题</li>\n</ul>\n<h4 id=\"还行的点吧\"><a href=\"#还行的点吧\" class=\"headerlink\" title=\"还行的点吧\"></a>还行的点吧</h4><ul>\n<li>对比了那么多产品，<code>seed</code>还是本着这玩意就是个组件的心态做的，所以非常的轻量，倒是很多产品都本着我就是要教你用<code>json</code>布局整个页面的想法，插拔性太差了</li>\n<li>Seed 的<strong>excel</strong>支持非常的棒！支持导入导出批量，还能自定义覆盖，excel 导出还对后台做了优化，防止一次性导出太大</li>\n<li>轻量化</li>\n<li><code>slot</code>狂魔属性，基本靠着<code>slot</code>啥都能自定义</li>\n<li>其他很多小功能，其实都是为运营定制的，应该还不错吧</li>\n</ul>\n<h3 id=\"个人目标还是不是很清晰\"><a href=\"#个人目标还是不是很清晰\" class=\"headerlink\" title=\"个人目标还是不是很清晰\"></a>个人目标还是不是很清晰</h3><p>其实有时候挺迷茫的，目前的我之后该往哪个方向发展呢</p>\n<h2 id=\"再起航\"><a href=\"#再起航\" class=\"headerlink\" title=\"再起航\"></a>再起航</h2><p>不仅仅为了，工资，其实还是为了换个环境，重新思考之前所做的一切，<code>Seed</code>也打算重新写一版更好的，这次绝对不咕</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>年底将至，宜三省吾身，是时候做个年终总结了</p>\n</blockquote>\n<p>2019 年，经历了从<strong>票牛</strong>到<strong>饿了么</strong>的工作历程，想想在票牛工作的一年时间，回过头来，感觉已经做了很多，又感觉没有做什么，所以也是时候做个复盘，来看看自己做过哪些，又有哪些不足了</p>\n<h2 id=\"我经历过什么\"><a href=\"#我经历过什么\" class=\"headerlink\" title=\"我经历过什么\"></a>我经历过什么</h2><h3 id=\"从一个业务到另一个业务\"><a href=\"#从一个业务到另一个业务\" class=\"headerlink\" title=\"从一个业务到另一个业务\"></a>从一个业务到另一个业务</h3><ul>\n<li><p>票牛，应该是我进入的第一家比较正规的公司，有完善的研发和公司机制，整个研发团队分成了三条业务线，刚入公司进入的就是内容线，主题负责的还是<strong>小程序</strong>(当时还是原生的)的改进以及内容线各类<strong>h5</strong>页面的编写，当然也负责了一部分后台管理系统页面的编写</p>\n</li>\n<li><p>到了 19 年初，公司整体重组，从此又开始重头干起了商家端的所有工具，这次就不仅仅只是网页和小程序了，这一次还加上了公司原先<strong>react native</strong>的部分，不过趁着这个机会，倒是完全熟悉了整个 react 的生态部分</p>\n</li>\n<li><p>7 月份的时候，又因为战略问题，去构建了新的项目，这一次稍微简单一点，只有 pc 的部分，负责的方面也有了一些变化，变为了整个前端的架构</p>\n</li>\n<li><p>到了饿了么，就又是另一个业务了</p>\n</li>\n</ul>\n<h3 id=\"技术栈的变化\"><a href=\"#技术栈的变化\" class=\"headerlink\" title=\"技术栈的变化\"></a>技术栈的变化</h3><p>之前因为要做一个静态站点，就考虑使用了一下<code>jquery</code>(兼容一下 api)，结果发现已经基本不会写了 orz</p>\n<p>之前一直都是以<code>vue</code>为主，进了票牛之后，因为历史项目的原因，也是一边用<code>ng1</code>一边用<code>vue</code>进行开发的，后来开发 app 的时候又开始<code>react</code>的旅程</p>\n<p>当然影响最大的一点就是<code>react</code>16.9 推出之后，新的<strong>生命周期</strong>和<strong>hooks</strong>语法真的是太香了，简直改变了整个开发体验，现在感觉下来</p>\n<h4 id=\"从上手和快速开发来说\"><a href=\"#从上手和快速开发来说\" class=\"headerlink\" title=\"从上手和快速开发来说\"></a>从上手和快速开发来说</h4><p>vue &gt; react &gt; ng1</p>\n<h4 id=\"从构建大型项目和写的愉快程度来说\"><a href=\"#从构建大型项目和写的愉快程度来说\" class=\"headerlink\" title=\"从构建大型项目和写的愉快程度来说\"></a>从构建大型项目和写的愉快程度来说</h4><p>react + typescript &gt; anything</p>\n<p>typescript + react 真的是太香了有没有，虽然在追踪变化和判断是否需要<code>rerender</code>这点上比不过 vue，不过规范化和代码提示真的是很爽啊！！！</p>\n<h3 id=\"思想上的变化\"><a href=\"#思想上的变化\" class=\"headerlink\" title=\"思想上的变化\"></a>思想上的变化</h3><p>其实在之前使用<strong>百度出的 lavas</strong>的时候就感觉到了，约定大于配置的好处，一个<strong>通俗易懂</strong>的约定其实是可以节省一大堆事的。</p>\n<p>所以在改造整个票牛前端项目的时候，也是在逐渐贯彻这种思想，从项目的重构到编写开发工具的时候，将整个约定扔在了文档里，然后照着约定写就是了，当然啦，如果要从约定里拿配置文件的话，倒是容易冲突，这点一开始没想好，这种东西以后想办法埋在<code>process.env</code>里就会比较好吧</p>\n<p>另一个地方就是，如果有地方你认为不爽，那就熟悉他并且改造他就是了，方便自己的同时也会同时方便别人</p>\n<h2 id=\"反思\"><a href=\"#反思\" class=\"headerlink\" title=\"反思\"></a>反思</h2><h3 id=\"Seed\"><a href=\"#Seed\" class=\"headerlink\" title=\"Seed\"></a>Seed</h3><p>当时做这个工具确实想的比较少，最开始的设想只不过是方便迁移老旧的 <code>ng</code><br>页面到新的<code>vue</code>页面，毕竟从后台管理工具的角度来说，基本后台管理工具的思想都是一致的，<strong>表单 + 列表</strong>查询，所以只做了<code>form</code>，<code>table</code>，<code>filter</code>三个渲染器级别的规划以及一套简单的<code>DSL</code>系统，没想到之后根据运营的意见和自己的玩乐心，做了越来越多的功能进去</p>\n<h4 id=\"不太好的地方\"><a href=\"#不太好的地方\" class=\"headerlink\" title=\"不太好的地方\"></a>不太好的地方</h4><ul>\n<li>没办法解偶，也没办法模块化使用，其实在某些场景，只需要表单，有些只需要 table</li>\n<li>代码示例没写好</li>\n<li>文档更新速度太慢了</li>\n<li>DSL 的设计上还是有点问题</li>\n</ul>\n<h4 id=\"还行的点吧\"><a href=\"#还行的点吧\" class=\"headerlink\" title=\"还行的点吧\"></a>还行的点吧</h4><ul>\n<li>对比了那么多产品，<code>seed</code>还是本着这玩意就是个组件的心态做的，所以非常的轻量，倒是很多产品都本着我就是要教你用<code>json</code>布局整个页面的想法，插拔性太差了</li>\n<li>Seed 的<strong>excel</strong>支持非常的棒！支持导入导出批量，还能自定义覆盖，excel 导出还对后台做了优化，防止一次性导出太大</li>\n<li>轻量化</li>\n<li><code>slot</code>狂魔属性，基本靠着<code>slot</code>啥都能自定义</li>\n<li>其他很多小功能，其实都是为运营定制的，应该还不错吧</li>\n</ul>\n<h3 id=\"个人目标还是不是很清晰\"><a href=\"#个人目标还是不是很清晰\" class=\"headerlink\" title=\"个人目标还是不是很清晰\"></a>个人目标还是不是很清晰</h3><p>其实有时候挺迷茫的，目前的我之后该往哪个方向发展呢</p>\n<h2 id=\"再起航\"><a href=\"#再起航\" class=\"headerlink\" title=\"再起航\"></a>再起航</h2><p>不仅仅为了，工资，其实还是为了换个环境，重新思考之前所做的一切，<code>Seed</code>也打算重新写一版更好的，这次绝对不咕</p>\n"},{"title":"前端除了编码还应该知道的几件事","date":"2020-01-04T10:17:35.000Z","_content":"\n# 前端以外\n> 最近在对过去的工作进行反思，又在掘金逛了一圈，反倒是发现大部分人对前端的理解和追求反倒是局限于各个技术方面了，私以为，作为一个前端，不仅仅需要技术水平，一些其他的能力也是必要的\n\n\n## 偏技术的\n讲道理，作为一个前端，工作其实不仅仅在于根据`prd`，根据需求撸页面出来，其实还涵盖了很多方面\n\n### 页面切图\n当然如果不需要切图可以无视\n\n一般来说，前端都是会根据`UED`（视觉与交互）部门的设计师出的设计稿进行还原，在这基础之上，了解每个区块的间距，颜色等方面就很重要了，一般有几个方法。\n\n* 自己打开`psd`拿标尺算。 \n* [PSD2HTML](https://github.com/wanxianjia/PSD2HTML)用插件\n* psd用蓝湖插件上传[蓝湖](https://lanhuapp.com/?ps)\n* `sketch`的设计直接导出网页切图版\n\n### 手机端自适应\n主流方案有两种，`rem`和`vw`方案，这两种都有对应的`postcss`插件，具体可以看掘金上相关的文章\n\n### 部署\n大部分的前端页面都是纯静态页面，可以通过`express`等反向代理工具提供，当然啦，`oss`等静态存储库也可以提供网页服务，除此之外，作为前端，还可能碰到类似于\n\n* 部署`nodejs`服务（`ssr`服务等）\n* 反向代理配置\n* 跨域问题\n* OPTION请求\n* 内存泄漏\n\n等诸如此类的问题，当然啦，成熟的公司一般也会提供自己完整的`devops`流，让整个部署发布流程简化为**点点点**，作为开发之要会`git`命令就可以了\n\n部署常用的工具为`pm2`, `nginx`，`阿里的nodejs性能平台`\n\n### 监控和打点\n部署完就需要监控和打点了\n\n* 监控市面上流行的基本就是`sentry`,配置app后引入`sentry`对应的js就可以了，之后`sentry`会自动捕获浏览器错误，然后发送到服务端\n\n* 如果配合上文所提的`nodejs性能平台`，就可以监控nodejs的健康情况，内存占用问题\n\n* 当然cat也可以\n\n* 打点的话，市面第三方用的比较多的应该还是神策吧，在对应的地方埋点，然后在事件里触发`sdk`提供的方法，来推送到服务器\n\n#### 打点相关的东西\n想到了就补充一下吧  \n产品和运营基本都会看PV和UV，PV是单个页面的浏览量，UV是单个设备的浏览量，通过这两个指标可以看到单个页面的访问情况，和用户数量，同时根据ua等信息，可以分析出访问用户的一些基本信息，比如手机型号，系统版本，浏览器版本等等，这个直接影响了前端可以使用的api范围，这个就可以和caniuse上结合着一起用啦，毕竟postcss和babel也不是万能的嘛\n\n嗯，当然打点不仅仅是pv和uv，经常要埋事件进去，这个是用来分析用户行为的，他对页面哪些部分感兴趣，停留时间，操作流程，这些都和后期的迭代优化息息相关\n\n\n## 非技术层面\n### 沟通真的很重要\n#### 对产品和运营\n现在大部分公司都采用的是 `运营 => 产品 => 开发`的模式，而我也经历过，根据产品的排期，做完紧急需求之后，业务方几个月也不见得使用的情况，也遇到过直接和运营交流，他们提了很多很棒的思路，同时也提了很多技术看起来。。。emmm扯淡的想法\n\n为啥说前端的沟通能力很重要呢，因为前端接触的人最多，真的要开始交流（可能是撕逼）起来，大概要和\n\n* 产品\n* 后端\n* 测试\n* UED\n* 设计\n* 业务\n* 其他前端\n* 如果是hy页面的话，还会和客户端\n* 用户\n\n各个方面都要进行沟通，每个人看问题的角度不一样，出发点不一样，立场也不一样，更多的时候是需要在之间取得一个平衡\n\n##### 对于产品和业务\n他们并不了解技术，但是他们能够提供想法，对于他们的想法，合理的需要实现，不合理的，如果有其他替代方案可以和他们提，如果实在不行的，需要说明理由\n\n##### 对于UED和设计\n交互和设计也是一样，相比较产品这块，他们可能不太会考虑，\n\n* 这种效果好不好实现\n* 这个效果在一些机型上会不会有问题\n* 在不同屏幕分辨率和长宽比的情况下，可能会造成的问题\n* 切图的时候，分辨率过高造成的页面加载速度\n\n像这一些，更好的还是通过给他们不同比例的设备，用实际体验说服他们\n\n##### 测试\n照着他们说的做就是了\n\n##### 用户\n祈祷一下他们用的浏览器/客户端都是能用的吧\n\n\n### 其他的\n好好保护颈椎和腰椎吧，真的很重要，买个升降台，站着办公也是个很好的选择","source":"_posts/前端还应该关心的几件事.md","raw":"---\ntitle: 前端除了编码还应该知道的几件事\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\n  - 反思\ndate: 2020-01-04 18:17:35\ncategories: 前端\n---\n\n# 前端以外\n> 最近在对过去的工作进行反思，又在掘金逛了一圈，反倒是发现大部分人对前端的理解和追求反倒是局限于各个技术方面了，私以为，作为一个前端，不仅仅需要技术水平，一些其他的能力也是必要的\n\n\n## 偏技术的\n讲道理，作为一个前端，工作其实不仅仅在于根据`prd`，根据需求撸页面出来，其实还涵盖了很多方面\n\n### 页面切图\n当然如果不需要切图可以无视\n\n一般来说，前端都是会根据`UED`（视觉与交互）部门的设计师出的设计稿进行还原，在这基础之上，了解每个区块的间距，颜色等方面就很重要了，一般有几个方法。\n\n* 自己打开`psd`拿标尺算。 \n* [PSD2HTML](https://github.com/wanxianjia/PSD2HTML)用插件\n* psd用蓝湖插件上传[蓝湖](https://lanhuapp.com/?ps)\n* `sketch`的设计直接导出网页切图版\n\n### 手机端自适应\n主流方案有两种，`rem`和`vw`方案，这两种都有对应的`postcss`插件，具体可以看掘金上相关的文章\n\n### 部署\n大部分的前端页面都是纯静态页面，可以通过`express`等反向代理工具提供，当然啦，`oss`等静态存储库也可以提供网页服务，除此之外，作为前端，还可能碰到类似于\n\n* 部署`nodejs`服务（`ssr`服务等）\n* 反向代理配置\n* 跨域问题\n* OPTION请求\n* 内存泄漏\n\n等诸如此类的问题，当然啦，成熟的公司一般也会提供自己完整的`devops`流，让整个部署发布流程简化为**点点点**，作为开发之要会`git`命令就可以了\n\n部署常用的工具为`pm2`, `nginx`，`阿里的nodejs性能平台`\n\n### 监控和打点\n部署完就需要监控和打点了\n\n* 监控市面上流行的基本就是`sentry`,配置app后引入`sentry`对应的js就可以了，之后`sentry`会自动捕获浏览器错误，然后发送到服务端\n\n* 如果配合上文所提的`nodejs性能平台`，就可以监控nodejs的健康情况，内存占用问题\n\n* 当然cat也可以\n\n* 打点的话，市面第三方用的比较多的应该还是神策吧，在对应的地方埋点，然后在事件里触发`sdk`提供的方法，来推送到服务器\n\n#### 打点相关的东西\n想到了就补充一下吧  \n产品和运营基本都会看PV和UV，PV是单个页面的浏览量，UV是单个设备的浏览量，通过这两个指标可以看到单个页面的访问情况，和用户数量，同时根据ua等信息，可以分析出访问用户的一些基本信息，比如手机型号，系统版本，浏览器版本等等，这个直接影响了前端可以使用的api范围，这个就可以和caniuse上结合着一起用啦，毕竟postcss和babel也不是万能的嘛\n\n嗯，当然打点不仅仅是pv和uv，经常要埋事件进去，这个是用来分析用户行为的，他对页面哪些部分感兴趣，停留时间，操作流程，这些都和后期的迭代优化息息相关\n\n\n## 非技术层面\n### 沟通真的很重要\n#### 对产品和运营\n现在大部分公司都采用的是 `运营 => 产品 => 开发`的模式，而我也经历过，根据产品的排期，做完紧急需求之后，业务方几个月也不见得使用的情况，也遇到过直接和运营交流，他们提了很多很棒的思路，同时也提了很多技术看起来。。。emmm扯淡的想法\n\n为啥说前端的沟通能力很重要呢，因为前端接触的人最多，真的要开始交流（可能是撕逼）起来，大概要和\n\n* 产品\n* 后端\n* 测试\n* UED\n* 设计\n* 业务\n* 其他前端\n* 如果是hy页面的话，还会和客户端\n* 用户\n\n各个方面都要进行沟通，每个人看问题的角度不一样，出发点不一样，立场也不一样，更多的时候是需要在之间取得一个平衡\n\n##### 对于产品和业务\n他们并不了解技术，但是他们能够提供想法，对于他们的想法，合理的需要实现，不合理的，如果有其他替代方案可以和他们提，如果实在不行的，需要说明理由\n\n##### 对于UED和设计\n交互和设计也是一样，相比较产品这块，他们可能不太会考虑，\n\n* 这种效果好不好实现\n* 这个效果在一些机型上会不会有问题\n* 在不同屏幕分辨率和长宽比的情况下，可能会造成的问题\n* 切图的时候，分辨率过高造成的页面加载速度\n\n像这一些，更好的还是通过给他们不同比例的设备，用实际体验说服他们\n\n##### 测试\n照着他们说的做就是了\n\n##### 用户\n祈祷一下他们用的浏览器/客户端都是能用的吧\n\n\n### 其他的\n好好保护颈椎和腰椎吧，真的很重要，买个升降台，站着办公也是个很好的选择","slug":"前端还应该关心的几件事","published":1,"updated":"2020-01-03T07:49:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhp0019w6il66u7krhq","content":"<h1 id=\"前端以外\"><a href=\"#前端以外\" class=\"headerlink\" title=\"前端以外\"></a>前端以外</h1><blockquote>\n<p>最近在对过去的工作进行反思，又在掘金逛了一圈，反倒是发现大部分人对前端的理解和追求反倒是局限于各个技术方面了，私以为，作为一个前端，不仅仅需要技术水平，一些其他的能力也是必要的</p>\n</blockquote>\n<h2 id=\"偏技术的\"><a href=\"#偏技术的\" class=\"headerlink\" title=\"偏技术的\"></a>偏技术的</h2><p>讲道理，作为一个前端，工作其实不仅仅在于根据<code>prd</code>，根据需求撸页面出来，其实还涵盖了很多方面</p>\n<h3 id=\"页面切图\"><a href=\"#页面切图\" class=\"headerlink\" title=\"页面切图\"></a>页面切图</h3><p>当然如果不需要切图可以无视</p>\n<p>一般来说，前端都是会根据<code>UED</code>（视觉与交互）部门的设计师出的设计稿进行还原，在这基础之上，了解每个区块的间距，颜色等方面就很重要了，一般有几个方法。</p>\n<ul>\n<li>自己打开<code>psd</code>拿标尺算。 </li>\n<li><a href=\"https://github.com/wanxianjia/PSD2HTML\" target=\"_blank\" rel=\"noopener\">PSD2HTML</a>用插件</li>\n<li>psd用蓝湖插件上传<a href=\"https://lanhuapp.com/?ps\" target=\"_blank\" rel=\"noopener\">蓝湖</a></li>\n<li><code>sketch</code>的设计直接导出网页切图版</li>\n</ul>\n<h3 id=\"手机端自适应\"><a href=\"#手机端自适应\" class=\"headerlink\" title=\"手机端自适应\"></a>手机端自适应</h3><p>主流方案有两种，<code>rem</code>和<code>vw</code>方案，这两种都有对应的<code>postcss</code>插件，具体可以看掘金上相关的文章</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>大部分的前端页面都是纯静态页面，可以通过<code>express</code>等反向代理工具提供，当然啦，<code>oss</code>等静态存储库也可以提供网页服务，除此之外，作为前端，还可能碰到类似于</p>\n<ul>\n<li>部署<code>nodejs</code>服务（<code>ssr</code>服务等）</li>\n<li>反向代理配置</li>\n<li>跨域问题</li>\n<li>OPTION请求</li>\n<li>内存泄漏</li>\n</ul>\n<p>等诸如此类的问题，当然啦，成熟的公司一般也会提供自己完整的<code>devops</code>流，让整个部署发布流程简化为<strong>点点点</strong>，作为开发之要会<code>git</code>命令就可以了</p>\n<p>部署常用的工具为<code>pm2</code>, <code>nginx</code>，<code>阿里的nodejs性能平台</code></p>\n<h3 id=\"监控和打点\"><a href=\"#监控和打点\" class=\"headerlink\" title=\"监控和打点\"></a>监控和打点</h3><p>部署完就需要监控和打点了</p>\n<ul>\n<li><p>监控市面上流行的基本就是<code>sentry</code>,配置app后引入<code>sentry</code>对应的js就可以了，之后<code>sentry</code>会自动捕获浏览器错误，然后发送到服务端</p>\n</li>\n<li><p>如果配合上文所提的<code>nodejs性能平台</code>，就可以监控nodejs的健康情况，内存占用问题</p>\n</li>\n<li><p>当然cat也可以</p>\n</li>\n<li><p>打点的话，市面第三方用的比较多的应该还是神策吧，在对应的地方埋点，然后在事件里触发<code>sdk</code>提供的方法，来推送到服务器</p>\n</li>\n</ul>\n<h4 id=\"打点相关的东西\"><a href=\"#打点相关的东西\" class=\"headerlink\" title=\"打点相关的东西\"></a>打点相关的东西</h4><p>想到了就补充一下吧<br>产品和运营基本都会看PV和UV，PV是单个页面的浏览量，UV是单个设备的浏览量，通过这两个指标可以看到单个页面的访问情况，和用户数量，同时根据ua等信息，可以分析出访问用户的一些基本信息，比如手机型号，系统版本，浏览器版本等等，这个直接影响了前端可以使用的api范围，这个就可以和caniuse上结合着一起用啦，毕竟postcss和babel也不是万能的嘛</p>\n<p>嗯，当然打点不仅仅是pv和uv，经常要埋事件进去，这个是用来分析用户行为的，他对页面哪些部分感兴趣，停留时间，操作流程，这些都和后期的迭代优化息息相关</p>\n<h2 id=\"非技术层面\"><a href=\"#非技术层面\" class=\"headerlink\" title=\"非技术层面\"></a>非技术层面</h2><h3 id=\"沟通真的很重要\"><a href=\"#沟通真的很重要\" class=\"headerlink\" title=\"沟通真的很重要\"></a>沟通真的很重要</h3><h4 id=\"对产品和运营\"><a href=\"#对产品和运营\" class=\"headerlink\" title=\"对产品和运营\"></a>对产品和运营</h4><p>现在大部分公司都采用的是 <code>运营 =&gt; 产品 =&gt; 开发</code>的模式，而我也经历过，根据产品的排期，做完紧急需求之后，业务方几个月也不见得使用的情况，也遇到过直接和运营交流，他们提了很多很棒的思路，同时也提了很多技术看起来。。。emmm扯淡的想法</p>\n<p>为啥说前端的沟通能力很重要呢，因为前端接触的人最多，真的要开始交流（可能是撕逼）起来，大概要和</p>\n<ul>\n<li>产品</li>\n<li>后端</li>\n<li>测试</li>\n<li>UED</li>\n<li>设计</li>\n<li>业务</li>\n<li>其他前端</li>\n<li>如果是hy页面的话，还会和客户端</li>\n<li>用户</li>\n</ul>\n<p>各个方面都要进行沟通，每个人看问题的角度不一样，出发点不一样，立场也不一样，更多的时候是需要在之间取得一个平衡</p>\n<h5 id=\"对于产品和业务\"><a href=\"#对于产品和业务\" class=\"headerlink\" title=\"对于产品和业务\"></a>对于产品和业务</h5><p>他们并不了解技术，但是他们能够提供想法，对于他们的想法，合理的需要实现，不合理的，如果有其他替代方案可以和他们提，如果实在不行的，需要说明理由</p>\n<h5 id=\"对于UED和设计\"><a href=\"#对于UED和设计\" class=\"headerlink\" title=\"对于UED和设计\"></a>对于UED和设计</h5><p>交互和设计也是一样，相比较产品这块，他们可能不太会考虑，</p>\n<ul>\n<li>这种效果好不好实现</li>\n<li>这个效果在一些机型上会不会有问题</li>\n<li>在不同屏幕分辨率和长宽比的情况下，可能会造成的问题</li>\n<li>切图的时候，分辨率过高造成的页面加载速度</li>\n</ul>\n<p>像这一些，更好的还是通过给他们不同比例的设备，用实际体验说服他们</p>\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>照着他们说的做就是了</p>\n<h5 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h5><p>祈祷一下他们用的浏览器/客户端都是能用的吧</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>好好保护颈椎和腰椎吧，真的很重要，买个升降台，站着办公也是个很好的选择</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前端以外\"><a href=\"#前端以外\" class=\"headerlink\" title=\"前端以外\"></a>前端以外</h1><blockquote>\n<p>最近在对过去的工作进行反思，又在掘金逛了一圈，反倒是发现大部分人对前端的理解和追求反倒是局限于各个技术方面了，私以为，作为一个前端，不仅仅需要技术水平，一些其他的能力也是必要的</p>\n</blockquote>\n<h2 id=\"偏技术的\"><a href=\"#偏技术的\" class=\"headerlink\" title=\"偏技术的\"></a>偏技术的</h2><p>讲道理，作为一个前端，工作其实不仅仅在于根据<code>prd</code>，根据需求撸页面出来，其实还涵盖了很多方面</p>\n<h3 id=\"页面切图\"><a href=\"#页面切图\" class=\"headerlink\" title=\"页面切图\"></a>页面切图</h3><p>当然如果不需要切图可以无视</p>\n<p>一般来说，前端都是会根据<code>UED</code>（视觉与交互）部门的设计师出的设计稿进行还原，在这基础之上，了解每个区块的间距，颜色等方面就很重要了，一般有几个方法。</p>\n<ul>\n<li>自己打开<code>psd</code>拿标尺算。 </li>\n<li><a href=\"https://github.com/wanxianjia/PSD2HTML\" target=\"_blank\" rel=\"noopener\">PSD2HTML</a>用插件</li>\n<li>psd用蓝湖插件上传<a href=\"https://lanhuapp.com/?ps\" target=\"_blank\" rel=\"noopener\">蓝湖</a></li>\n<li><code>sketch</code>的设计直接导出网页切图版</li>\n</ul>\n<h3 id=\"手机端自适应\"><a href=\"#手机端自适应\" class=\"headerlink\" title=\"手机端自适应\"></a>手机端自适应</h3><p>主流方案有两种，<code>rem</code>和<code>vw</code>方案，这两种都有对应的<code>postcss</code>插件，具体可以看掘金上相关的文章</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>大部分的前端页面都是纯静态页面，可以通过<code>express</code>等反向代理工具提供，当然啦，<code>oss</code>等静态存储库也可以提供网页服务，除此之外，作为前端，还可能碰到类似于</p>\n<ul>\n<li>部署<code>nodejs</code>服务（<code>ssr</code>服务等）</li>\n<li>反向代理配置</li>\n<li>跨域问题</li>\n<li>OPTION请求</li>\n<li>内存泄漏</li>\n</ul>\n<p>等诸如此类的问题，当然啦，成熟的公司一般也会提供自己完整的<code>devops</code>流，让整个部署发布流程简化为<strong>点点点</strong>，作为开发之要会<code>git</code>命令就可以了</p>\n<p>部署常用的工具为<code>pm2</code>, <code>nginx</code>，<code>阿里的nodejs性能平台</code></p>\n<h3 id=\"监控和打点\"><a href=\"#监控和打点\" class=\"headerlink\" title=\"监控和打点\"></a>监控和打点</h3><p>部署完就需要监控和打点了</p>\n<ul>\n<li><p>监控市面上流行的基本就是<code>sentry</code>,配置app后引入<code>sentry</code>对应的js就可以了，之后<code>sentry</code>会自动捕获浏览器错误，然后发送到服务端</p>\n</li>\n<li><p>如果配合上文所提的<code>nodejs性能平台</code>，就可以监控nodejs的健康情况，内存占用问题</p>\n</li>\n<li><p>当然cat也可以</p>\n</li>\n<li><p>打点的话，市面第三方用的比较多的应该还是神策吧，在对应的地方埋点，然后在事件里触发<code>sdk</code>提供的方法，来推送到服务器</p>\n</li>\n</ul>\n<h4 id=\"打点相关的东西\"><a href=\"#打点相关的东西\" class=\"headerlink\" title=\"打点相关的东西\"></a>打点相关的东西</h4><p>想到了就补充一下吧<br>产品和运营基本都会看PV和UV，PV是单个页面的浏览量，UV是单个设备的浏览量，通过这两个指标可以看到单个页面的访问情况，和用户数量，同时根据ua等信息，可以分析出访问用户的一些基本信息，比如手机型号，系统版本，浏览器版本等等，这个直接影响了前端可以使用的api范围，这个就可以和caniuse上结合着一起用啦，毕竟postcss和babel也不是万能的嘛</p>\n<p>嗯，当然打点不仅仅是pv和uv，经常要埋事件进去，这个是用来分析用户行为的，他对页面哪些部分感兴趣，停留时间，操作流程，这些都和后期的迭代优化息息相关</p>\n<h2 id=\"非技术层面\"><a href=\"#非技术层面\" class=\"headerlink\" title=\"非技术层面\"></a>非技术层面</h2><h3 id=\"沟通真的很重要\"><a href=\"#沟通真的很重要\" class=\"headerlink\" title=\"沟通真的很重要\"></a>沟通真的很重要</h3><h4 id=\"对产品和运营\"><a href=\"#对产品和运营\" class=\"headerlink\" title=\"对产品和运营\"></a>对产品和运营</h4><p>现在大部分公司都采用的是 <code>运营 =&gt; 产品 =&gt; 开发</code>的模式，而我也经历过，根据产品的排期，做完紧急需求之后，业务方几个月也不见得使用的情况，也遇到过直接和运营交流，他们提了很多很棒的思路，同时也提了很多技术看起来。。。emmm扯淡的想法</p>\n<p>为啥说前端的沟通能力很重要呢，因为前端接触的人最多，真的要开始交流（可能是撕逼）起来，大概要和</p>\n<ul>\n<li>产品</li>\n<li>后端</li>\n<li>测试</li>\n<li>UED</li>\n<li>设计</li>\n<li>业务</li>\n<li>其他前端</li>\n<li>如果是hy页面的话，还会和客户端</li>\n<li>用户</li>\n</ul>\n<p>各个方面都要进行沟通，每个人看问题的角度不一样，出发点不一样，立场也不一样，更多的时候是需要在之间取得一个平衡</p>\n<h5 id=\"对于产品和业务\"><a href=\"#对于产品和业务\" class=\"headerlink\" title=\"对于产品和业务\"></a>对于产品和业务</h5><p>他们并不了解技术，但是他们能够提供想法，对于他们的想法，合理的需要实现，不合理的，如果有其他替代方案可以和他们提，如果实在不行的，需要说明理由</p>\n<h5 id=\"对于UED和设计\"><a href=\"#对于UED和设计\" class=\"headerlink\" title=\"对于UED和设计\"></a>对于UED和设计</h5><p>交互和设计也是一样，相比较产品这块，他们可能不太会考虑，</p>\n<ul>\n<li>这种效果好不好实现</li>\n<li>这个效果在一些机型上会不会有问题</li>\n<li>在不同屏幕分辨率和长宽比的情况下，可能会造成的问题</li>\n<li>切图的时候，分辨率过高造成的页面加载速度</li>\n</ul>\n<p>像这一些，更好的还是通过给他们不同比例的设备，用实际体验说服他们</p>\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>照着他们说的做就是了</p>\n<h5 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h5><p>祈祷一下他们用的浏览器/客户端都是能用的吧</p>\n<h3 id=\"其他的\"><a href=\"#其他的\" class=\"headerlink\" title=\"其他的\"></a>其他的</h3><p>好好保护颈椎和腰椎吧，真的很重要，买个升降台，站着办公也是个很好的选择</p>\n"},{"title":"如何删除除了Master之外的所有分支","date":"2019-06-05T03:41:57.000Z","_content":"\n# 如何删除除了 Master 之外的所有分支\n\n1. 切换到 master\n2. 删了其他的\n\n```bash\ngit stash && git checkout master && git branch | grep -v \"master\" | xargs git branch -D\n\n```\n","source":"_posts/如何删除除了Master之外的所有分支.md","raw":"---\ntitle: 如何删除除了Master之外的所有分支\ntags:\n  - 前端\n  - 上手指南\n  - MAC\n  - 经验\ndate: 2019-06-05 11:41:57\ncategories: 可以公开的情报\n---\n\n# 如何删除除了 Master 之外的所有分支\n\n1. 切换到 master\n2. 删了其他的\n\n```bash\ngit stash && git checkout master && git branch | grep -v \"master\" | xargs git branch -D\n\n```\n","slug":"如何删除除了Master之外的所有分支","published":1,"updated":"2019-06-05T08:04:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhv001ew6ilp6vvp270","content":"<h1 id=\"如何删除除了-Master-之外的所有分支\"><a href=\"#如何删除除了-Master-之外的所有分支\" class=\"headerlink\" title=\"如何删除除了 Master 之外的所有分支\"></a>如何删除除了 Master 之外的所有分支</h1><ol>\n<li>切换到 master</li>\n<li>删了其他的</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash &amp;&amp; git checkout master &amp;&amp; git branch | grep -v <span class=\"string\">\"master\"</span> | xargs git branch -D</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何删除除了-Master-之外的所有分支\"><a href=\"#如何删除除了-Master-之外的所有分支\" class=\"headerlink\" title=\"如何删除除了 Master 之外的所有分支\"></a>如何删除除了 Master 之外的所有分支</h1><ol>\n<li>切换到 master</li>\n<li>删了其他的</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash &amp;&amp; git checkout master &amp;&amp; git branch | grep -v <span class=\"string\">\"master\"</span> | xargs git branch -D</span><br></pre></td></tr></table></figure>\n"},{"title":"学js很简单，就是有点头冷（0，大概是绪论）","date":"2018-11-01T09:25:25.000Z","_content":"# 学js很简单，就是有点头冷\n> 对老angularjs项目进行改造以及迁移到vue，其中遇到了很多困难点以及很多js原理性的东西，在这里进行收集以及汇总\n\n## 一些工具网站的推荐\n> 在我刚入行的2016年，前端js的工程化也才刚刚兴起，虽然还是有很多网站还在完全使用jquery，css和js的引入方法仍然靠手工往html文件里插，现在完全都不一样了，node.js的出现，催生了express,gulp，webpack等等，整个前端开始完全工程化，源代码，生成，开发测试服务器，代码格式化，自动生成注释，甚至连编辑器都，当然啦，这样也催生了很多问题，比如webpack的另一面也是以配置繁琐而出名，以下顺便介绍几个小网站，可以自动生成新建一个项目的常用配置\n\n* **gitignore** 告知git系统中哪些文件不需要进入git，推荐[gitignore.io](https://www.gitignore.io/),只要输入目标语言以及编辑器即可 [一个vue的例子](https://www.gitignore.io/api/node,vuejs,webstorm,visualstudiocode)\n* **license** 授权文件，有时候这个是维权的好东西[https://choosealicense.com/](https://choosealicense.com/)\n* **兼容性检查** 查看你要用的特性是否支持，万恶的ie基本都是红的[caniuse](https://caniuse.com/#search=fetch),虽然很多可以通过各种polyfill进行解决，不过总是有几个漏网之鱼不是么\n* **polyfill** babel的转码只会转语法，一些基于浏览器的特性是不会进行转码的，比如Promise需要引入专用的promise-polyfill，推荐一个能够自动注入的网站[polyfill.io](https://polyfill.io/v2/docs/)\n* **渐变生成** 生成css渐变色很麻烦？ [试试这个](http://www.colorzilla.com/gradient-editor/)\n* **其他辅助** 从正则到css到box-shadow，这个网站应有尽有[http://tools.jb51.net/aideddesign/css3_boxshadow](http://tools.jb51.net/aideddesign/css3_boxshadow)\n\n# 基本知识\n## js版本\njs有几个主要阶段，ES3，ES5，ES6，ES7，ES8，其中最为重要的大概就是es5，es6了，es5是目前浏览器支持最为广泛的一个版本（因为IE），es6相当于现代浏览器的一个标志，ES6中大量新特性的加入，使得本身很多困恼前端的问题，比如作用域提升啊，回调地狱啊等，都有了很大程度的提升以及弥补，当然因为不是所有浏览器都实现了这些es6的规范，为了兼容考虑，我们都会使用babel将其转回ES5，记住，因为babel只会转译语法糖和一部分实现，像新的类（Promise）还是需要使用polyfill来进行实现的。\n\n## 跨域\n跨域的详细介绍可以参考[ruanyifeng的博客](http://www.ruanyifeng.com/blog/2016/04/cors.html)\n简单来说，端口，域名，子域名，只要有一点不一样，浏览器就会自动帮我们把请求返回的数据给拦截，所以开发过程中收不到后端小伙伴给的数据也请不要着急，开发中我们可以使用webpack的dev-server的[proxy功能](https://blog.csdn.net/imkxrc/article/details/80648371)，正式版用nginx代理api和前端到同一个域名，当然直接上[cors](https://www.jianshu.com/p/f9c21da2c661)进行跨域也是可以的，不过这个主要还是后端的工作啦，而且记住，options请求也让后端处理一下\n\n## 工程化\n最早的时候，整个前端项目的开发是非常无序的，新建一个html，然后通过链接往里面不停的塞js，塞css，那个时候整个项目基本都是静态网页，而动态的部分一般交由php或者java的jsp进行动态生成html代码，然后通过服务器生成后扔回给用户的浏览器，但是随着nodejs的出现以及html5的出现，前端开始逐渐承担起和用户交互的工作，而不是原先仅仅制作出一些简单的动效以及布局，前端也由一个人进行开发而变成了多人协作，甚至在今天，前端不仅仅可以运行在浏览器上，作为服务器以及app也不再是什么难事\n\n## 事件循环\n简单来说，js为了防止多个线程修改同一个dom这一类的操作，是只有一个线程的（webworker，serviceworker是后来出的，而且不能和\bdom通信），js就设计了一个回调机制，\b事件循环，最简单来说，有两个循环，main循环，micro循环，当js有空闲的时候，优先\b从micro循环中取下一个要调用的函数，\b然后才是main循环中，而main循环只有三种方式插入\n1. 新的js文件引入\n2. setTimeout\n3. setInterval\n\n记住，有时候js一些奇怪的行为就是因为时间循环，以及。。。这是\b面试考点，问你数据输出顺序的\n\n# 其他链接\n[从工程化说起](https://www.mizuka.top/2018/11/07/%E5%AD%A6js%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%9C%89%E7%82%B9%E5%A4%B4%E5%86%B71/)","source":"_posts/学js很简单，就是有点头冷0.md","raw":"---\ntitle: 学js很简单，就是有点头冷（0，大概是绪论）\ntags:\n  - 前端\n  - 教程\n  - javascript\n  - 笔记\ndate: 2018-11-01 17:25:25\ncategories: 学习笔记\n---\n# 学js很简单，就是有点头冷\n> 对老angularjs项目进行改造以及迁移到vue，其中遇到了很多困难点以及很多js原理性的东西，在这里进行收集以及汇总\n\n## 一些工具网站的推荐\n> 在我刚入行的2016年，前端js的工程化也才刚刚兴起，虽然还是有很多网站还在完全使用jquery，css和js的引入方法仍然靠手工往html文件里插，现在完全都不一样了，node.js的出现，催生了express,gulp，webpack等等，整个前端开始完全工程化，源代码，生成，开发测试服务器，代码格式化，自动生成注释，甚至连编辑器都，当然啦，这样也催生了很多问题，比如webpack的另一面也是以配置繁琐而出名，以下顺便介绍几个小网站，可以自动生成新建一个项目的常用配置\n\n* **gitignore** 告知git系统中哪些文件不需要进入git，推荐[gitignore.io](https://www.gitignore.io/),只要输入目标语言以及编辑器即可 [一个vue的例子](https://www.gitignore.io/api/node,vuejs,webstorm,visualstudiocode)\n* **license** 授权文件，有时候这个是维权的好东西[https://choosealicense.com/](https://choosealicense.com/)\n* **兼容性检查** 查看你要用的特性是否支持，万恶的ie基本都是红的[caniuse](https://caniuse.com/#search=fetch),虽然很多可以通过各种polyfill进行解决，不过总是有几个漏网之鱼不是么\n* **polyfill** babel的转码只会转语法，一些基于浏览器的特性是不会进行转码的，比如Promise需要引入专用的promise-polyfill，推荐一个能够自动注入的网站[polyfill.io](https://polyfill.io/v2/docs/)\n* **渐变生成** 生成css渐变色很麻烦？ [试试这个](http://www.colorzilla.com/gradient-editor/)\n* **其他辅助** 从正则到css到box-shadow，这个网站应有尽有[http://tools.jb51.net/aideddesign/css3_boxshadow](http://tools.jb51.net/aideddesign/css3_boxshadow)\n\n# 基本知识\n## js版本\njs有几个主要阶段，ES3，ES5，ES6，ES7，ES8，其中最为重要的大概就是es5，es6了，es5是目前浏览器支持最为广泛的一个版本（因为IE），es6相当于现代浏览器的一个标志，ES6中大量新特性的加入，使得本身很多困恼前端的问题，比如作用域提升啊，回调地狱啊等，都有了很大程度的提升以及弥补，当然因为不是所有浏览器都实现了这些es6的规范，为了兼容考虑，我们都会使用babel将其转回ES5，记住，因为babel只会转译语法糖和一部分实现，像新的类（Promise）还是需要使用polyfill来进行实现的。\n\n## 跨域\n跨域的详细介绍可以参考[ruanyifeng的博客](http://www.ruanyifeng.com/blog/2016/04/cors.html)\n简单来说，端口，域名，子域名，只要有一点不一样，浏览器就会自动帮我们把请求返回的数据给拦截，所以开发过程中收不到后端小伙伴给的数据也请不要着急，开发中我们可以使用webpack的dev-server的[proxy功能](https://blog.csdn.net/imkxrc/article/details/80648371)，正式版用nginx代理api和前端到同一个域名，当然直接上[cors](https://www.jianshu.com/p/f9c21da2c661)进行跨域也是可以的，不过这个主要还是后端的工作啦，而且记住，options请求也让后端处理一下\n\n## 工程化\n最早的时候，整个前端项目的开发是非常无序的，新建一个html，然后通过链接往里面不停的塞js，塞css，那个时候整个项目基本都是静态网页，而动态的部分一般交由php或者java的jsp进行动态生成html代码，然后通过服务器生成后扔回给用户的浏览器，但是随着nodejs的出现以及html5的出现，前端开始逐渐承担起和用户交互的工作，而不是原先仅仅制作出一些简单的动效以及布局，前端也由一个人进行开发而变成了多人协作，甚至在今天，前端不仅仅可以运行在浏览器上，作为服务器以及app也不再是什么难事\n\n## 事件循环\n简单来说，js为了防止多个线程修改同一个dom这一类的操作，是只有一个线程的（webworker，serviceworker是后来出的，而且不能和\bdom通信），js就设计了一个回调机制，\b事件循环，最简单来说，有两个循环，main循环，micro循环，当js有空闲的时候，优先\b从micro循环中取下一个要调用的函数，\b然后才是main循环中，而main循环只有三种方式插入\n1. 新的js文件引入\n2. setTimeout\n3. setInterval\n\n记住，有时候js一些奇怪的行为就是因为时间循环，以及。。。这是\b面试考点，问你数据输出顺序的\n\n# 其他链接\n[从工程化说起](https://www.mizuka.top/2018/11/07/%E5%AD%A6js%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%9C%89%E7%82%B9%E5%A4%B4%E5%86%B71/)","slug":"学js很简单，就是有点头冷0","published":1,"updated":"2018-11-07T03:51:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxhz001hw6il0idqe1k4","content":"<h1 id=\"学js很简单，就是有点头冷\"><a href=\"#学js很简单，就是有点头冷\" class=\"headerlink\" title=\"学js很简单，就是有点头冷\"></a>学js很简单，就是有点头冷</h1><blockquote>\n<p>对老angularjs项目进行改造以及迁移到vue，其中遇到了很多困难点以及很多js原理性的东西，在这里进行收集以及汇总</p>\n</blockquote>\n<h2 id=\"一些工具网站的推荐\"><a href=\"#一些工具网站的推荐\" class=\"headerlink\" title=\"一些工具网站的推荐\"></a>一些工具网站的推荐</h2><blockquote>\n<p>在我刚入行的2016年，前端js的工程化也才刚刚兴起，虽然还是有很多网站还在完全使用jquery，css和js的引入方法仍然靠手工往html文件里插，现在完全都不一样了，node.js的出现，催生了express,gulp，webpack等等，整个前端开始完全工程化，源代码，生成，开发测试服务器，代码格式化，自动生成注释，甚至连编辑器都，当然啦，这样也催生了很多问题，比如webpack的另一面也是以配置繁琐而出名，以下顺便介绍几个小网站，可以自动生成新建一个项目的常用配置</p>\n</blockquote>\n<ul>\n<li><strong>gitignore</strong> 告知git系统中哪些文件不需要进入git，推荐<a href=\"https://www.gitignore.io/\" target=\"_blank\" rel=\"noopener\">gitignore.io</a>,只要输入目标语言以及编辑器即可 <a href=\"https://www.gitignore.io/api/node,vuejs,webstorm,visualstudiocode\" target=\"_blank\" rel=\"noopener\">一个vue的例子</a></li>\n<li><strong>license</strong> 授权文件，有时候这个是维权的好东西<a href=\"https://choosealicense.com/\" target=\"_blank\" rel=\"noopener\">https://choosealicense.com/</a></li>\n<li><strong>兼容性检查</strong> 查看你要用的特性是否支持，万恶的ie基本都是红的<a href=\"https://caniuse.com/#search=fetch\" target=\"_blank\" rel=\"noopener\">caniuse</a>,虽然很多可以通过各种polyfill进行解决，不过总是有几个漏网之鱼不是么</li>\n<li><strong>polyfill</strong> babel的转码只会转语法，一些基于浏览器的特性是不会进行转码的，比如Promise需要引入专用的promise-polyfill，推荐一个能够自动注入的网站<a href=\"https://polyfill.io/v2/docs/\" target=\"_blank\" rel=\"noopener\">polyfill.io</a></li>\n<li><strong>渐变生成</strong> 生成css渐变色很麻烦？ <a href=\"http://www.colorzilla.com/gradient-editor/\" target=\"_blank\" rel=\"noopener\">试试这个</a></li>\n<li><strong>其他辅助</strong> 从正则到css到box-shadow，这个网站应有尽有<a href=\"http://tools.jb51.net/aideddesign/css3_boxshadow\" target=\"_blank\" rel=\"noopener\">http://tools.jb51.net/aideddesign/css3_boxshadow</a></li>\n</ul>\n<h1 id=\"基本知识\"><a href=\"#基本知识\" class=\"headerlink\" title=\"基本知识\"></a>基本知识</h1><h2 id=\"js版本\"><a href=\"#js版本\" class=\"headerlink\" title=\"js版本\"></a>js版本</h2><p>js有几个主要阶段，ES3，ES5，ES6，ES7，ES8，其中最为重要的大概就是es5，es6了，es5是目前浏览器支持最为广泛的一个版本（因为IE），es6相当于现代浏览器的一个标志，ES6中大量新特性的加入，使得本身很多困恼前端的问题，比如作用域提升啊，回调地狱啊等，都有了很大程度的提升以及弥补，当然因为不是所有浏览器都实现了这些es6的规范，为了兼容考虑，我们都会使用babel将其转回ES5，记住，因为babel只会转译语法糖和一部分实现，像新的类（Promise）还是需要使用polyfill来进行实现的。</p>\n<h2 id=\"跨域\"><a href=\"#跨域\" class=\"headerlink\" title=\"跨域\"></a>跨域</h2><p>跨域的详细介绍可以参考<a href=\"http://www.ruanyifeng.com/blog/2016/04/cors.html\" target=\"_blank\" rel=\"noopener\">ruanyifeng的博客</a><br>简单来说，端口，域名，子域名，只要有一点不一样，浏览器就会自动帮我们把请求返回的数据给拦截，所以开发过程中收不到后端小伙伴给的数据也请不要着急，开发中我们可以使用webpack的dev-server的<a href=\"https://blog.csdn.net/imkxrc/article/details/80648371\" target=\"_blank\" rel=\"noopener\">proxy功能</a>，正式版用nginx代理api和前端到同一个域名，当然直接上<a href=\"https://www.jianshu.com/p/f9c21da2c661\" target=\"_blank\" rel=\"noopener\">cors</a>进行跨域也是可以的，不过这个主要还是后端的工作啦，而且记住，options请求也让后端处理一下</p>\n<h2 id=\"工程化\"><a href=\"#工程化\" class=\"headerlink\" title=\"工程化\"></a>工程化</h2><p>最早的时候，整个前端项目的开发是非常无序的，新建一个html，然后通过链接往里面不停的塞js，塞css，那个时候整个项目基本都是静态网页，而动态的部分一般交由php或者java的jsp进行动态生成html代码，然后通过服务器生成后扔回给用户的浏览器，但是随着nodejs的出现以及html5的出现，前端开始逐渐承担起和用户交互的工作，而不是原先仅仅制作出一些简单的动效以及布局，前端也由一个人进行开发而变成了多人协作，甚至在今天，前端不仅仅可以运行在浏览器上，作为服务器以及app也不再是什么难事</p>\n<h2 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h2><p>简单来说，js为了防止多个线程修改同一个dom这一类的操作，是只有一个线程的（webworker，serviceworker是后来出的，而且不能和\bdom通信），js就设计了一个回调机制，\b事件循环，最简单来说，有两个循环，main循环，micro循环，当js有空闲的时候，优先\b从micro循环中取下一个要调用的函数，\b然后才是main循环中，而main循环只有三种方式插入</p>\n<ol>\n<li>新的js文件引入</li>\n<li>setTimeout</li>\n<li>setInterval</li>\n</ol>\n<p>记住，有时候js一些奇怪的行为就是因为时间循环，以及。。。这是\b面试考点，问你数据输出顺序的</p>\n<h1 id=\"其他链接\"><a href=\"#其他链接\" class=\"headerlink\" title=\"其他链接\"></a>其他链接</h1><p><a href=\"https://www.mizuka.top/2018/11/07/%E5%AD%A6js%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%9C%89%E7%82%B9%E5%A4%B4%E5%86%B71/\">从工程化说起</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"学js很简单，就是有点头冷\"><a href=\"#学js很简单，就是有点头冷\" class=\"headerlink\" title=\"学js很简单，就是有点头冷\"></a>学js很简单，就是有点头冷</h1><blockquote>\n<p>对老angularjs项目进行改造以及迁移到vue，其中遇到了很多困难点以及很多js原理性的东西，在这里进行收集以及汇总</p>\n</blockquote>\n<h2 id=\"一些工具网站的推荐\"><a href=\"#一些工具网站的推荐\" class=\"headerlink\" title=\"一些工具网站的推荐\"></a>一些工具网站的推荐</h2><blockquote>\n<p>在我刚入行的2016年，前端js的工程化也才刚刚兴起，虽然还是有很多网站还在完全使用jquery，css和js的引入方法仍然靠手工往html文件里插，现在完全都不一样了，node.js的出现，催生了express,gulp，webpack等等，整个前端开始完全工程化，源代码，生成，开发测试服务器，代码格式化，自动生成注释，甚至连编辑器都，当然啦，这样也催生了很多问题，比如webpack的另一面也是以配置繁琐而出名，以下顺便介绍几个小网站，可以自动生成新建一个项目的常用配置</p>\n</blockquote>\n<ul>\n<li><strong>gitignore</strong> 告知git系统中哪些文件不需要进入git，推荐<a href=\"https://www.gitignore.io/\" target=\"_blank\" rel=\"noopener\">gitignore.io</a>,只要输入目标语言以及编辑器即可 <a href=\"https://www.gitignore.io/api/node,vuejs,webstorm,visualstudiocode\" target=\"_blank\" rel=\"noopener\">一个vue的例子</a></li>\n<li><strong>license</strong> 授权文件，有时候这个是维权的好东西<a href=\"https://choosealicense.com/\" target=\"_blank\" rel=\"noopener\">https://choosealicense.com/</a></li>\n<li><strong>兼容性检查</strong> 查看你要用的特性是否支持，万恶的ie基本都是红的<a href=\"https://caniuse.com/#search=fetch\" target=\"_blank\" rel=\"noopener\">caniuse</a>,虽然很多可以通过各种polyfill进行解决，不过总是有几个漏网之鱼不是么</li>\n<li><strong>polyfill</strong> babel的转码只会转语法，一些基于浏览器的特性是不会进行转码的，比如Promise需要引入专用的promise-polyfill，推荐一个能够自动注入的网站<a href=\"https://polyfill.io/v2/docs/\" target=\"_blank\" rel=\"noopener\">polyfill.io</a></li>\n<li><strong>渐变生成</strong> 生成css渐变色很麻烦？ <a href=\"http://www.colorzilla.com/gradient-editor/\" target=\"_blank\" rel=\"noopener\">试试这个</a></li>\n<li><strong>其他辅助</strong> 从正则到css到box-shadow，这个网站应有尽有<a href=\"http://tools.jb51.net/aideddesign/css3_boxshadow\" target=\"_blank\" rel=\"noopener\">http://tools.jb51.net/aideddesign/css3_boxshadow</a></li>\n</ul>\n<h1 id=\"基本知识\"><a href=\"#基本知识\" class=\"headerlink\" title=\"基本知识\"></a>基本知识</h1><h2 id=\"js版本\"><a href=\"#js版本\" class=\"headerlink\" title=\"js版本\"></a>js版本</h2><p>js有几个主要阶段，ES3，ES5，ES6，ES7，ES8，其中最为重要的大概就是es5，es6了，es5是目前浏览器支持最为广泛的一个版本（因为IE），es6相当于现代浏览器的一个标志，ES6中大量新特性的加入，使得本身很多困恼前端的问题，比如作用域提升啊，回调地狱啊等，都有了很大程度的提升以及弥补，当然因为不是所有浏览器都实现了这些es6的规范，为了兼容考虑，我们都会使用babel将其转回ES5，记住，因为babel只会转译语法糖和一部分实现，像新的类（Promise）还是需要使用polyfill来进行实现的。</p>\n<h2 id=\"跨域\"><a href=\"#跨域\" class=\"headerlink\" title=\"跨域\"></a>跨域</h2><p>跨域的详细介绍可以参考<a href=\"http://www.ruanyifeng.com/blog/2016/04/cors.html\" target=\"_blank\" rel=\"noopener\">ruanyifeng的博客</a><br>简单来说，端口，域名，子域名，只要有一点不一样，浏览器就会自动帮我们把请求返回的数据给拦截，所以开发过程中收不到后端小伙伴给的数据也请不要着急，开发中我们可以使用webpack的dev-server的<a href=\"https://blog.csdn.net/imkxrc/article/details/80648371\" target=\"_blank\" rel=\"noopener\">proxy功能</a>，正式版用nginx代理api和前端到同一个域名，当然直接上<a href=\"https://www.jianshu.com/p/f9c21da2c661\" target=\"_blank\" rel=\"noopener\">cors</a>进行跨域也是可以的，不过这个主要还是后端的工作啦，而且记住，options请求也让后端处理一下</p>\n<h2 id=\"工程化\"><a href=\"#工程化\" class=\"headerlink\" title=\"工程化\"></a>工程化</h2><p>最早的时候，整个前端项目的开发是非常无序的，新建一个html，然后通过链接往里面不停的塞js，塞css，那个时候整个项目基本都是静态网页，而动态的部分一般交由php或者java的jsp进行动态生成html代码，然后通过服务器生成后扔回给用户的浏览器，但是随着nodejs的出现以及html5的出现，前端开始逐渐承担起和用户交互的工作，而不是原先仅仅制作出一些简单的动效以及布局，前端也由一个人进行开发而变成了多人协作，甚至在今天，前端不仅仅可以运行在浏览器上，作为服务器以及app也不再是什么难事</p>\n<h2 id=\"事件循环\"><a href=\"#事件循环\" class=\"headerlink\" title=\"事件循环\"></a>事件循环</h2><p>简单来说，js为了防止多个线程修改同一个dom这一类的操作，是只有一个线程的（webworker，serviceworker是后来出的，而且不能和\bdom通信），js就设计了一个回调机制，\b事件循环，最简单来说，有两个循环，main循环，micro循环，当js有空闲的时候，优先\b从micro循环中取下一个要调用的函数，\b然后才是main循环中，而main循环只有三种方式插入</p>\n<ol>\n<li>新的js文件引入</li>\n<li>setTimeout</li>\n<li>setInterval</li>\n</ol>\n<p>记住，有时候js一些奇怪的行为就是因为时间循环，以及。。。这是\b面试考点，问你数据输出顺序的</p>\n<h1 id=\"其他链接\"><a href=\"#其他链接\" class=\"headerlink\" title=\"其他链接\"></a>其他链接</h1><p><a href=\"https://www.mizuka.top/2018/11/07/%E5%AD%A6js%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%9C%89%E7%82%B9%E5%A4%B4%E5%86%B71/\">从工程化说起</a></p>\n"},{"title":"学js很简单，就是有点头冷（1从工程化开始）","date":"2018-11-07T02:58:25.000Z","_content":"# 工程化\n> 反正也是公司要要求自己\b从头写一个类库，干脆。。。你懂的，全部记录一下吧\n## 为什么要工程化？\n工程化是为了规范开发行为，是为了多人开发以及未来改进，当然，也是为了甩锅hhhh，这是一个目前比较简单的工程的目录![目录](https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/learn-js/85CDA5F2-2279-438B-B4A9-7C3F7CC74088.png)\n可以看到大概现在分了几个部分\n* **.babelrc** 配置转码的东西，主要为了兼容浏览器\n* **.eslintrc.js** 代码格式化规范配置，\n* **.gitignore** 哪些文件不必加入git\n* **gulpfile.js** gulp构建工具\n* **rollup.config.js** 构建工具+1\n* **src** 源码！\n* **package.json** 这个东西，现在工程化里不存在都不可能的，定义了需要引用的第三方包以及本身的一系列配置文件\n\n## 知道为什么js如此重要么？\nHTML是骨架，css像是化妆品，js。。。能生成和修改html和css\n\n# 开始吧\n## \b版本管理工具\n![gitlogo](https://www.linuxjournal.com/sites/default/files/styles/360_250/public/nodeimage/story/git-icon.png)\n\n\n我们版本管理工具选择git，主要是为了托管在github上，git的一个好处就是分支开发，\b这样多个人在同一个可以进行同步开发，以及，**查找哪些有问题的代码是谁写的**\n","source":"_posts/学js很简单，就是有点头冷1.md","raw":"---\ntitle: 学js很简单，就是有点头冷（1从工程化开始）\ntags:\n  - 前端\n  - 教程\n  - javascript\n  - 笔记\ndate: 2018-11-07 10:58:25\ncategories: 学习笔记\n---\n# 工程化\n> 反正也是公司要要求自己\b从头写一个类库，干脆。。。你懂的，全部记录一下吧\n## 为什么要工程化？\n工程化是为了规范开发行为，是为了多人开发以及未来改进，当然，也是为了甩锅hhhh，这是一个目前比较简单的工程的目录![目录](https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/learn-js/85CDA5F2-2279-438B-B4A9-7C3F7CC74088.png)\n可以看到大概现在分了几个部分\n* **.babelrc** 配置转码的东西，主要为了兼容浏览器\n* **.eslintrc.js** 代码格式化规范配置，\n* **.gitignore** 哪些文件不必加入git\n* **gulpfile.js** gulp构建工具\n* **rollup.config.js** 构建工具+1\n* **src** 源码！\n* **package.json** 这个东西，现在工程化里不存在都不可能的，定义了需要引用的第三方包以及本身的一系列配置文件\n\n## 知道为什么js如此重要么？\nHTML是骨架，css像是化妆品，js。。。能生成和修改html和css\n\n# 开始吧\n## \b版本管理工具\n![gitlogo](https://www.linuxjournal.com/sites/default/files/styles/360_250/public/nodeimage/story/git-icon.png)\n\n\n我们版本管理工具选择git，主要是为了托管在github上，git的一个好处就是分支开发，\b这样多个人在同一个可以进行同步开发，以及，**查找哪些有问题的代码是谁写的**\n","slug":"学js很简单，就是有点头冷1","published":1,"updated":"2018-11-07T06:18:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxi1001lw6ilhsieb2h6","content":"<h1 id=\"工程化\"><a href=\"#工程化\" class=\"headerlink\" title=\"工程化\"></a>工程化</h1><blockquote>\n<p>反正也是公司要要求自己\b从头写一个类库，干脆。。。你懂的，全部记录一下吧</p>\n</blockquote>\n<h2 id=\"为什么要工程化？\"><a href=\"#为什么要工程化？\" class=\"headerlink\" title=\"为什么要工程化？\"></a>为什么要工程化？</h2><p>工程化是为了规范开发行为，是为了多人开发以及未来改进，当然，也是为了甩锅hhhh，这是一个目前比较简单的工程的目录<img src=\"https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/learn-js/85CDA5F2-2279-438B-B4A9-7C3F7CC74088.png\" alt=\"目录\"><br>可以看到大概现在分了几个部分</p>\n<ul>\n<li><strong>.babelrc</strong> 配置转码的东西，主要为了兼容浏览器</li>\n<li><strong>.eslintrc.js</strong> 代码格式化规范配置，</li>\n<li><strong>.gitignore</strong> 哪些文件不必加入git</li>\n<li><strong>gulpfile.js</strong> gulp构建工具</li>\n<li><strong>rollup.config.js</strong> 构建工具+1</li>\n<li><strong>src</strong> 源码！</li>\n<li><strong>package.json</strong> 这个东西，现在工程化里不存在都不可能的，定义了需要引用的第三方包以及本身的一系列配置文件</li>\n</ul>\n<h2 id=\"知道为什么js如此重要么？\"><a href=\"#知道为什么js如此重要么？\" class=\"headerlink\" title=\"知道为什么js如此重要么？\"></a>知道为什么js如此重要么？</h2><p>HTML是骨架，css像是化妆品，js。。。能生成和修改html和css</p>\n<h1 id=\"开始吧\"><a href=\"#开始吧\" class=\"headerlink\" title=\"开始吧\"></a>开始吧</h1><h2 id=\"版本管理工具\"><a href=\"#版本管理工具\" class=\"headerlink\" title=\"\b版本管理工具\"></a>\b版本管理工具</h2><p><img src=\"https://www.linuxjournal.com/sites/default/files/styles/360_250/public/nodeimage/story/git-icon.png\" alt=\"gitlogo\"></p>\n<p>我们版本管理工具选择git，主要是为了托管在github上，git的一个好处就是分支开发，\b这样多个人在同一个可以进行同步开发，以及，<strong>查找哪些有问题的代码是谁写的</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"工程化\"><a href=\"#工程化\" class=\"headerlink\" title=\"工程化\"></a>工程化</h1><blockquote>\n<p>反正也是公司要要求自己\b从头写一个类库，干脆。。。你懂的，全部记录一下吧</p>\n</blockquote>\n<h2 id=\"为什么要工程化？\"><a href=\"#为什么要工程化？\" class=\"headerlink\" title=\"为什么要工程化？\"></a>为什么要工程化？</h2><p>工程化是为了规范开发行为，是为了多人开发以及未来改进，当然，也是为了甩锅hhhh，这是一个目前比较简单的工程的目录<img src=\"https://mizuka-blog.oss-cn-shanghai.aliyuncs.com/learn-js/85CDA5F2-2279-438B-B4A9-7C3F7CC74088.png\" alt=\"目录\"><br>可以看到大概现在分了几个部分</p>\n<ul>\n<li><strong>.babelrc</strong> 配置转码的东西，主要为了兼容浏览器</li>\n<li><strong>.eslintrc.js</strong> 代码格式化规范配置，</li>\n<li><strong>.gitignore</strong> 哪些文件不必加入git</li>\n<li><strong>gulpfile.js</strong> gulp构建工具</li>\n<li><strong>rollup.config.js</strong> 构建工具+1</li>\n<li><strong>src</strong> 源码！</li>\n<li><strong>package.json</strong> 这个东西，现在工程化里不存在都不可能的，定义了需要引用的第三方包以及本身的一系列配置文件</li>\n</ul>\n<h2 id=\"知道为什么js如此重要么？\"><a href=\"#知道为什么js如此重要么？\" class=\"headerlink\" title=\"知道为什么js如此重要么？\"></a>知道为什么js如此重要么？</h2><p>HTML是骨架，css像是化妆品，js。。。能生成和修改html和css</p>\n<h1 id=\"开始吧\"><a href=\"#开始吧\" class=\"headerlink\" title=\"开始吧\"></a>开始吧</h1><h2 id=\"版本管理工具\"><a href=\"#版本管理工具\" class=\"headerlink\" title=\"\b版本管理工具\"></a>\b版本管理工具</h2><p><img src=\"https://www.linuxjournal.com/sites/default/files/styles/360_250/public/nodeimage/story/git-icon.png\" alt=\"gitlogo\"></p>\n<p>我们版本管理工具选择git，主要是为了托管在github上，git的一个好处就是分支开发，\b这样多个人在同一个可以进行同步开发，以及，<strong>查找哪些有问题的代码是谁写的</strong></p>\n"},{"title":"小微企业验证码破解","date":"2018-11-13T04:07:25.000Z","_content":"# 小微企业查询系统[git地址](https://github.com/trionfo1993/xwqy-geetest)\n> 破解geetest offline的尝试\n\n## 简介\n最近因为有需要对爬取的非上市公司进行一个验证，而绝大多数的非上市公司又都是小微企业，比起爬企业征信系统来说，还是小微企业名录更方便一点\n\n## 特点\n基于node.js axios全程破解 无需下载图片 无需模拟轨迹，offline模式就是任性\n\n### 觉得不错帮忙Star一下啦～\n\n#### 破解流程\n首先我们跟着正常获取数据的流程走一遍\n1. 打开[小微企业名录](http://xwqy.gsxt.gov.cn/)并且打开控制台\n\n可以看到大概有这几个请求\n```\nhttp://xwqy.gsxt.gov.cn/security/verify_ip\nhttp://xwqy.gsxt.gov.cn/security/verify_keyword\nhttp://xwqy.gsxt.gov.cn/pc-geetest/register?t=1516872325770\n\n```\n\n查看一下response(当然你熟悉geetest也行)就会发现register就是geetest的初始化请求啦  \n\n**返回值如下**\n```\nchallenge:\"a1d0c6e83f027327d8461063f4ac58a61c\"\ngt:\"6146190e4171da316dbb5bcc076e2607\"\nsuccess:0\n```\n\n其中你可以发现success基本都是0 也就是说离线模式\n\n#### 什么是离线模式？\n基本就是geetest不参与判断的一个状态，验证部分都在前台和中间服务器完成\n\n回去看之前系统下载的js 会发现两个geetest提供的js  \n\n* geetest.0.0.0.js\n* offline.6.0.0.js\n\n这几个源文件也提供在项目中了\n\n2. 滑块拼合\n\n发送了一个新的验证请求\n```\nhttp://xwqy.gsxt.gov.cn/pc-geetest/validate\n\nrequest如下：  \n\ngeetest_challenge:a1d0c6e83f027327d8461063f4ac58a61c\ngeetest_validate:010886ec_0084e_10100077776e\ngeetest_seccode:010886ec_0084e_10100077776e|jordan\n\n```\n\n##### challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已\n\n既然是offline 那就分析offline.js呗\n\n查看代码就能看到这句\n```\nreturn c >= f - 3 && c <= f + 3 ? {\n            success: !0,\n            message: \"success\",\n            validate: b.A(c, e.d.challenge) + \"_\" + b.A(a.b(\"rand0\", e.c), e.d.challenge) + \"_\" + b.A(a.b(\"rand1\", e.c), e.d.challenge),\n            score: Math.round(d / 200)\n        } : {success: 0, message: \"fail\"}\n\n```\n\n这不就是我们要的么！\n```\nvalidate: b.A(c, e.d.challenge) + \"_\" + b.A(a.b(\"rand0\", e.c), e.d.challenge) + \"_\" + b.A(a.b(\"rand1\", e.c), e.d.challenge),\n```\n\noffline.6.0.0.js和offline.5.0.0.js可以看出一样是通过密钥 rand rand1进行加密获取一个值，一半来说这种方案就是得依靠收集案例倒推，但是我们是不会重复造轮子的\n\ngithub关键词一搜就能发现已经有人整理好了['https://github.com/9468305/python-script/blob/master/geetest_offline/util.py']('https://github.com/9468305/python-script/blob/master/geetest_offline/util.py')\n\n所以那就用呗\n\n后续就只是涉及到爬虫以及页面跳转的问题了，具体可以看util内的代码\n\n而且在micro_lib内也可以直接搜索 发送验证的地址改为http://xwqy.gsxt.gov.cn/mirco/micro_lib\n\n并相应修改传入的值即可\n```\norganId:100000\ntextfield:encode后的关键词\nfwId:1400\nsearchOrganId:\nchannelId:99\ncaptcha:\ngeetest_challenge:3ef815416f775098fe977004015c619332\ngeetest_validate:010886ec_0084e_10100077776e\ngeetest_seccode:010886ec_0084e_10100077776e|jordan\n```\n\n\n### restful-api\n#### 已经做了一个api形式的 直接在url内打入关键词即可爬取\n#### 运行步骤\n```\nnpm install\nnpm run start\ncurl http://127.0.0.1:4001/公司关键词\n```","source":"_posts/小微企业验证码破解.md","raw":"---\ntitle: 小微企业验证码破解\ntags:\n  - null\ndate: 2018-11-13 12:07:25\ncategories:\n---\n# 小微企业查询系统[git地址](https://github.com/trionfo1993/xwqy-geetest)\n> 破解geetest offline的尝试\n\n## 简介\n最近因为有需要对爬取的非上市公司进行一个验证，而绝大多数的非上市公司又都是小微企业，比起爬企业征信系统来说，还是小微企业名录更方便一点\n\n## 特点\n基于node.js axios全程破解 无需下载图片 无需模拟轨迹，offline模式就是任性\n\n### 觉得不错帮忙Star一下啦～\n\n#### 破解流程\n首先我们跟着正常获取数据的流程走一遍\n1. 打开[小微企业名录](http://xwqy.gsxt.gov.cn/)并且打开控制台\n\n可以看到大概有这几个请求\n```\nhttp://xwqy.gsxt.gov.cn/security/verify_ip\nhttp://xwqy.gsxt.gov.cn/security/verify_keyword\nhttp://xwqy.gsxt.gov.cn/pc-geetest/register?t=1516872325770\n\n```\n\n查看一下response(当然你熟悉geetest也行)就会发现register就是geetest的初始化请求啦  \n\n**返回值如下**\n```\nchallenge:\"a1d0c6e83f027327d8461063f4ac58a61c\"\ngt:\"6146190e4171da316dbb5bcc076e2607\"\nsuccess:0\n```\n\n其中你可以发现success基本都是0 也就是说离线模式\n\n#### 什么是离线模式？\n基本就是geetest不参与判断的一个状态，验证部分都在前台和中间服务器完成\n\n回去看之前系统下载的js 会发现两个geetest提供的js  \n\n* geetest.0.0.0.js\n* offline.6.0.0.js\n\n这几个源文件也提供在项目中了\n\n2. 滑块拼合\n\n发送了一个新的验证请求\n```\nhttp://xwqy.gsxt.gov.cn/pc-geetest/validate\n\nrequest如下：  \n\ngeetest_challenge:a1d0c6e83f027327d8461063f4ac58a61c\ngeetest_validate:010886ec_0084e_10100077776e\ngeetest_seccode:010886ec_0084e_10100077776e|jordan\n\n```\n\n##### challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已\n\n既然是offline 那就分析offline.js呗\n\n查看代码就能看到这句\n```\nreturn c >= f - 3 && c <= f + 3 ? {\n            success: !0,\n            message: \"success\",\n            validate: b.A(c, e.d.challenge) + \"_\" + b.A(a.b(\"rand0\", e.c), e.d.challenge) + \"_\" + b.A(a.b(\"rand1\", e.c), e.d.challenge),\n            score: Math.round(d / 200)\n        } : {success: 0, message: \"fail\"}\n\n```\n\n这不就是我们要的么！\n```\nvalidate: b.A(c, e.d.challenge) + \"_\" + b.A(a.b(\"rand0\", e.c), e.d.challenge) + \"_\" + b.A(a.b(\"rand1\", e.c), e.d.challenge),\n```\n\noffline.6.0.0.js和offline.5.0.0.js可以看出一样是通过密钥 rand rand1进行加密获取一个值，一半来说这种方案就是得依靠收集案例倒推，但是我们是不会重复造轮子的\n\ngithub关键词一搜就能发现已经有人整理好了['https://github.com/9468305/python-script/blob/master/geetest_offline/util.py']('https://github.com/9468305/python-script/blob/master/geetest_offline/util.py')\n\n所以那就用呗\n\n后续就只是涉及到爬虫以及页面跳转的问题了，具体可以看util内的代码\n\n而且在micro_lib内也可以直接搜索 发送验证的地址改为http://xwqy.gsxt.gov.cn/mirco/micro_lib\n\n并相应修改传入的值即可\n```\norganId:100000\ntextfield:encode后的关键词\nfwId:1400\nsearchOrganId:\nchannelId:99\ncaptcha:\ngeetest_challenge:3ef815416f775098fe977004015c619332\ngeetest_validate:010886ec_0084e_10100077776e\ngeetest_seccode:010886ec_0084e_10100077776e|jordan\n```\n\n\n### restful-api\n#### 已经做了一个api形式的 直接在url内打入关键词即可爬取\n#### 运行步骤\n```\nnpm install\nnpm run start\ncurl http://127.0.0.1:4001/公司关键词\n```","slug":"小微企业验证码破解","published":1,"updated":"2018-11-13T04:07:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxi3001ow6il0i6i2row","content":"<h1 id=\"小微企业查询系统git地址\"><a href=\"#小微企业查询系统git地址\" class=\"headerlink\" title=\"小微企业查询系统git地址\"></a>小微企业查询系统<a href=\"https://github.com/trionfo1993/xwqy-geetest\" target=\"_blank\" rel=\"noopener\">git地址</a></h1><blockquote>\n<p>破解geetest offline的尝试</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近因为有需要对爬取的非上市公司进行一个验证，而绝大多数的非上市公司又都是小微企业，比起爬企业征信系统来说，还是小微企业名录更方便一点</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><p>基于node.js axios全程破解 无需下载图片 无需模拟轨迹，offline模式就是任性</p>\n<h3 id=\"觉得不错帮忙Star一下啦～\"><a href=\"#觉得不错帮忙Star一下啦～\" class=\"headerlink\" title=\"觉得不错帮忙Star一下啦～\"></a>觉得不错帮忙Star一下啦～</h3><h4 id=\"破解流程\"><a href=\"#破解流程\" class=\"headerlink\" title=\"破解流程\"></a>破解流程</h4><p>首先我们跟着正常获取数据的流程走一遍</p>\n<ol>\n<li>打开<a href=\"http://xwqy.gsxt.gov.cn/\" target=\"_blank\" rel=\"noopener\">小微企业名录</a>并且打开控制台</li>\n</ol>\n<p>可以看到大概有这几个请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://xwqy.gsxt.gov.cn/security/verify_ip</span><br><span class=\"line\">http://xwqy.gsxt.gov.cn/security/verify_keyword</span><br><span class=\"line\">http://xwqy.gsxt.gov.cn/pc-geetest/register?t=1516872325770</span><br></pre></td></tr></table></figure></p>\n<p>查看一下response(当然你熟悉geetest也行)就会发现register就是geetest的初始化请求啦  </p>\n<p><strong>返回值如下</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">challenge:&quot;a1d0c6e83f027327d8461063f4ac58a61c&quot;</span><br><span class=\"line\">gt:&quot;6146190e4171da316dbb5bcc076e2607&quot;</span><br><span class=\"line\">success:0</span><br></pre></td></tr></table></figure></p>\n<p>其中你可以发现success基本都是0 也就是说离线模式</p>\n<h4 id=\"什么是离线模式？\"><a href=\"#什么是离线模式？\" class=\"headerlink\" title=\"什么是离线模式？\"></a>什么是离线模式？</h4><p>基本就是geetest不参与判断的一个状态，验证部分都在前台和中间服务器完成</p>\n<p>回去看之前系统下载的js 会发现两个geetest提供的js  </p>\n<ul>\n<li>geetest.0.0.0.js</li>\n<li>offline.6.0.0.js</li>\n</ul>\n<p>这几个源文件也提供在项目中了</p>\n<ol start=\"2\">\n<li>滑块拼合</li>\n</ol>\n<p>发送了一个新的验证请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://xwqy.gsxt.gov.cn/pc-geetest/validate</span><br><span class=\"line\"></span><br><span class=\"line\">request如下：  </span><br><span class=\"line\"></span><br><span class=\"line\">geetest_challenge:a1d0c6e83f027327d8461063f4ac58a61c</span><br><span class=\"line\">geetest_validate:010886ec_0084e_10100077776e</span><br><span class=\"line\">geetest_seccode:010886ec_0084e_10100077776e|jordan</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"challenge在第一步我们已经获取了，问题是validate怎么获取-同时seccode就是validate加了一个-jordan而已\"><a href=\"#challenge在第一步我们已经获取了，问题是validate怎么获取-同时seccode就是validate加了一个-jordan而已\" class=\"headerlink\" title=\"challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已\"></a>challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已</h5><p>既然是offline 那就分析offline.js呗</p>\n<p>查看代码就能看到这句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return c &gt;= f - 3 &amp;&amp; c &lt;= f + 3 ? &#123;</span><br><span class=\"line\">            success: !0,</span><br><span class=\"line\">            message: &quot;success&quot;,</span><br><span class=\"line\">            validate: b.A(c, e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand0&quot;, e.c), e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand1&quot;, e.c), e.d.challenge),</span><br><span class=\"line\">            score: Math.round(d / 200)</span><br><span class=\"line\">        &#125; : &#123;success: 0, message: &quot;fail&quot;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这不就是我们要的么！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate: b.A(c, e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand0&quot;, e.c), e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand1&quot;, e.c), e.d.challenge),</span><br></pre></td></tr></table></figure></p>\n<p>offline.6.0.0.js和offline.5.0.0.js可以看出一样是通过密钥 rand rand1进行加密获取一个值，一半来说这种方案就是得依靠收集案例倒推，但是我们是不会重复造轮子的</p>\n<p>github关键词一搜就能发现已经有人整理好了<a href=\"&#39;https://github.com/9468305/python-script/blob/master/geetest_offline/util.py&#39;\">‘https://github.com/9468305/python-script/blob/master/geetest_offline/util.py’</a></p>\n<p>所以那就用呗</p>\n<p>后续就只是涉及到爬虫以及页面跳转的问题了，具体可以看util内的代码</p>\n<p>而且在micro_lib内也可以直接搜索 发送验证的地址改为<a href=\"http://xwqy.gsxt.gov.cn/mirco/micro_lib\" target=\"_blank\" rel=\"noopener\">http://xwqy.gsxt.gov.cn/mirco/micro_lib</a></p>\n<p>并相应修改传入的值即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">organId:100000</span><br><span class=\"line\">textfield:encode后的关键词</span><br><span class=\"line\">fwId:1400</span><br><span class=\"line\">searchOrganId:</span><br><span class=\"line\">channelId:99</span><br><span class=\"line\">captcha:</span><br><span class=\"line\">geetest_challenge:3ef815416f775098fe977004015c619332</span><br><span class=\"line\">geetest_validate:010886ec_0084e_10100077776e</span><br><span class=\"line\">geetest_seccode:010886ec_0084e_10100077776e|jordan</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"restful-api\"><a href=\"#restful-api\" class=\"headerlink\" title=\"restful-api\"></a>restful-api</h3><h4 id=\"已经做了一个api形式的-直接在url内打入关键词即可爬取\"><a href=\"#已经做了一个api形式的-直接在url内打入关键词即可爬取\" class=\"headerlink\" title=\"已经做了一个api形式的 直接在url内打入关键词即可爬取\"></a>已经做了一个api形式的 直接在url内打入关键词即可爬取</h4><h4 id=\"运行步骤\"><a href=\"#运行步骤\" class=\"headerlink\" title=\"运行步骤\"></a>运行步骤</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm run start</span><br><span class=\"line\">curl http://127.0.0.1:4001/公司关键词</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"小微企业查询系统git地址\"><a href=\"#小微企业查询系统git地址\" class=\"headerlink\" title=\"小微企业查询系统git地址\"></a>小微企业查询系统<a href=\"https://github.com/trionfo1993/xwqy-geetest\" target=\"_blank\" rel=\"noopener\">git地址</a></h1><blockquote>\n<p>破解geetest offline的尝试</p>\n</blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近因为有需要对爬取的非上市公司进行一个验证，而绝大多数的非上市公司又都是小微企业，比起爬企业征信系统来说，还是小微企业名录更方便一点</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2><p>基于node.js axios全程破解 无需下载图片 无需模拟轨迹，offline模式就是任性</p>\n<h3 id=\"觉得不错帮忙Star一下啦～\"><a href=\"#觉得不错帮忙Star一下啦～\" class=\"headerlink\" title=\"觉得不错帮忙Star一下啦～\"></a>觉得不错帮忙Star一下啦～</h3><h4 id=\"破解流程\"><a href=\"#破解流程\" class=\"headerlink\" title=\"破解流程\"></a>破解流程</h4><p>首先我们跟着正常获取数据的流程走一遍</p>\n<ol>\n<li>打开<a href=\"http://xwqy.gsxt.gov.cn/\" target=\"_blank\" rel=\"noopener\">小微企业名录</a>并且打开控制台</li>\n</ol>\n<p>可以看到大概有这几个请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://xwqy.gsxt.gov.cn/security/verify_ip</span><br><span class=\"line\">http://xwqy.gsxt.gov.cn/security/verify_keyword</span><br><span class=\"line\">http://xwqy.gsxt.gov.cn/pc-geetest/register?t=1516872325770</span><br></pre></td></tr></table></figure></p>\n<p>查看一下response(当然你熟悉geetest也行)就会发现register就是geetest的初始化请求啦  </p>\n<p><strong>返回值如下</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">challenge:&quot;a1d0c6e83f027327d8461063f4ac58a61c&quot;</span><br><span class=\"line\">gt:&quot;6146190e4171da316dbb5bcc076e2607&quot;</span><br><span class=\"line\">success:0</span><br></pre></td></tr></table></figure></p>\n<p>其中你可以发现success基本都是0 也就是说离线模式</p>\n<h4 id=\"什么是离线模式？\"><a href=\"#什么是离线模式？\" class=\"headerlink\" title=\"什么是离线模式？\"></a>什么是离线模式？</h4><p>基本就是geetest不参与判断的一个状态，验证部分都在前台和中间服务器完成</p>\n<p>回去看之前系统下载的js 会发现两个geetest提供的js  </p>\n<ul>\n<li>geetest.0.0.0.js</li>\n<li>offline.6.0.0.js</li>\n</ul>\n<p>这几个源文件也提供在项目中了</p>\n<ol start=\"2\">\n<li>滑块拼合</li>\n</ol>\n<p>发送了一个新的验证请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://xwqy.gsxt.gov.cn/pc-geetest/validate</span><br><span class=\"line\"></span><br><span class=\"line\">request如下：  </span><br><span class=\"line\"></span><br><span class=\"line\">geetest_challenge:a1d0c6e83f027327d8461063f4ac58a61c</span><br><span class=\"line\">geetest_validate:010886ec_0084e_10100077776e</span><br><span class=\"line\">geetest_seccode:010886ec_0084e_10100077776e|jordan</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"challenge在第一步我们已经获取了，问题是validate怎么获取-同时seccode就是validate加了一个-jordan而已\"><a href=\"#challenge在第一步我们已经获取了，问题是validate怎么获取-同时seccode就是validate加了一个-jordan而已\" class=\"headerlink\" title=\"challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已\"></a>challenge在第一步我们已经获取了，问题是validate怎么获取? 同时seccode就是validate加了一个|jordan而已</h5><p>既然是offline 那就分析offline.js呗</p>\n<p>查看代码就能看到这句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return c &gt;= f - 3 &amp;&amp; c &lt;= f + 3 ? &#123;</span><br><span class=\"line\">            success: !0,</span><br><span class=\"line\">            message: &quot;success&quot;,</span><br><span class=\"line\">            validate: b.A(c, e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand0&quot;, e.c), e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand1&quot;, e.c), e.d.challenge),</span><br><span class=\"line\">            score: Math.round(d / 200)</span><br><span class=\"line\">        &#125; : &#123;success: 0, message: &quot;fail&quot;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这不就是我们要的么！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate: b.A(c, e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand0&quot;, e.c), e.d.challenge) + &quot;_&quot; + b.A(a.b(&quot;rand1&quot;, e.c), e.d.challenge),</span><br></pre></td></tr></table></figure></p>\n<p>offline.6.0.0.js和offline.5.0.0.js可以看出一样是通过密钥 rand rand1进行加密获取一个值，一半来说这种方案就是得依靠收集案例倒推，但是我们是不会重复造轮子的</p>\n<p>github关键词一搜就能发现已经有人整理好了<a href=\"&#39;https://github.com/9468305/python-script/blob/master/geetest_offline/util.py&#39;\">‘https://github.com/9468305/python-script/blob/master/geetest_offline/util.py’</a></p>\n<p>所以那就用呗</p>\n<p>后续就只是涉及到爬虫以及页面跳转的问题了，具体可以看util内的代码</p>\n<p>而且在micro_lib内也可以直接搜索 发送验证的地址改为<a href=\"http://xwqy.gsxt.gov.cn/mirco/micro_lib\" target=\"_blank\" rel=\"noopener\">http://xwqy.gsxt.gov.cn/mirco/micro_lib</a></p>\n<p>并相应修改传入的值即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">organId:100000</span><br><span class=\"line\">textfield:encode后的关键词</span><br><span class=\"line\">fwId:1400</span><br><span class=\"line\">searchOrganId:</span><br><span class=\"line\">channelId:99</span><br><span class=\"line\">captcha:</span><br><span class=\"line\">geetest_challenge:3ef815416f775098fe977004015c619332</span><br><span class=\"line\">geetest_validate:010886ec_0084e_10100077776e</span><br><span class=\"line\">geetest_seccode:010886ec_0084e_10100077776e|jordan</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"restful-api\"><a href=\"#restful-api\" class=\"headerlink\" title=\"restful-api\"></a>restful-api</h3><h4 id=\"已经做了一个api形式的-直接在url内打入关键词即可爬取\"><a href=\"#已经做了一个api形式的-直接在url内打入关键词即可爬取\" class=\"headerlink\" title=\"已经做了一个api形式的 直接在url内打入关键词即可爬取\"></a>已经做了一个api形式的 直接在url内打入关键词即可爬取</h4><h4 id=\"运行步骤\"><a href=\"#运行步骤\" class=\"headerlink\" title=\"运行步骤\"></a>运行步骤</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm run start</span><br><span class=\"line\">curl http://127.0.0.1:4001/公司关键词</span><br></pre></td></tr></table></figure>"},{"title":"情侣日常1","date":"2018-10-23T01:40:02.000Z","_content":"\n![图片](https://wx2.sinaimg.cn/mw690/95fbe0bfgy1fwh9zr01xtj20u00c6qfw.jpg)\n","source":"_posts/情侣日常1.md","raw":"---\ntitle: 情侣日常1\ntags:\n  - 日常\n  - 祉华\ndate: 2018-10-23 09:40:02\ncategories: 祉华\n---\n\n![图片](https://wx2.sinaimg.cn/mw690/95fbe0bfgy1fwh9zr01xtj20u00c6qfw.jpg)\n","slug":"情侣日常1","published":1,"updated":"2018-10-23T01:44:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxi6001sw6il66e5vu7g","content":"<p><img src=\"https://wx2.sinaimg.cn/mw690/95fbe0bfgy1fwh9zr01xtj20u00c6qfw.jpg\" alt=\"图片\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://wx2.sinaimg.cn/mw690/95fbe0bfgy1fwh9zr01xtj20u00c6qfw.jpg\" alt=\"图片\"></p>\n"},{"title":"招与被招的那点事","date":"2019-12-23T13:17:35.000Z","_content":"\n## 前端是什么\n\n记得小学的时候，前端是一件非常容易的事情，那个时候前端只不过是通过 dreamviewer 拖拖拽拽的事，功能也非常的简陋，没有什么 css 标准，浏览器也基本只有 ie6，上了大学以后，前端也不过就是各个后端程序员扔回前台的界面而已，那会前端大概真的只能被称为切图仔吧\n\n## 现在的面试\n\n从业那么久，已经经历过数不清的面试与被面试了，目前看了下来，其实也无非这几个方面\n\n- 框架的使用\n- 框架的生命周期\n- 一些常用的 api\n- 一些布局类型\n- 手写 Promise，原型链是什么\n- 等等等\n\n## 那么如何评价一个人呢\n\n### 首先看目的\n\n招人，面试，最重要的就是需要招到一个合适的人才，能够匹配到当前所需要的岗位上，所以首先要看目标岗位  \n对应着阿里的`p级`一般前端的岗位分了这么几种\n\n#### 基础的技术岗\n\n> 能够根据相关的需求，在一定的协作下还原出页面\n\n这也是前端最基本的要求，能够大概理解整个业务要求，能够看得懂`ued`或者自己能够基本设计出一套界面，满足产品的需要，差不多需要的技能列表大概是\n\n- 文档能力，能够看得懂，有问题能够问出来\n- js 的能力，将逻辑转换成代码的能力，不够优雅没关系，能够完成即可，以能够回答一些常见的错误来进行判定，或者以一些逻辑/实例来判断\n- css 的能力，简单修改样式，基本上，能够熟悉盒模型，背景，各类优先级即可\n- dom 的能力，了解 dom 事件是什么，dom 和 js 之间的关系，能够使用即可\n- 熟悉库，熟悉一些组件\n\n#### 高级的技术岗\n\n> 能够独立完成一个项目的开发\n\n高级一些的前端技术岗位，相比普通工程师，更加看中独立思考，和逻辑抽象能力，在这个基础上，和小组成员配合，完成项目  \n相比之前的还要多一些能力 例如\n\n- 沟通能力，良好的沟通才能保证团队之间的交流顺畅\n- 英文文档能力，你会发现，还是有很多好东西是在`gayhub`上的，能基本理解就好了\n- 抽象能力，这个时候，为了复用，简单逻辑，会将一些肯定通用的部分，进行划分，做到`高内聚，低耦合`，在面试中，一般体现为，设计组件\n- Promise，原型链，浏览器绘制等原理，这一些是为了保证在出现问题的时候，能够更好的进行定位问题所在，问题出现原因，比较常见，一般直接说原理\n- 库的原理，绑定方式，是否看过源码，这里主要还是为了了解是否有过对原理性进行了解，一般提高自己的水平一种是靠不停的积累项目，另一种就是看别人的优秀的源代码，一般流行的东西能火起来，总是有一定道理的\n\n#### 架构岗\n\n> 我也没达到这个目标系列\n\n架构师相比高程，主要看中的就是全局观了，你不仅仅是为了自己的模块，为了自己的业务负责，更加是为了其他人一起写的人一起爽而负责\n\n写代码，就会遇到很多问题，比如\n\n- 编辑器不一样\n- 代码风格不一样\n- 喜欢的语言不一样\n- 能够理解业务的方式不一样\n- anything\n\n作为架构师，就应该拥有相应的解决方案，能够让团队有一个最大的平衡，能够干的事，包括但不限于\n\n- 文件路径规划，一个两个一目了然的文件路径，自身就能说明很多东西\n- 统一的代码格式规范，能够兼容`vscode`和`webstorm`等等编译器，保证大家的代码风格一致，eslint，prettier 等你值得拥有\n- 良好的文档风格，不仅你要看得懂，更加要别人也看得懂才对\n- 信心，要让下面的人能够诚心的信服\n\n当然，这些也只是初步想法，也欢迎有对应的补充\n","source":"_posts/招与被招的那点事.md","raw":"---\ntitle: 招与被招的那点事\ntags:\n  - 可以公开的情报\n  - 前端\ndate: 2019-12-23 21:17:35\ncategories: 所思所想\n---\n\n## 前端是什么\n\n记得小学的时候，前端是一件非常容易的事情，那个时候前端只不过是通过 dreamviewer 拖拖拽拽的事，功能也非常的简陋，没有什么 css 标准，浏览器也基本只有 ie6，上了大学以后，前端也不过就是各个后端程序员扔回前台的界面而已，那会前端大概真的只能被称为切图仔吧\n\n## 现在的面试\n\n从业那么久，已经经历过数不清的面试与被面试了，目前看了下来，其实也无非这几个方面\n\n- 框架的使用\n- 框架的生命周期\n- 一些常用的 api\n- 一些布局类型\n- 手写 Promise，原型链是什么\n- 等等等\n\n## 那么如何评价一个人呢\n\n### 首先看目的\n\n招人，面试，最重要的就是需要招到一个合适的人才，能够匹配到当前所需要的岗位上，所以首先要看目标岗位  \n对应着阿里的`p级`一般前端的岗位分了这么几种\n\n#### 基础的技术岗\n\n> 能够根据相关的需求，在一定的协作下还原出页面\n\n这也是前端最基本的要求，能够大概理解整个业务要求，能够看得懂`ued`或者自己能够基本设计出一套界面，满足产品的需要，差不多需要的技能列表大概是\n\n- 文档能力，能够看得懂，有问题能够问出来\n- js 的能力，将逻辑转换成代码的能力，不够优雅没关系，能够完成即可，以能够回答一些常见的错误来进行判定，或者以一些逻辑/实例来判断\n- css 的能力，简单修改样式，基本上，能够熟悉盒模型，背景，各类优先级即可\n- dom 的能力，了解 dom 事件是什么，dom 和 js 之间的关系，能够使用即可\n- 熟悉库，熟悉一些组件\n\n#### 高级的技术岗\n\n> 能够独立完成一个项目的开发\n\n高级一些的前端技术岗位，相比普通工程师，更加看中独立思考，和逻辑抽象能力，在这个基础上，和小组成员配合，完成项目  \n相比之前的还要多一些能力 例如\n\n- 沟通能力，良好的沟通才能保证团队之间的交流顺畅\n- 英文文档能力，你会发现，还是有很多好东西是在`gayhub`上的，能基本理解就好了\n- 抽象能力，这个时候，为了复用，简单逻辑，会将一些肯定通用的部分，进行划分，做到`高内聚，低耦合`，在面试中，一般体现为，设计组件\n- Promise，原型链，浏览器绘制等原理，这一些是为了保证在出现问题的时候，能够更好的进行定位问题所在，问题出现原因，比较常见，一般直接说原理\n- 库的原理，绑定方式，是否看过源码，这里主要还是为了了解是否有过对原理性进行了解，一般提高自己的水平一种是靠不停的积累项目，另一种就是看别人的优秀的源代码，一般流行的东西能火起来，总是有一定道理的\n\n#### 架构岗\n\n> 我也没达到这个目标系列\n\n架构师相比高程，主要看中的就是全局观了，你不仅仅是为了自己的模块，为了自己的业务负责，更加是为了其他人一起写的人一起爽而负责\n\n写代码，就会遇到很多问题，比如\n\n- 编辑器不一样\n- 代码风格不一样\n- 喜欢的语言不一样\n- 能够理解业务的方式不一样\n- anything\n\n作为架构师，就应该拥有相应的解决方案，能够让团队有一个最大的平衡，能够干的事，包括但不限于\n\n- 文件路径规划，一个两个一目了然的文件路径，自身就能说明很多东西\n- 统一的代码格式规范，能够兼容`vscode`和`webstorm`等等编译器，保证大家的代码风格一致，eslint，prettier 等你值得拥有\n- 良好的文档风格，不仅你要看得懂，更加要别人也看得懂才对\n- 信心，要让下面的人能够诚心的信服\n\n当然，这些也只是初步想法，也欢迎有对应的补充\n","slug":"招与被招的那点事","published":1,"updated":"2019-12-23T13:53:51.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxi9001ww6ilgpxpbhjs","content":"<h2 id=\"前端是什么\"><a href=\"#前端是什么\" class=\"headerlink\" title=\"前端是什么\"></a>前端是什么</h2><p>记得小学的时候，前端是一件非常容易的事情，那个时候前端只不过是通过 dreamviewer 拖拖拽拽的事，功能也非常的简陋，没有什么 css 标准，浏览器也基本只有 ie6，上了大学以后，前端也不过就是各个后端程序员扔回前台的界面而已，那会前端大概真的只能被称为切图仔吧</p>\n<h2 id=\"现在的面试\"><a href=\"#现在的面试\" class=\"headerlink\" title=\"现在的面试\"></a>现在的面试</h2><p>从业那么久，已经经历过数不清的面试与被面试了，目前看了下来，其实也无非这几个方面</p>\n<ul>\n<li>框架的使用</li>\n<li>框架的生命周期</li>\n<li>一些常用的 api</li>\n<li>一些布局类型</li>\n<li>手写 Promise，原型链是什么</li>\n<li>等等等</li>\n</ul>\n<h2 id=\"那么如何评价一个人呢\"><a href=\"#那么如何评价一个人呢\" class=\"headerlink\" title=\"那么如何评价一个人呢\"></a>那么如何评价一个人呢</h2><h3 id=\"首先看目的\"><a href=\"#首先看目的\" class=\"headerlink\" title=\"首先看目的\"></a>首先看目的</h3><p>招人，面试，最重要的就是需要招到一个合适的人才，能够匹配到当前所需要的岗位上，所以首先要看目标岗位<br>对应着阿里的<code>p级</code>一般前端的岗位分了这么几种</p>\n<h4 id=\"基础的技术岗\"><a href=\"#基础的技术岗\" class=\"headerlink\" title=\"基础的技术岗\"></a>基础的技术岗</h4><blockquote>\n<p>能够根据相关的需求，在一定的协作下还原出页面</p>\n</blockquote>\n<p>这也是前端最基本的要求，能够大概理解整个业务要求，能够看得懂<code>ued</code>或者自己能够基本设计出一套界面，满足产品的需要，差不多需要的技能列表大概是</p>\n<ul>\n<li>文档能力，能够看得懂，有问题能够问出来</li>\n<li>js 的能力，将逻辑转换成代码的能力，不够优雅没关系，能够完成即可，以能够回答一些常见的错误来进行判定，或者以一些逻辑/实例来判断</li>\n<li>css 的能力，简单修改样式，基本上，能够熟悉盒模型，背景，各类优先级即可</li>\n<li>dom 的能力，了解 dom 事件是什么，dom 和 js 之间的关系，能够使用即可</li>\n<li>熟悉库，熟悉一些组件</li>\n</ul>\n<h4 id=\"高级的技术岗\"><a href=\"#高级的技术岗\" class=\"headerlink\" title=\"高级的技术岗\"></a>高级的技术岗</h4><blockquote>\n<p>能够独立完成一个项目的开发</p>\n</blockquote>\n<p>高级一些的前端技术岗位，相比普通工程师，更加看中独立思考，和逻辑抽象能力，在这个基础上，和小组成员配合，完成项目<br>相比之前的还要多一些能力 例如</p>\n<ul>\n<li>沟通能力，良好的沟通才能保证团队之间的交流顺畅</li>\n<li>英文文档能力，你会发现，还是有很多好东西是在<code>gayhub</code>上的，能基本理解就好了</li>\n<li>抽象能力，这个时候，为了复用，简单逻辑，会将一些肯定通用的部分，进行划分，做到<code>高内聚，低耦合</code>，在面试中，一般体现为，设计组件</li>\n<li>Promise，原型链，浏览器绘制等原理，这一些是为了保证在出现问题的时候，能够更好的进行定位问题所在，问题出现原因，比较常见，一般直接说原理</li>\n<li>库的原理，绑定方式，是否看过源码，这里主要还是为了了解是否有过对原理性进行了解，一般提高自己的水平一种是靠不停的积累项目，另一种就是看别人的优秀的源代码，一般流行的东西能火起来，总是有一定道理的</li>\n</ul>\n<h4 id=\"架构岗\"><a href=\"#架构岗\" class=\"headerlink\" title=\"架构岗\"></a>架构岗</h4><blockquote>\n<p>我也没达到这个目标系列</p>\n</blockquote>\n<p>架构师相比高程，主要看中的就是全局观了，你不仅仅是为了自己的模块，为了自己的业务负责，更加是为了其他人一起写的人一起爽而负责</p>\n<p>写代码，就会遇到很多问题，比如</p>\n<ul>\n<li>编辑器不一样</li>\n<li>代码风格不一样</li>\n<li>喜欢的语言不一样</li>\n<li>能够理解业务的方式不一样</li>\n<li>anything</li>\n</ul>\n<p>作为架构师，就应该拥有相应的解决方案，能够让团队有一个最大的平衡，能够干的事，包括但不限于</p>\n<ul>\n<li>文件路径规划，一个两个一目了然的文件路径，自身就能说明很多东西</li>\n<li>统一的代码格式规范，能够兼容<code>vscode</code>和<code>webstorm</code>等等编译器，保证大家的代码风格一致，eslint，prettier 等你值得拥有</li>\n<li>良好的文档风格，不仅你要看得懂，更加要别人也看得懂才对</li>\n<li>信心，要让下面的人能够诚心的信服</li>\n</ul>\n<p>当然，这些也只是初步想法，也欢迎有对应的补充</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前端是什么\"><a href=\"#前端是什么\" class=\"headerlink\" title=\"前端是什么\"></a>前端是什么</h2><p>记得小学的时候，前端是一件非常容易的事情，那个时候前端只不过是通过 dreamviewer 拖拖拽拽的事，功能也非常的简陋，没有什么 css 标准，浏览器也基本只有 ie6，上了大学以后，前端也不过就是各个后端程序员扔回前台的界面而已，那会前端大概真的只能被称为切图仔吧</p>\n<h2 id=\"现在的面试\"><a href=\"#现在的面试\" class=\"headerlink\" title=\"现在的面试\"></a>现在的面试</h2><p>从业那么久，已经经历过数不清的面试与被面试了，目前看了下来，其实也无非这几个方面</p>\n<ul>\n<li>框架的使用</li>\n<li>框架的生命周期</li>\n<li>一些常用的 api</li>\n<li>一些布局类型</li>\n<li>手写 Promise，原型链是什么</li>\n<li>等等等</li>\n</ul>\n<h2 id=\"那么如何评价一个人呢\"><a href=\"#那么如何评价一个人呢\" class=\"headerlink\" title=\"那么如何评价一个人呢\"></a>那么如何评价一个人呢</h2><h3 id=\"首先看目的\"><a href=\"#首先看目的\" class=\"headerlink\" title=\"首先看目的\"></a>首先看目的</h3><p>招人，面试，最重要的就是需要招到一个合适的人才，能够匹配到当前所需要的岗位上，所以首先要看目标岗位<br>对应着阿里的<code>p级</code>一般前端的岗位分了这么几种</p>\n<h4 id=\"基础的技术岗\"><a href=\"#基础的技术岗\" class=\"headerlink\" title=\"基础的技术岗\"></a>基础的技术岗</h4><blockquote>\n<p>能够根据相关的需求，在一定的协作下还原出页面</p>\n</blockquote>\n<p>这也是前端最基本的要求，能够大概理解整个业务要求，能够看得懂<code>ued</code>或者自己能够基本设计出一套界面，满足产品的需要，差不多需要的技能列表大概是</p>\n<ul>\n<li>文档能力，能够看得懂，有问题能够问出来</li>\n<li>js 的能力，将逻辑转换成代码的能力，不够优雅没关系，能够完成即可，以能够回答一些常见的错误来进行判定，或者以一些逻辑/实例来判断</li>\n<li>css 的能力，简单修改样式，基本上，能够熟悉盒模型，背景，各类优先级即可</li>\n<li>dom 的能力，了解 dom 事件是什么，dom 和 js 之间的关系，能够使用即可</li>\n<li>熟悉库，熟悉一些组件</li>\n</ul>\n<h4 id=\"高级的技术岗\"><a href=\"#高级的技术岗\" class=\"headerlink\" title=\"高级的技术岗\"></a>高级的技术岗</h4><blockquote>\n<p>能够独立完成一个项目的开发</p>\n</blockquote>\n<p>高级一些的前端技术岗位，相比普通工程师，更加看中独立思考，和逻辑抽象能力，在这个基础上，和小组成员配合，完成项目<br>相比之前的还要多一些能力 例如</p>\n<ul>\n<li>沟通能力，良好的沟通才能保证团队之间的交流顺畅</li>\n<li>英文文档能力，你会发现，还是有很多好东西是在<code>gayhub</code>上的，能基本理解就好了</li>\n<li>抽象能力，这个时候，为了复用，简单逻辑，会将一些肯定通用的部分，进行划分，做到<code>高内聚，低耦合</code>，在面试中，一般体现为，设计组件</li>\n<li>Promise，原型链，浏览器绘制等原理，这一些是为了保证在出现问题的时候，能够更好的进行定位问题所在，问题出现原因，比较常见，一般直接说原理</li>\n<li>库的原理，绑定方式，是否看过源码，这里主要还是为了了解是否有过对原理性进行了解，一般提高自己的水平一种是靠不停的积累项目，另一种就是看别人的优秀的源代码，一般流行的东西能火起来，总是有一定道理的</li>\n</ul>\n<h4 id=\"架构岗\"><a href=\"#架构岗\" class=\"headerlink\" title=\"架构岗\"></a>架构岗</h4><blockquote>\n<p>我也没达到这个目标系列</p>\n</blockquote>\n<p>架构师相比高程，主要看中的就是全局观了，你不仅仅是为了自己的模块，为了自己的业务负责，更加是为了其他人一起写的人一起爽而负责</p>\n<p>写代码，就会遇到很多问题，比如</p>\n<ul>\n<li>编辑器不一样</li>\n<li>代码风格不一样</li>\n<li>喜欢的语言不一样</li>\n<li>能够理解业务的方式不一样</li>\n<li>anything</li>\n</ul>\n<p>作为架构师，就应该拥有相应的解决方案，能够让团队有一个最大的平衡，能够干的事，包括但不限于</p>\n<ul>\n<li>文件路径规划，一个两个一目了然的文件路径，自身就能说明很多东西</li>\n<li>统一的代码格式规范，能够兼容<code>vscode</code>和<code>webstorm</code>等等编译器，保证大家的代码风格一致，eslint，prettier 等你值得拥有</li>\n<li>良好的文档风格，不仅你要看得懂，更加要别人也看得懂才对</li>\n<li>信心，要让下面的人能够诚心的信服</li>\n</ul>\n<p>当然，这些也只是初步想法，也欢迎有对应的补充</p>\n"},{"title":"教你如何构建Mojave动态壁纸","date":"2018-10-16T05:46:10.000Z","header_image":"https://www.apple.com/macos/mojave/overview/hero/image_medium_2x.jpg","_content":"# Mojave动态壁纸\n> OSX Mojave发布带来了黑暗模式，众多改进，其中一个功能就在能够根据你当地所处的时间，动态切换系统背景\n\n## 动态壁纸\n大家都知道，apple得益于自身的封闭特性，拥有众多自身所特有的特殊格式，这次的动态背景其实就是依托于背后的**Heic**格式\n\n### Heic格式\n如果你使用过apple的live photo 就会发现其导出的格式就是heic, 这其实就是一个类似一个短视频的格式，利用它， 我们将多张照片以及他们的时区等信息直接整合，输出成一张heic图片，就能提供给Mojave使用了\n\n## 开始构建吧\n### 工具篇\n关于工具，已经有人在github上开源了相关的构建脚本，不过请注意，只有Mac可以使用哦   [工具地址](https://github.com/mczachurski/wallpapper)\n![](https://github.com/mczachurski/wallpapper/raw/master/Images/wallpaper.png)\n\n### 开始\n#### 安装工具\n工具有两种安装模式 **Homebrew** 以及 github安装，当然 如果你新装了系统，有些Xcode功能需要重新安装, 请先安装xcode-select并且输入```sudo xcode-select -s /Applications/Xcode.app/Contents/Developer ```\n##### Homebrew\n打开你的命令行输入\n```bash\nbrew tap mczachurski/wallpapper\nbrew install wallpapper\n```\n\n##### github安装\n打开你的命令行，输入\n```bash\ngit clone https://github.com/mczachurski/wallpapper.git\ncd wallpapper\nswift build --configuration release\nsudo cp .build/x86_64-apple-macosx10.10/release/wallpapper /usr/local/bin\n```\n注意 如果你用的swift4.1请编辑Package.swift\n\n#### 测试工具是否可用\n和大多数软件一样```wallpapper -h```\n然后你会看到\n```\nwallpapper: [command_option] -i inputFile\nCommand options are:\n -h\t\t\tshow this message and exit\n -o\t\t\toutput file name (default is 'output.heic')\n -i\t\t\tinput file name, json file with wallpaper description\n```\n\n#### 构建\n前面所题，我们需要配置一些照片，并且配置每张照片的信息，所以新建一个json文件，内容类似\n```json\n[\n  {\n    \"fileName\": \"1.png\",\n    \"isPrimary\": true,\n    \"isForLight\": true,\n    \"isForDark\": false,\n    \"altitude\": 27.95,\n    \"azimuth\": 279.66\n  },\n  {\n    \"fileName\": \"2.png\",\n    \"isPrimary\": false,\n    \"isForLight\": false,\n    \"isForDark\": false,\n    \"altitude\": -31.05,\n    \"azimuth\": 4.16\n  },\n  {\n    \"fileName\": \"16.png\",\n    \"isPrimary\": false,\n    \"isForLight\": false,\n    \"isForDark\": true,\n    \"altitude\": -28.63,\n    \"azimuth\": 340.41\n  }\n]\n```\n##### 属性解释\n* fileName - 文件名，对应的图片名字\n* isPrimary - 是否是主图，heic的预览图就是他了，只能有一个\n* isForLight - 如果设置为trure，将显示在该壁纸的静态模式（白天）中\n* isForDark - 同上，不过是黑暗模式\n* altitude - 太阳和时间相关\n* azimuth - 太阳和时间相关\naltitude和azimuth可以在[https://keisan.casio.com/exec/system/1224682277](https://keisan.casio.com/exec/system/1224682277)之中获取，填入对应时间对应的值即可\n\n#### 生成\n```wallpapper -i <your_json_name>.json``` 之后你就能获得一个output.heic啦，将背景壁纸设置成他就行～\n","source":"_posts/教你如何构建Mojave动态壁纸.md","raw":"---\ntitle: 教你如何构建Mojave动态壁纸\ndate: 2018-10-16 13:46:10\ntags: \n    - OSX\n    - mojave\n    - 动态壁纸\n    - 教程\ncategories: 可以公开的情报\nheader_image: https://www.apple.com/macos/mojave/overview/hero/image_medium_2x.jpg\n---\n# Mojave动态壁纸\n> OSX Mojave发布带来了黑暗模式，众多改进，其中一个功能就在能够根据你当地所处的时间，动态切换系统背景\n\n## 动态壁纸\n大家都知道，apple得益于自身的封闭特性，拥有众多自身所特有的特殊格式，这次的动态背景其实就是依托于背后的**Heic**格式\n\n### Heic格式\n如果你使用过apple的live photo 就会发现其导出的格式就是heic, 这其实就是一个类似一个短视频的格式，利用它， 我们将多张照片以及他们的时区等信息直接整合，输出成一张heic图片，就能提供给Mojave使用了\n\n## 开始构建吧\n### 工具篇\n关于工具，已经有人在github上开源了相关的构建脚本，不过请注意，只有Mac可以使用哦   [工具地址](https://github.com/mczachurski/wallpapper)\n![](https://github.com/mczachurski/wallpapper/raw/master/Images/wallpaper.png)\n\n### 开始\n#### 安装工具\n工具有两种安装模式 **Homebrew** 以及 github安装，当然 如果你新装了系统，有些Xcode功能需要重新安装, 请先安装xcode-select并且输入```sudo xcode-select -s /Applications/Xcode.app/Contents/Developer ```\n##### Homebrew\n打开你的命令行输入\n```bash\nbrew tap mczachurski/wallpapper\nbrew install wallpapper\n```\n\n##### github安装\n打开你的命令行，输入\n```bash\ngit clone https://github.com/mczachurski/wallpapper.git\ncd wallpapper\nswift build --configuration release\nsudo cp .build/x86_64-apple-macosx10.10/release/wallpapper /usr/local/bin\n```\n注意 如果你用的swift4.1请编辑Package.swift\n\n#### 测试工具是否可用\n和大多数软件一样```wallpapper -h```\n然后你会看到\n```\nwallpapper: [command_option] -i inputFile\nCommand options are:\n -h\t\t\tshow this message and exit\n -o\t\t\toutput file name (default is 'output.heic')\n -i\t\t\tinput file name, json file with wallpaper description\n```\n\n#### 构建\n前面所题，我们需要配置一些照片，并且配置每张照片的信息，所以新建一个json文件，内容类似\n```json\n[\n  {\n    \"fileName\": \"1.png\",\n    \"isPrimary\": true,\n    \"isForLight\": true,\n    \"isForDark\": false,\n    \"altitude\": 27.95,\n    \"azimuth\": 279.66\n  },\n  {\n    \"fileName\": \"2.png\",\n    \"isPrimary\": false,\n    \"isForLight\": false,\n    \"isForDark\": false,\n    \"altitude\": -31.05,\n    \"azimuth\": 4.16\n  },\n  {\n    \"fileName\": \"16.png\",\n    \"isPrimary\": false,\n    \"isForLight\": false,\n    \"isForDark\": true,\n    \"altitude\": -28.63,\n    \"azimuth\": 340.41\n  }\n]\n```\n##### 属性解释\n* fileName - 文件名，对应的图片名字\n* isPrimary - 是否是主图，heic的预览图就是他了，只能有一个\n* isForLight - 如果设置为trure，将显示在该壁纸的静态模式（白天）中\n* isForDark - 同上，不过是黑暗模式\n* altitude - 太阳和时间相关\n* azimuth - 太阳和时间相关\naltitude和azimuth可以在[https://keisan.casio.com/exec/system/1224682277](https://keisan.casio.com/exec/system/1224682277)之中获取，填入对应时间对应的值即可\n\n#### 生成\n```wallpapper -i <your_json_name>.json``` 之后你就能获得一个output.heic啦，将背景壁纸设置成他就行～\n","slug":"教你如何构建Mojave动态壁纸","published":1,"updated":"2018-10-16T06:17:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxia001yw6ilfk1uxbru","content":"<h1 id=\"Mojave动态壁纸\"><a href=\"#Mojave动态壁纸\" class=\"headerlink\" title=\"Mojave动态壁纸\"></a>Mojave动态壁纸</h1><blockquote>\n<p>OSX Mojave发布带来了黑暗模式，众多改进，其中一个功能就在能够根据你当地所处的时间，动态切换系统背景</p>\n</blockquote>\n<h2 id=\"动态壁纸\"><a href=\"#动态壁纸\" class=\"headerlink\" title=\"动态壁纸\"></a>动态壁纸</h2><p>大家都知道，apple得益于自身的封闭特性，拥有众多自身所特有的特殊格式，这次的动态背景其实就是依托于背后的<strong>Heic</strong>格式</p>\n<h3 id=\"Heic格式\"><a href=\"#Heic格式\" class=\"headerlink\" title=\"Heic格式\"></a>Heic格式</h3><p>如果你使用过apple的live photo 就会发现其导出的格式就是heic, 这其实就是一个类似一个短视频的格式，利用它， 我们将多张照片以及他们的时区等信息直接整合，输出成一张heic图片，就能提供给Mojave使用了</p>\n<h2 id=\"开始构建吧\"><a href=\"#开始构建吧\" class=\"headerlink\" title=\"开始构建吧\"></a>开始构建吧</h2><h3 id=\"工具篇\"><a href=\"#工具篇\" class=\"headerlink\" title=\"工具篇\"></a>工具篇</h3><p>关于工具，已经有人在github上开源了相关的构建脚本，不过请注意，只有Mac可以使用哦   <a href=\"https://github.com/mczachurski/wallpapper\" target=\"_blank\" rel=\"noopener\">工具地址</a><br><img src=\"https://github.com/mczachurski/wallpapper/raw/master/Images/wallpaper.png\" alt></p>\n<h3 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h3><h4 id=\"安装工具\"><a href=\"#安装工具\" class=\"headerlink\" title=\"安装工具\"></a>安装工具</h4><p>工具有两种安装模式 <strong>Homebrew</strong> 以及 github安装，当然 如果你新装了系统，有些Xcode功能需要重新安装, 请先安装xcode-select并且输入<figure class=\"highlight plain\"><figcaption><span>xcode-select -s</span><a href=\"/Applications/Xcode.app/Contents/Developer\">```</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##### Homebrew</span><br><span class=\"line\">打开你的命令行输入</span><br><span class=\"line\">```bash</span><br><span class=\"line\">brew tap mczachurski/wallpapper</span><br><span class=\"line\">brew install wallpapper</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"github安装\"><a href=\"#github安装\" class=\"headerlink\" title=\"github安装\"></a>github安装</h5><p>打开你的命令行，输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mczachurski/wallpapper.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> wallpapper</span><br><span class=\"line\">swift build --configuration release</span><br><span class=\"line\">sudo cp .build/x86_64-apple-macosx10.10/release/wallpapper /usr/<span class=\"built_in\">local</span>/bin</span><br></pre></td></tr></table></figure></p>\n<p>注意 如果你用的swift4.1请编辑Package.swift</p>\n<h4 id=\"测试工具是否可用\"><a href=\"#测试工具是否可用\" class=\"headerlink\" title=\"测试工具是否可用\"></a>测试工具是否可用</h4><p>和大多数软件一样<figure class=\"highlight plain\"><figcaption><span>-h```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">然后你会看到</span><br></pre></td></tr></table></figure></p>\n<p>wallpapper: [command_option] -i inputFile<br>Command options are:<br> -h            show this message and exit<br> -o            output file name (default is ‘output.heic’)<br> -i            input file name, json file with wallpaper description<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 构建</span><br><span class=\"line\">前面所题，我们需要配置一些照片，并且配置每张照片的信息，所以新建一个json文件，内容类似</span><br><span class=\"line\">```json</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;1.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: true,</span><br><span class=\"line\">    &quot;isForLight&quot;: true,</span><br><span class=\"line\">    &quot;isForDark&quot;: false,</span><br><span class=\"line\">    &quot;altitude&quot;: 27.95,</span><br><span class=\"line\">    &quot;azimuth&quot;: 279.66</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;2.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: false,</span><br><span class=\"line\">    &quot;isForLight&quot;: false,</span><br><span class=\"line\">    &quot;isForDark&quot;: false,</span><br><span class=\"line\">    &quot;altitude&quot;: -31.05,</span><br><span class=\"line\">    &quot;azimuth&quot;: 4.16</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;16.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: false,</span><br><span class=\"line\">    &quot;isForLight&quot;: false,</span><br><span class=\"line\">    &quot;isForDark&quot;: true,</span><br><span class=\"line\">    &quot;altitude&quot;: -28.63,</span><br><span class=\"line\">    &quot;azimuth&quot;: 340.41</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"属性解释\"><a href=\"#属性解释\" class=\"headerlink\" title=\"属性解释\"></a>属性解释</h5><ul>\n<li>fileName - 文件名，对应的图片名字</li>\n<li>isPrimary - 是否是主图，heic的预览图就是他了，只能有一个</li>\n<li>isForLight - 如果设置为trure，将显示在该壁纸的静态模式（白天）中</li>\n<li>isForDark - 同上，不过是黑暗模式</li>\n<li>altitude - 太阳和时间相关</li>\n<li>azimuth - 太阳和时间相关<br>altitude和azimuth可以在<a href=\"https://keisan.casio.com/exec/system/1224682277\" target=\"_blank\" rel=\"noopener\">https://keisan.casio.com/exec/system/1224682277</a>之中获取，填入对应时间对应的值即可</li>\n</ul>\n<h4 id=\"生成\"><a href=\"#生成\" class=\"headerlink\" title=\"生成\"></a>生成</h4><p><code>wallpapper -i &lt;your_json_name&gt;.json</code> 之后你就能获得一个output.heic啦，将背景壁纸设置成他就行～</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mojave动态壁纸\"><a href=\"#Mojave动态壁纸\" class=\"headerlink\" title=\"Mojave动态壁纸\"></a>Mojave动态壁纸</h1><blockquote>\n<p>OSX Mojave发布带来了黑暗模式，众多改进，其中一个功能就在能够根据你当地所处的时间，动态切换系统背景</p>\n</blockquote>\n<h2 id=\"动态壁纸\"><a href=\"#动态壁纸\" class=\"headerlink\" title=\"动态壁纸\"></a>动态壁纸</h2><p>大家都知道，apple得益于自身的封闭特性，拥有众多自身所特有的特殊格式，这次的动态背景其实就是依托于背后的<strong>Heic</strong>格式</p>\n<h3 id=\"Heic格式\"><a href=\"#Heic格式\" class=\"headerlink\" title=\"Heic格式\"></a>Heic格式</h3><p>如果你使用过apple的live photo 就会发现其导出的格式就是heic, 这其实就是一个类似一个短视频的格式，利用它， 我们将多张照片以及他们的时区等信息直接整合，输出成一张heic图片，就能提供给Mojave使用了</p>\n<h2 id=\"开始构建吧\"><a href=\"#开始构建吧\" class=\"headerlink\" title=\"开始构建吧\"></a>开始构建吧</h2><h3 id=\"工具篇\"><a href=\"#工具篇\" class=\"headerlink\" title=\"工具篇\"></a>工具篇</h3><p>关于工具，已经有人在github上开源了相关的构建脚本，不过请注意，只有Mac可以使用哦   <a href=\"https://github.com/mczachurski/wallpapper\" target=\"_blank\" rel=\"noopener\">工具地址</a><br><img src=\"https://github.com/mczachurski/wallpapper/raw/master/Images/wallpaper.png\" alt></p>\n<h3 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h3><h4 id=\"安装工具\"><a href=\"#安装工具\" class=\"headerlink\" title=\"安装工具\"></a>安装工具</h4><p>工具有两种安装模式 <strong>Homebrew</strong> 以及 github安装，当然 如果你新装了系统，有些Xcode功能需要重新安装, 请先安装xcode-select并且输入<figure class=\"highlight plain\"><figcaption><span>xcode-select -s</span><a href=\"/Applications/Xcode.app/Contents/Developer\">```</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##### Homebrew</span><br><span class=\"line\">打开你的命令行输入</span><br><span class=\"line\">```bash</span><br><span class=\"line\">brew tap mczachurski/wallpapper</span><br><span class=\"line\">brew install wallpapper</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"github安装\"><a href=\"#github安装\" class=\"headerlink\" title=\"github安装\"></a>github安装</h5><p>打开你的命令行，输入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/mczachurski/wallpapper.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> wallpapper</span><br><span class=\"line\">swift build --configuration release</span><br><span class=\"line\">sudo cp .build/x86_64-apple-macosx10.10/release/wallpapper /usr/<span class=\"built_in\">local</span>/bin</span><br></pre></td></tr></table></figure></p>\n<p>注意 如果你用的swift4.1请编辑Package.swift</p>\n<h4 id=\"测试工具是否可用\"><a href=\"#测试工具是否可用\" class=\"headerlink\" title=\"测试工具是否可用\"></a>测试工具是否可用</h4><p>和大多数软件一样<figure class=\"highlight plain\"><figcaption><span>-h```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">然后你会看到</span><br></pre></td></tr></table></figure></p>\n<p>wallpapper: [command_option] -i inputFile<br>Command options are:<br> -h            show this message and exit<br> -o            output file name (default is ‘output.heic’)<br> -i            input file name, json file with wallpaper description<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#### 构建</span><br><span class=\"line\">前面所题，我们需要配置一些照片，并且配置每张照片的信息，所以新建一个json文件，内容类似</span><br><span class=\"line\">```json</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;1.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: true,</span><br><span class=\"line\">    &quot;isForLight&quot;: true,</span><br><span class=\"line\">    &quot;isForDark&quot;: false,</span><br><span class=\"line\">    &quot;altitude&quot;: 27.95,</span><br><span class=\"line\">    &quot;azimuth&quot;: 279.66</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;2.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: false,</span><br><span class=\"line\">    &quot;isForLight&quot;: false,</span><br><span class=\"line\">    &quot;isForDark&quot;: false,</span><br><span class=\"line\">    &quot;altitude&quot;: -31.05,</span><br><span class=\"line\">    &quot;azimuth&quot;: 4.16</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;fileName&quot;: &quot;16.png&quot;,</span><br><span class=\"line\">    &quot;isPrimary&quot;: false,</span><br><span class=\"line\">    &quot;isForLight&quot;: false,</span><br><span class=\"line\">    &quot;isForDark&quot;: true,</span><br><span class=\"line\">    &quot;altitude&quot;: -28.63,</span><br><span class=\"line\">    &quot;azimuth&quot;: 340.41</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"属性解释\"><a href=\"#属性解释\" class=\"headerlink\" title=\"属性解释\"></a>属性解释</h5><ul>\n<li>fileName - 文件名，对应的图片名字</li>\n<li>isPrimary - 是否是主图，heic的预览图就是他了，只能有一个</li>\n<li>isForLight - 如果设置为trure，将显示在该壁纸的静态模式（白天）中</li>\n<li>isForDark - 同上，不过是黑暗模式</li>\n<li>altitude - 太阳和时间相关</li>\n<li>azimuth - 太阳和时间相关<br>altitude和azimuth可以在<a href=\"https://keisan.casio.com/exec/system/1224682277\" target=\"_blank\" rel=\"noopener\">https://keisan.casio.com/exec/system/1224682277</a>之中获取，填入对应时间对应的值即可</li>\n</ul>\n<h4 id=\"生成\"><a href=\"#生成\" class=\"headerlink\" title=\"生成\"></a>生成</h4><p><code>wallpapper -i &lt;your_json_name&gt;.json</code> 之后你就能获得一个output.heic啦，将背景壁纸设置成他就行～</p>\n"},{"title":"文字超过x行后补上省略号的几种办法","date":"2019-10-18T04:11:57.000Z","_content":"\n# 文字超过 x 行后补上省略号的几种办法\n\n[原文](https://css-tricks.com/line-clampin/)\n\n简单来说，在 pc 端，文字过长溢出的话，溢出的部分会被替换成`...`,然而在显示情况中，更多的是在超过 x 行之后才启用这个特性，例如\n\n```html\n<div class=\"module\">\n  <p>\n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames\n    ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget,\n    tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n    ultricies mi vitae est. Mauris placerat eleifend leo.\n  </p>\n</div>\n```\n\n最终希望三行之后到这种效果![](https://css-tricks.com/wp-content/uploads/2013/05/clamped.png)\n\n为了演示，我们先定义基础的 css，剩下的方法都在这个 css 的基础之上\n\n```css\n.module {\n  width: 250px;\n  overflow: hidden;\n}\n```\n\n## Weird WebKit Flexbox Way\n\n使用 webkit 内置的方案\n\n```css\n.line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n```\n\n这种方案只有 webkit 内核的浏览器支持，在使用上遇到一个问题，就是 autoprefixer 会移除`-webkit-box-orient: vertical;`\n所以我们需要增加个注释\n\n```css\n.line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  /* autoprefixer: ignore next */\n  -webkit-box-orient: vertical;\n}\n```\n\n## The Opera Overflow Way\n\nOpera 浏览器的方案，和 webkit 差不多\n\n```css\n.line-clamp {\n  height: 3.6em; /* 1em为1个line-height的高度，这里表示3行 */\n  text-overflow: -o-ellipsis-lastline;\n}\n```\n\n## The Clamp.js Way\n\n使用 Clamp.js\n\n```javascript\nvar module = document.getElementById(\"clamp-this-module\");\n\n$clamp(module, { clamp: 3 });\n```\n\n建议包裹在`<p id=\"clamp-this-module\"></p>`中保证 firefox 正常使用\n\n# 以下是原文的几种显示方案\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Line Clampin'\" src=\"https://codepen.io/chriscoyier/embed/iBtep?height=265&theme-id=0&default-tab=js,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/chriscoyier/pen/iBtep'>Line Clampin'</a> by Chris Coyier \n  (<a href='https://codepen.io/chriscoyier'>@chriscoyier</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n","source":"_posts/文字超过x行后补上省略号的几种办法.md","raw":"---\ntitle: 文字超过x行后补上省略号的几种办法\ntags:\n  - 前端\n  - 经验\n  - 超过x行\n  - 省略号\n  - overflow\ndate: 2019-10-18 12:11:57\ncategories: 可以公开的情报\n---\n\n# 文字超过 x 行后补上省略号的几种办法\n\n[原文](https://css-tricks.com/line-clampin/)\n\n简单来说，在 pc 端，文字过长溢出的话，溢出的部分会被替换成`...`,然而在显示情况中，更多的是在超过 x 行之后才启用这个特性，例如\n\n```html\n<div class=\"module\">\n  <p>\n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames\n    ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget,\n    tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean\n    ultricies mi vitae est. Mauris placerat eleifend leo.\n  </p>\n</div>\n```\n\n最终希望三行之后到这种效果![](https://css-tricks.com/wp-content/uploads/2013/05/clamped.png)\n\n为了演示，我们先定义基础的 css，剩下的方法都在这个 css 的基础之上\n\n```css\n.module {\n  width: 250px;\n  overflow: hidden;\n}\n```\n\n## Weird WebKit Flexbox Way\n\n使用 webkit 内置的方案\n\n```css\n.line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n}\n```\n\n这种方案只有 webkit 内核的浏览器支持，在使用上遇到一个问题，就是 autoprefixer 会移除`-webkit-box-orient: vertical;`\n所以我们需要增加个注释\n\n```css\n.line-clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  /* autoprefixer: ignore next */\n  -webkit-box-orient: vertical;\n}\n```\n\n## The Opera Overflow Way\n\nOpera 浏览器的方案，和 webkit 差不多\n\n```css\n.line-clamp {\n  height: 3.6em; /* 1em为1个line-height的高度，这里表示3行 */\n  text-overflow: -o-ellipsis-lastline;\n}\n```\n\n## The Clamp.js Way\n\n使用 Clamp.js\n\n```javascript\nvar module = document.getElementById(\"clamp-this-module\");\n\n$clamp(module, { clamp: 3 });\n```\n\n建议包裹在`<p id=\"clamp-this-module\"></p>`中保证 firefox 正常使用\n\n# 以下是原文的几种显示方案\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Line Clampin'\" src=\"https://codepen.io/chriscoyier/embed/iBtep?height=265&theme-id=0&default-tab=js,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/chriscoyier/pen/iBtep'>Line Clampin'</a> by Chris Coyier \n  (<a href='https://codepen.io/chriscoyier'>@chriscoyier</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n","slug":"文字超过x行后补上省略号的几种办法","published":1,"updated":"2019-10-18T07:53:29.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxid0023w6ilh7gn46ni","content":"<h1 id=\"文字超过-x-行后补上省略号的几种办法\"><a href=\"#文字超过-x-行后补上省略号的几种办法\" class=\"headerlink\" title=\"文字超过 x 行后补上省略号的几种办法\"></a>文字超过 x 行后补上省略号的几种办法</h1><p><a href=\"https://css-tricks.com/line-clampin/\" target=\"_blank\" rel=\"noopener\">原文</a></p>\n<p>简单来说，在 pc 端，文字过长溢出的话，溢出的部分会被替换成<code>...</code>,然而在显示情况中，更多的是在超过 x 行之后才启用这个特性，例如</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"module\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    Pellentesque habitant morbi tristique senectus et netus et malesuada fames</span><br><span class=\"line\">    ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget,</span><br><span class=\"line\">    tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean</span><br><span class=\"line\">    ultricies mi vitae est. Mauris placerat eleifend leo.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最终希望三行之后到这种效果<img src=\"https://css-tricks.com/wp-content/uploads/2013/05/clamped.png\" alt></p>\n<p>为了演示，我们先定义基础的 css，剩下的方法都在这个 css 的基础之上</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.module</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Weird-WebKit-Flexbox-Way\"><a href=\"#Weird-WebKit-Flexbox-Way\" class=\"headerlink\" title=\"Weird WebKit Flexbox Way\"></a>Weird WebKit Flexbox Way</h2><p>使用 webkit 内置的方案</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种方案只有 webkit 内核的浏览器支持，在使用上遇到一个问题，就是 autoprefixer 会移除<code>-webkit-box-orient: vertical;</code><br>所以我们需要增加个注释</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* autoprefixer: ignore next */</span></span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"The-Opera-Overflow-Way\"><a href=\"#The-Opera-Overflow-Way\" class=\"headerlink\" title=\"The Opera Overflow Way\"></a>The Opera Overflow Way</h2><p>Opera 浏览器的方案，和 webkit 差不多</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">3.6em</span>; <span class=\"comment\">/* 1em为1个line-height的高度，这里表示3行 */</span></span><br><span class=\"line\">  <span class=\"attribute\">text-overflow</span>: -o-ellipsis-lastline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"The-Clamp-js-Way\"><a href=\"#The-Clamp-js-Way\" class=\"headerlink\" title=\"The Clamp.js Way\"></a>The Clamp.js Way</h2><p>使用 Clamp.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">module</span> = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clamp-this-module\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$clamp(<span class=\"built_in\">module</span>, &#123; <span class=\"attr\">clamp</span>: <span class=\"number\">3</span> &#125;);</span><br></pre></td></tr></table></figure>\n<p>建议包裹在<code>&lt;p id=&quot;clamp-this-module&quot;&gt;&lt;/p&gt;</code>中保证 firefox 正常使用</p>\n<h1 id=\"以下是原文的几种显示方案\"><a href=\"#以下是原文的几种显示方案\" class=\"headerlink\" title=\"以下是原文的几种显示方案\"></a>以下是原文的几种显示方案</h1><iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Line Clampin'\" src=\"https://codepen.io/chriscoyier/embed/iBtep?height=265&theme-id=0&default-tab=js,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\"><br>  See the Pen <a href=\"https://codepen.io/chriscoyier/pen/iBtep\" target=\"_blank\" rel=\"noopener\">Line Clampin’</a> by Chris Coyier<br>  (<a href=\"https://codepen.io/chriscoyier\" target=\"_blank\" rel=\"noopener\">@chriscoyier</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.<br></iframe>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"文字超过-x-行后补上省略号的几种办法\"><a href=\"#文字超过-x-行后补上省略号的几种办法\" class=\"headerlink\" title=\"文字超过 x 行后补上省略号的几种办法\"></a>文字超过 x 行后补上省略号的几种办法</h1><p><a href=\"https://css-tricks.com/line-clampin/\" target=\"_blank\" rel=\"noopener\">原文</a></p>\n<p>简单来说，在 pc 端，文字过长溢出的话，溢出的部分会被替换成<code>...</code>,然而在显示情况中，更多的是在超过 x 行之后才启用这个特性，例如</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"module\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    Pellentesque habitant morbi tristique senectus et netus et malesuada fames</span><br><span class=\"line\">    ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget,</span><br><span class=\"line\">    tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean</span><br><span class=\"line\">    ultricies mi vitae est. Mauris placerat eleifend leo.</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最终希望三行之后到这种效果<img src=\"https://css-tricks.com/wp-content/uploads/2013/05/clamped.png\" alt></p>\n<p>为了演示，我们先定义基础的 css，剩下的方法都在这个 css 的基础之上</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.module</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">250px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Weird-WebKit-Flexbox-Way\"><a href=\"#Weird-WebKit-Flexbox-Way\" class=\"headerlink\" title=\"Weird WebKit Flexbox Way\"></a>Weird WebKit Flexbox Way</h2><p>使用 webkit 内置的方案</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这种方案只有 webkit 内核的浏览器支持，在使用上遇到一个问题，就是 autoprefixer 会移除<code>-webkit-box-orient: vertical;</code><br>所以我们需要增加个注释</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* autoprefixer: ignore next */</span></span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"The-Opera-Overflow-Way\"><a href=\"#The-Opera-Overflow-Way\" class=\"headerlink\" title=\"The Opera Overflow Way\"></a>The Opera Overflow Way</h2><p>Opera 浏览器的方案，和 webkit 差不多</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.line-clamp</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">3.6em</span>; <span class=\"comment\">/* 1em为1个line-height的高度，这里表示3行 */</span></span><br><span class=\"line\">  <span class=\"attribute\">text-overflow</span>: -o-ellipsis-lastline;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"The-Clamp-js-Way\"><a href=\"#The-Clamp-js-Way\" class=\"headerlink\" title=\"The Clamp.js Way\"></a>The Clamp.js Way</h2><p>使用 Clamp.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"built_in\">module</span> = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"clamp-this-module\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">$clamp(<span class=\"built_in\">module</span>, &#123; <span class=\"attr\">clamp</span>: <span class=\"number\">3</span> &#125;);</span><br></pre></td></tr></table></figure>\n<p>建议包裹在<code>&lt;p id=&quot;clamp-this-module&quot;&gt;&lt;/p&gt;</code>中保证 firefox 正常使用</p>\n<h1 id=\"以下是原文的几种显示方案\"><a href=\"#以下是原文的几种显示方案\" class=\"headerlink\" title=\"以下是原文的几种显示方案\"></a>以下是原文的几种显示方案</h1><iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"Line Clampin'\" src=\"https://codepen.io/chriscoyier/embed/iBtep?height=265&theme-id=0&default-tab=js,result\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\"><br>  See the Pen <a href=\"https://codepen.io/chriscoyier/pen/iBtep\" target=\"_blank\" rel=\"noopener\">Line Clampin’</a> by Chris Coyier<br>  (<a href=\"https://codepen.io/chriscoyier\" target=\"_blank\" rel=\"noopener\">@chriscoyier</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.<br></iframe>\n"},{"title":"有关前端和pdf相关的几件事","date":"2019-04-10T05:46:10.000Z","_content":"# 有关前端和pdf相关的几件事\n\n> pdf（Portable Document Format的简称，意为“便携式文档格式”）\n\n前端工作中，也避免不了要和pdf打交道，以下列一些相关的信息\n\n## 预览pdf的方法\n\n### 通过浏览器自己的能力\n1. 直接```<a href=\"pdf地址\" >```打开新的页面\n2. iframe/object ```<iframe src=\"pdf地址\">```\n3. embed ```<embed :src=\"previewUrl\" type=\"application/pdf\"```\n\n以上几种方法都存在[跨域](https://segmentfault.com/a/1190000015597029)问题  \n当然其中pdf浏览器的样式都是浏览器自带的，如果想要自定义，可能会比较无力\n\n### 通过相关的库\n1. [pdfobject](https://pdfobject.com/) 其实也是基于embed方案的\n2. [pdf.js](https://mozilla.github.io/pdf.js/) pdfjs适用于自定义显示方案的，但是依赖webworker，兼容性可能不行\n\n#### pdf.js\npdf.js 如果是通过npm安装的话，可能会遇到import相关的问题，这个时候改用```pdfjs-dist/webpack```就可以正常引入啦，不过包比较大，还是建议使用cdn\n\n## 生成pdf的方法\n有通过前端/后端等多种方法，生成的pdf也分为纯图片/文字+图片的类型\n### 通过后端\n1. [puppeteer](https://github.com/GoogleChrome/puppeteer/blob/v1.14.0/docs/api.md) 无头浏览器，网页生成pdf\n2. jsPdf + html2canvas, 页面生成图片之后扔进jsPdf中\n3. jsPdf, 纯js方案生成，缺点是需要自己计算每个元素的位置\n4. [pdfmake](http://pdfmake.org/#/) 通过定义js对象来进行pdf,缺点是引入字体包导致整个依赖比较大，体验上比较好\n","source":"_posts/有关前端和pdf相关的几件事.md","raw":"---\ntitle: 有关前端和pdf相关的几件事\ndate: 2019-04-10 13:46:10\ntags: \n    - javascript\n    - pdf\n    - 教程\ncategories: 可以公开的情报\n---\n# 有关前端和pdf相关的几件事\n\n> pdf（Portable Document Format的简称，意为“便携式文档格式”）\n\n前端工作中，也避免不了要和pdf打交道，以下列一些相关的信息\n\n## 预览pdf的方法\n\n### 通过浏览器自己的能力\n1. 直接```<a href=\"pdf地址\" >```打开新的页面\n2. iframe/object ```<iframe src=\"pdf地址\">```\n3. embed ```<embed :src=\"previewUrl\" type=\"application/pdf\"```\n\n以上几种方法都存在[跨域](https://segmentfault.com/a/1190000015597029)问题  \n当然其中pdf浏览器的样式都是浏览器自带的，如果想要自定义，可能会比较无力\n\n### 通过相关的库\n1. [pdfobject](https://pdfobject.com/) 其实也是基于embed方案的\n2. [pdf.js](https://mozilla.github.io/pdf.js/) pdfjs适用于自定义显示方案的，但是依赖webworker，兼容性可能不行\n\n#### pdf.js\npdf.js 如果是通过npm安装的话，可能会遇到import相关的问题，这个时候改用```pdfjs-dist/webpack```就可以正常引入啦，不过包比较大，还是建议使用cdn\n\n## 生成pdf的方法\n有通过前端/后端等多种方法，生成的pdf也分为纯图片/文字+图片的类型\n### 通过后端\n1. [puppeteer](https://github.com/GoogleChrome/puppeteer/blob/v1.14.0/docs/api.md) 无头浏览器，网页生成pdf\n2. jsPdf + html2canvas, 页面生成图片之后扔进jsPdf中\n3. jsPdf, 纯js方案生成，缺点是需要自己计算每个元素的位置\n4. [pdfmake](http://pdfmake.org/#/) 通过定义js对象来进行pdf,缺点是引入字体包导致整个依赖比较大，体验上比较好\n","slug":"有关前端和pdf相关的几件事","published":1,"updated":"2019-04-11T03:04:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxie0025w6ilsafqkf8f","content":"<h1 id=\"有关前端和pdf相关的几件事\"><a href=\"#有关前端和pdf相关的几件事\" class=\"headerlink\" title=\"有关前端和pdf相关的几件事\"></a>有关前端和pdf相关的几件事</h1><blockquote>\n<p>pdf（Portable Document Format的简称，意为“便携式文档格式”）</p>\n</blockquote>\n<p>前端工作中，也避免不了要和pdf打交道，以下列一些相关的信息</p>\n<h2 id=\"预览pdf的方法\"><a href=\"#预览pdf的方法\" class=\"headerlink\" title=\"预览pdf的方法\"></a>预览pdf的方法</h2><h3 id=\"通过浏览器自己的能力\"><a href=\"#通过浏览器自己的能力\" class=\"headerlink\" title=\"通过浏览器自己的能力\"></a>通过浏览器自己的能力</h3><ol>\n<li><p>直接<figure class=\"highlight plain\"><figcaption><span>href</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. iframe/object ```&lt;iframe src=&quot;pdf地址&quot;&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li><p>embed <code>&lt;embed :src=&quot;previewUrl&quot; type=&quot;application/pdf&quot;</code></p>\n</li>\n</ol>\n<p>以上几种方法都存在<a href=\"https://segmentfault.com/a/1190000015597029\" target=\"_blank\" rel=\"noopener\">跨域</a>问题<br>当然其中pdf浏览器的样式都是浏览器自带的，如果想要自定义，可能会比较无力</p>\n<h3 id=\"通过相关的库\"><a href=\"#通过相关的库\" class=\"headerlink\" title=\"通过相关的库\"></a>通过相关的库</h3><ol>\n<li><a href=\"https://pdfobject.com/\" target=\"_blank\" rel=\"noopener\">pdfobject</a> 其实也是基于embed方案的</li>\n<li><a href=\"https://mozilla.github.io/pdf.js/\" target=\"_blank\" rel=\"noopener\">pdf.js</a> pdfjs适用于自定义显示方案的，但是依赖webworker，兼容性可能不行</li>\n</ol>\n<h4 id=\"pdf-js\"><a href=\"#pdf-js\" class=\"headerlink\" title=\"pdf.js\"></a>pdf.js</h4><p>pdf.js 如果是通过npm安装的话，可能会遇到import相关的问题，这个时候改用<code>pdfjs-dist/webpack</code>就可以正常引入啦，不过包比较大，还是建议使用cdn</p>\n<h2 id=\"生成pdf的方法\"><a href=\"#生成pdf的方法\" class=\"headerlink\" title=\"生成pdf的方法\"></a>生成pdf的方法</h2><p>有通过前端/后端等多种方法，生成的pdf也分为纯图片/文字+图片的类型</p>\n<h3 id=\"通过后端\"><a href=\"#通过后端\" class=\"headerlink\" title=\"通过后端\"></a>通过后端</h3><ol>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer/blob/v1.14.0/docs/api.md\" target=\"_blank\" rel=\"noopener\">puppeteer</a> 无头浏览器，网页生成pdf</li>\n<li>jsPdf + html2canvas, 页面生成图片之后扔进jsPdf中</li>\n<li>jsPdf, 纯js方案生成，缺点是需要自己计算每个元素的位置</li>\n<li><a href=\"http://pdfmake.org/#/\" target=\"_blank\" rel=\"noopener\">pdfmake</a> 通过定义js对象来进行pdf,缺点是引入字体包导致整个依赖比较大，体验上比较好</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"有关前端和pdf相关的几件事\"><a href=\"#有关前端和pdf相关的几件事\" class=\"headerlink\" title=\"有关前端和pdf相关的几件事\"></a>有关前端和pdf相关的几件事</h1><blockquote>\n<p>pdf（Portable Document Format的简称，意为“便携式文档格式”）</p>\n</blockquote>\n<p>前端工作中，也避免不了要和pdf打交道，以下列一些相关的信息</p>\n<h2 id=\"预览pdf的方法\"><a href=\"#预览pdf的方法\" class=\"headerlink\" title=\"预览pdf的方法\"></a>预览pdf的方法</h2><h3 id=\"通过浏览器自己的能力\"><a href=\"#通过浏览器自己的能力\" class=\"headerlink\" title=\"通过浏览器自己的能力\"></a>通过浏览器自己的能力</h3><ol>\n<li><p>直接<figure class=\"highlight plain\"><figcaption><span>href</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2. iframe/object ```&lt;iframe src=&quot;pdf地址&quot;&gt;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li><p>embed <code>&lt;embed :src=&quot;previewUrl&quot; type=&quot;application/pdf&quot;</code></p>\n</li>\n</ol>\n<p>以上几种方法都存在<a href=\"https://segmentfault.com/a/1190000015597029\" target=\"_blank\" rel=\"noopener\">跨域</a>问题<br>当然其中pdf浏览器的样式都是浏览器自带的，如果想要自定义，可能会比较无力</p>\n<h3 id=\"通过相关的库\"><a href=\"#通过相关的库\" class=\"headerlink\" title=\"通过相关的库\"></a>通过相关的库</h3><ol>\n<li><a href=\"https://pdfobject.com/\" target=\"_blank\" rel=\"noopener\">pdfobject</a> 其实也是基于embed方案的</li>\n<li><a href=\"https://mozilla.github.io/pdf.js/\" target=\"_blank\" rel=\"noopener\">pdf.js</a> pdfjs适用于自定义显示方案的，但是依赖webworker，兼容性可能不行</li>\n</ol>\n<h4 id=\"pdf-js\"><a href=\"#pdf-js\" class=\"headerlink\" title=\"pdf.js\"></a>pdf.js</h4><p>pdf.js 如果是通过npm安装的话，可能会遇到import相关的问题，这个时候改用<code>pdfjs-dist/webpack</code>就可以正常引入啦，不过包比较大，还是建议使用cdn</p>\n<h2 id=\"生成pdf的方法\"><a href=\"#生成pdf的方法\" class=\"headerlink\" title=\"生成pdf的方法\"></a>生成pdf的方法</h2><p>有通过前端/后端等多种方法，生成的pdf也分为纯图片/文字+图片的类型</p>\n<h3 id=\"通过后端\"><a href=\"#通过后端\" class=\"headerlink\" title=\"通过后端\"></a>通过后端</h3><ol>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer/blob/v1.14.0/docs/api.md\" target=\"_blank\" rel=\"noopener\">puppeteer</a> 无头浏览器，网页生成pdf</li>\n<li>jsPdf + html2canvas, 页面生成图片之后扔进jsPdf中</li>\n<li>jsPdf, 纯js方案生成，缺点是需要自己计算每个元素的位置</li>\n<li><a href=\"http://pdfmake.org/#/\" target=\"_blank\" rel=\"noopener\">pdfmake</a> 通过定义js对象来进行pdf,缺点是引入字体包导致整个依赖比较大，体验上比较好</li>\n</ol>\n"},{"title":"常用正则","date":"2019-07-12T10:17:35.000Z","_content":"\n# 正则大全 ![](https://img.shields.io/badge/状态-积极更新-673ab7.svg) ![](https://img.shields.io/badge/已收录-47条-4caf50.svg) ![](https://img.shields.io/badge/license-MIT-F44336.svg)\n\n:whale:图形界面: https://any86.github.io/any-rule/\n\n## html 注释\n\n```javascript\n/<!--(.*?)-->$/;\n```\n\n## md5 格式(32 位)\n\n```javascript\n/^[a-f0-9]{32}$/;\n```\n\n## 版本号格式必须为 X.Y.Z\n\n```javascript\n/^\\d+(\\.\\d+){2}$/;\n```\n\n## 视频链接地址（视频格式可按需增删）\n\n```javascript\n/^https?:\\/\\/.*?(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4)$/i;\n```\n\n## 图片链接地址（图片格式可按需增删）\n\n```javascript\n/^https?:\\/\\/.*?(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif)$/i;\n```\n\n## 24 小时制时间（HH:mm:ss）\n\n```javascript\n/^((?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$)/;\n```\n\n## 12 小时制时间（hh:mm:ss）\n\n```javascript\n/^(1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/;\n```\n\n## base64 格式\n\n```javascript\n/^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\n```\n\n## 数字/货币金额（支持负数、千分位分隔符）\n\n```javascript\n/(^[-]?[1-9]\\d{0,2}($|(,\\d{3})*($|(\\.\\d{1,2}$))))|((^[0](\\.\\d{1,2})?)|(^[-][0]\\.\\d{1,2}))$/;\n```\n\n## 数字/货币金额 (只支持正数、不支持校验千分位分隔符)\n\n```javascript\n/(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/;\n```\n\n## 银行卡号（16 或 19 位）\n\n```javascript\n/^([1-9]{1})(\\d{15}|\\d{18})$/;\n```\n\n## 中文姓名\n\n```javascript\n/^([\\u4e00-\\u9fa5·]{2,16})$/;\n```\n\n## 英文姓名\n\n```javascript\n/(^[a-zA-Z]{1}[a-zA-Z\\s]{0,20}[a-zA-Z]{1}$)/;\n```\n\n## 新能源车牌号\n\n```javascript\n/[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$/;\n```\n\n## 非新能源车牌号\n\n```javascript\n/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n```\n\n## 车牌号(新能源+非新能源)\n\n```javascript\n/^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]{4})))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/;\n```\n\n## URL 链接(网址)\n\n```javascript\n/^((https?|ftp|file):\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})(\\/\\w\\.-]*)*\\/?/;\n```\n\n## 手机号(严谨), 根据工信部 2019 年最新公布的手机号段\n\n```javascript\n/^1((3[\\d])|(4[5,6,7,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[\\d])|(9[1,8,9]))\\d{8}$/;\n```\n\n## 手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可\n\n```javascript\n/^1[3-9]\\d{9}$/;\n```\n\n## 手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\n\n```javascript\n/^1\\d{10}$/;\n```\n\n## 日期, 如: 2000-01-01 或 2000-1-1\n\n```javascript\n/^\\d{4}(-)([0-1][0-2]|\\d)\\1([0-2]\\d|\\d|30|31)$/;\n```\n\n## email 地址\n\n```javascript\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n```\n\n## 国内座机电话,如: 0341-86091234\n\n```javascript\n/\\d{3}-\\d{8}|\\d{4}-\\d{7}/;\n```\n\n## 一代身份证号(15 位数字)\n\n```javascript\n/^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$/;\n```\n\n## 二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X\n\n```javascript\n/^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$/;\n```\n\n## 身份证号, 支持 1/2 代(15 位/18 位数字)\n\n```javascript\n/(^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$)|(^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$)/;\n```\n\n## 护照（包含香港、澳门）\n\n```javascript\n/(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/;\n```\n\n## 帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合\n\n```javascript\n/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/;\n```\n\n## 纯中文/汉字\n\n```javascript\n/^[\\u4E00-\\u9FA5]+$/;\n```\n\n## 是否小数\n\n```javascript\n/^\\d+\\.\\d+$/;\n```\n\n## 电话(座机)\n\n```javascript\n/^0\\d{2,3}-\\d{7,8}$/;\n```\n\n## 纯数字\n\n```javascript\n/^\\d{1,}$/;\n```\n\n## 是否 html 标签\n\n```javascript\n/<(.*)>.*<\\/\\1>|<(.*) \\/>/;\n```\n\n## 是否 qq 号格式正确\n\n```javascript\n/^[1-9][0-9]{4,10}$/;\n```\n\n## 是否由数字和字母组成\n\n```javascript\n/^[A-Za-z0-9]+$/;\n```\n\n## 纯英文字母\n\n```javascript\n/^[a-zA-Z]+$/;\n```\n\n## 纯小写英文字母组成\n\n```javascript\n/^[a-z]+$/;\n```\n\n## 纯大写英文字母\n\n```javascript\n/^[A-Z]+$/;\n```\n\n## 密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符\n\n```javascript\n/^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n```\n\n## 用户名正则，4 到 16 位（字母，数字，下划线，减号）\n\n```javascript\n/^[a-zA-Z0-9_-]{4,16}$/;\n```\n\n## ip-v4\n\n```javascript\n/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n```\n\n## ip-v6\n\n```javascript\n/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i;\n```\n\n## 16 进制颜色\n\n```javascript\n/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n```\n\n## 微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线\n\n```javascript\n/^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/;\n```\n\n## 中国邮政编码\n\n```javascript\n/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/;\n```\n\n## 只包含中文和数字\n\n```javascript\n/^(([\\u4E00-\\u9FA5])|(\\d))+$/;\n```\n\n## 非字母\n\n```javascript\n/[^A-Za-z]$/;\n```\n","source":"_posts/正则.md","raw":"---\ntitle: 常用正则\ntags:\n  - 可以公开的情报\n  - 开发\n  - 前端\ndate: 2019-07-12 18:17:35\ncategories: 前端\n---\n\n# 正则大全 ![](https://img.shields.io/badge/状态-积极更新-673ab7.svg) ![](https://img.shields.io/badge/已收录-47条-4caf50.svg) ![](https://img.shields.io/badge/license-MIT-F44336.svg)\n\n:whale:图形界面: https://any86.github.io/any-rule/\n\n## html 注释\n\n```javascript\n/<!--(.*?)-->$/;\n```\n\n## md5 格式(32 位)\n\n```javascript\n/^[a-f0-9]{32}$/;\n```\n\n## 版本号格式必须为 X.Y.Z\n\n```javascript\n/^\\d+(\\.\\d+){2}$/;\n```\n\n## 视频链接地址（视频格式可按需增删）\n\n```javascript\n/^https?:\\/\\/.*?(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4)$/i;\n```\n\n## 图片链接地址（图片格式可按需增删）\n\n```javascript\n/^https?:\\/\\/.*?(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif)$/i;\n```\n\n## 24 小时制时间（HH:mm:ss）\n\n```javascript\n/^((?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$)/;\n```\n\n## 12 小时制时间（hh:mm:ss）\n\n```javascript\n/^(1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/;\n```\n\n## base64 格式\n\n```javascript\n/^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\n```\n\n## 数字/货币金额（支持负数、千分位分隔符）\n\n```javascript\n/(^[-]?[1-9]\\d{0,2}($|(,\\d{3})*($|(\\.\\d{1,2}$))))|((^[0](\\.\\d{1,2})?)|(^[-][0]\\.\\d{1,2}))$/;\n```\n\n## 数字/货币金额 (只支持正数、不支持校验千分位分隔符)\n\n```javascript\n/(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/;\n```\n\n## 银行卡号（16 或 19 位）\n\n```javascript\n/^([1-9]{1})(\\d{15}|\\d{18})$/;\n```\n\n## 中文姓名\n\n```javascript\n/^([\\u4e00-\\u9fa5·]{2,16})$/;\n```\n\n## 英文姓名\n\n```javascript\n/(^[a-zA-Z]{1}[a-zA-Z\\s]{0,20}[a-zA-Z]{1}$)/;\n```\n\n## 新能源车牌号\n\n```javascript\n/[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$/;\n```\n\n## 非新能源车牌号\n\n```javascript\n/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n```\n\n## 车牌号(新能源+非新能源)\n\n```javascript\n/^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF]([A-HJ-NP-Z0-9])[0-9]{4})))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/;\n```\n\n## URL 链接(网址)\n\n```javascript\n/^((https?|ftp|file):\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})(\\/\\w\\.-]*)*\\/?/;\n```\n\n## 手机号(严谨), 根据工信部 2019 年最新公布的手机号段\n\n```javascript\n/^1((3[\\d])|(4[5,6,7,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[\\d])|(9[1,8,9]))\\d{8}$/;\n```\n\n## 手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可\n\n```javascript\n/^1[3-9]\\d{9}$/;\n```\n\n## 手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\n\n```javascript\n/^1\\d{10}$/;\n```\n\n## 日期, 如: 2000-01-01 或 2000-1-1\n\n```javascript\n/^\\d{4}(-)([0-1][0-2]|\\d)\\1([0-2]\\d|\\d|30|31)$/;\n```\n\n## email 地址\n\n```javascript\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n```\n\n## 国内座机电话,如: 0341-86091234\n\n```javascript\n/\\d{3}-\\d{8}|\\d{4}-\\d{7}/;\n```\n\n## 一代身份证号(15 位数字)\n\n```javascript\n/^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$/;\n```\n\n## 二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X\n\n```javascript\n/^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$/;\n```\n\n## 身份证号, 支持 1/2 代(15 位/18 位数字)\n\n```javascript\n/(^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$)|(^\\d{6}(18|19|20)\\d{2}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$)/;\n```\n\n## 护照（包含香港、澳门）\n\n```javascript\n/(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/;\n```\n\n## 帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合\n\n```javascript\n/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/;\n```\n\n## 纯中文/汉字\n\n```javascript\n/^[\\u4E00-\\u9FA5]+$/;\n```\n\n## 是否小数\n\n```javascript\n/^\\d+\\.\\d+$/;\n```\n\n## 电话(座机)\n\n```javascript\n/^0\\d{2,3}-\\d{7,8}$/;\n```\n\n## 纯数字\n\n```javascript\n/^\\d{1,}$/;\n```\n\n## 是否 html 标签\n\n```javascript\n/<(.*)>.*<\\/\\1>|<(.*) \\/>/;\n```\n\n## 是否 qq 号格式正确\n\n```javascript\n/^[1-9][0-9]{4,10}$/;\n```\n\n## 是否由数字和字母组成\n\n```javascript\n/^[A-Za-z0-9]+$/;\n```\n\n## 纯英文字母\n\n```javascript\n/^[a-zA-Z]+$/;\n```\n\n## 纯小写英文字母组成\n\n```javascript\n/^[a-z]+$/;\n```\n\n## 纯大写英文字母\n\n```javascript\n/^[A-Z]+$/;\n```\n\n## 密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符\n\n```javascript\n/^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n```\n\n## 用户名正则，4 到 16 位（字母，数字，下划线，减号）\n\n```javascript\n/^[a-zA-Z0-9_-]{4,16}$/;\n```\n\n## ip-v4\n\n```javascript\n/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n```\n\n## ip-v6\n\n```javascript\n/^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i;\n```\n\n## 16 进制颜色\n\n```javascript\n/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n```\n\n## 微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线\n\n```javascript\n/^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/;\n```\n\n## 中国邮政编码\n\n```javascript\n/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/;\n```\n\n## 只包含中文和数字\n\n```javascript\n/^(([\\u4E00-\\u9FA5])|(\\d))+$/;\n```\n\n## 非字母\n\n```javascript\n/[^A-Za-z]$/;\n```\n","slug":"正则","published":1,"updated":"2019-07-12T03:05:47.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxig002aw6ilk0ua8rod","content":"<h1 id=\"正则大全\"><a href=\"#正则大全\" class=\"headerlink\" title=\"正则大全   \"></a>正则大全 <img src=\"https://img.shields.io/badge/状态-积极更新-673ab7.svg\" alt> <img src=\"https://img.shields.io/badge/已收录-47条-4caf50.svg\" alt> <img src=\"https://img.shields.io/badge/license-MIT-F44336.svg\" alt></h1><p>:whale:图形界面: <a href=\"https://any86.github.io/any-rule/\" target=\"_blank\" rel=\"noopener\">https://any86.github.io/any-rule/</a></p>\n<h2 id=\"html-注释\"><a href=\"#html-注释\" class=\"headerlink\" title=\"html 注释\"></a>html 注释</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"xml\"><span class=\"comment\">&lt;!--(.*?)--&gt;</span>$/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"md5-格式-32-位\"><a href=\"#md5-格式-32-位\" class=\"headerlink\" title=\"md5 格式(32 位)\"></a>md5 格式(32 位)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-f0<span class=\"number\">-9</span>]&#123;<span class=\"number\">32</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"版本号格式必须为-X-Y-Z\"><a href=\"#版本号格式必须为-X-Y-Z\" class=\"headerlink\" title=\"版本号格式必须为 X.Y.Z\"></a>版本号格式必须为 X.Y.Z</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+(\\.\\d+)&#123;<span class=\"number\">2</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"视频链接地址（视频格式可按需增删）\"><a href=\"#视频链接地址（视频格式可按需增删）\" class=\"headerlink\" title=\"视频链接地址（视频格式可按需增删）\"></a>视频链接地址（视频格式可按需增删）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^https?:\\/\\/.*?(swf|avi|flv|mpg|rm|mov|wav|asf|<span class=\"number\">3</span>gp|mkv|rmvb|mp4)$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"图片链接地址（图片格式可按需增删）\"><a href=\"#图片链接地址（图片格式可按需增删）\" class=\"headerlink\" title=\"图片链接地址（图片格式可按需增删）\"></a>图片链接地址（图片格式可按需增删）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^https?:\\/\\/.*?(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif)$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"24-小时制时间（HH-mm-ss）\"><a href=\"#24-小时制时间（HH-mm-ss）\" class=\"headerlink\" title=\"24 小时制时间（HH:mm:ss）\"></a>24 小时制时间（HH:mm:ss）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((?:[<span class=\"number\">01</span>]\\d|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-3</span>]):[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d:[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-小时制时间（hh-mm-ss）\"><a href=\"#12-小时制时间（hh-mm-ss）\" class=\"headerlink\" title=\"12 小时制时间（hh:mm:ss）\"></a>12 小时制时间（hh:mm:ss）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]|<span class=\"number\">0</span>?[<span class=\"number\">1</span><span class=\"number\">-9</span>]):[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d:[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"base64-格式\"><a href=\"#base64-格式\" class=\"headerlink\" title=\"base64 格式\"></a>base64 格式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\s*data:([a-z]+\\/[a-z0<span class=\"number\">-9</span>-+.]+(;[a-z-]+=[a-z0<span class=\"number\">-9</span>-]+)?)?(;base64)?,([a-z0<span class=\"number\">-9</span>!$&amp;<span class=\"string\">',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数字-货币金额（支持负数、千分位分隔符）\"><a href=\"#数字-货币金额（支持负数、千分位分隔符）\" class=\"headerlink\" title=\"数字/货币金额（支持负数、千分位分隔符）\"></a>数字/货币金额（支持负数、千分位分隔符）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[-]?[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\d&#123;<span class=\"number\">0</span>,<span class=\"number\">2</span>&#125;($|(,\\d&#123;<span class=\"number\">3</span>&#125;)*($|(\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;$))))|((^[<span class=\"number\">0</span>](\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?)|(^[-][<span class=\"number\">0</span>]\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字-货币金额-只支持正数、不支持校验千分位分隔符\"><a href=\"#数字-货币金额-只支持正数、不支持校验千分位分隔符\" class=\"headerlink\" title=\"数字/货币金额 (只支持正数、不支持校验千分位分隔符)\"></a>数字/货币金额 (只支持正数、不支持校验千分位分隔符)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[<span class=\"number\">1</span><span class=\"number\">-9</span>]([<span class=\"number\">0</span><span class=\"number\">-9</span>]+)?(\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?$)|(^(<span class=\"number\">0</span>)&#123;<span class=\"number\">1</span>&#125;$)|(^[<span class=\"number\">0</span><span class=\"number\">-9</span>]\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]([<span class=\"number\">0</span><span class=\"number\">-9</span>])?$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"银行卡号（16-或-19-位）\"><a href=\"#银行卡号（16-或-19-位）\" class=\"headerlink\" title=\"银行卡号（16 或 19 位）\"></a>银行卡号（16 或 19 位）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([<span class=\"number\">1</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">1</span>&#125;)(\\d&#123;<span class=\"number\">15</span>&#125;|\\d&#123;<span class=\"number\">18</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中文姓名\"><a href=\"#中文姓名\" class=\"headerlink\" title=\"中文姓名\"></a>中文姓名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([\\u4e00-\\u9fa5·]&#123;<span class=\"number\">2</span>,<span class=\"number\">16</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"英文姓名\"><a href=\"#英文姓名\" class=\"headerlink\" title=\"英文姓名\"></a>英文姓名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[a-zA-Z]&#123;<span class=\"number\">1</span>&#125;[a-zA-Z\\s]&#123;<span class=\"number\">0</span>,<span class=\"number\">20</span>&#125;[a-zA-Z]&#123;<span class=\"number\">1</span>&#125;$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"新能源车牌号\"><a href=\"#新能源车牌号\" class=\"headerlink\" title=\"新能源车牌号\"></a>新能源车牌号</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;(([<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>&#125;[DF])|([DF][A-HJ-NP-Z0<span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;))$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"非新能源车牌号\"><a href=\"#非新能源车牌号\" class=\"headerlink\" title=\"非新能源车牌号\"></a>非新能源车牌号</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;[A-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;[A-Z0<span class=\"number\">-9</span>挂学警港澳]&#123;<span class=\"number\">1</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"车牌号-新能源-非新能源\"><a href=\"#车牌号-新能源-非新能源\" class=\"headerlink\" title=\"车牌号(新能源+非新能源)\"></a>车牌号(新能源+非新能源)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;(([<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>&#125;[DF])|([DF]([A-HJ-NP-Z0<span class=\"number\">-9</span>])[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;)))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;[A-HJ-NP-Z0<span class=\"number\">-9</span> 挂学警港澳]&#123;<span class=\"number\">1</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"URL-链接-网址\"><a href=\"#URL-链接-网址\" class=\"headerlink\" title=\"URL 链接(网址)\"></a>URL 链接(网址)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((https?|ftp|file):\\/\\/)?([\\da-z.-]+)\\.([a-z.]&#123;<span class=\"number\">2</span>,<span class=\"number\">6</span>&#125;)(\\/\\w\\.-]*)*\\/?<span class=\"regexp\">/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-严谨-根据工信部-2019-年最新公布的手机号段\"><a href=\"#手机号-严谨-根据工信部-2019-年最新公布的手机号段\" class=\"headerlink\" title=\"手机号(严谨), 根据工信部 2019 年最新公布的手机号段\"></a>手机号(严谨), 根据工信部 2019 年最新公布的手机号段</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>((<span class=\"number\">3</span>[\\d])|(<span class=\"number\">4</span>[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])|(<span class=\"number\">5</span>[<span class=\"number\">0</span><span class=\"number\">-3</span>,<span class=\"number\">5</span><span class=\"number\">-9</span>])|(<span class=\"number\">6</span>[<span class=\"number\">5</span><span class=\"number\">-7</span>])|(<span class=\"number\">7</span>[<span class=\"number\">0</span><span class=\"number\">-8</span>])|(<span class=\"number\">8</span>[\\d])|(<span class=\"number\">9</span>[<span class=\"number\">1</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]))\\d&#123;<span class=\"number\">8</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-宽松-只要是-13-14-15-16-17-18-19-开头即可\"><a href=\"#手机号-宽松-只要是-13-14-15-16-17-18-19-开头即可\" class=\"headerlink\" title=\"手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可\"></a>手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>[<span class=\"number\">3</span><span class=\"number\">-9</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-最宽松-只要是-1-开头即可-如果你的手机号是用来接收短信-优先建议选择这一条\"><a href=\"#手机号-最宽松-只要是-1-开头即可-如果你的手机号是用来接收短信-优先建议选择这一条\" class=\"headerlink\" title=\"手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\"></a>手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>\\d&#123;<span class=\"number\">10</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"日期-如-2000-01-01-或-2000-1-1\"><a href=\"#日期-如-2000-01-01-或-2000-1-1\" class=\"headerlink\" title=\"日期, 如: 2000-01-01 或 2000-1-1\"></a>日期, 如: 2000-01-01 或 2000-1-1</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">4</span>&#125;(-)([<span class=\"number\">0</span><span class=\"number\">-1</span>][<span class=\"number\">0</span><span class=\"number\">-2</span>]|\\d)\\<span class=\"number\">1</span>([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"email-地址\"><a href=\"#email-地址\" class=\"headerlink\" title=\"email 地址\"></a>email 地址</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z0-9.!#$%&amp;'*+\\/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?)*$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"国内座机电话-如-0341-86091234\"><a href=\"#国内座机电话-如-0341-86091234\" class=\"headerlink\" title=\"国内座机电话,如: 0341-86091234\"></a>国内座机电话,如: 0341-86091234</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d&#123;<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">8</span>&#125;|\\d&#123;<span class=\"number\">4</span>&#125;-\\d&#123;<span class=\"number\">7</span>&#125;/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"一代身份证号-15-位数字\"><a href=\"#一代身份证号-15-位数字\" class=\"headerlink\" title=\"一代身份证号(15 位数字)\"></a>一代身份证号(15 位数字)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">8</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二代身份证号-18-位数字-最后一位是校验位-可能为数字或字符-X\"><a href=\"#二代身份证号-18-位数字-最后一位是校验位-可能为数字或字符-X\" class=\"headerlink\" title=\"二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X\"></a>二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">6</span>&#125;(<span class=\"number\">18</span>|<span class=\"number\">19</span>|<span class=\"number\">20</span>)\\d&#123;<span class=\"number\">2</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;(\\d|X|x)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"身份证号-支持-1-2-代-15-位-18-位数字\"><a href=\"#身份证号-支持-1-2-代-15-位-18-位数字\" class=\"headerlink\" title=\"身份证号, 支持 1/2 代(15 位/18 位数字)\"></a>身份证号, 支持 1/2 代(15 位/18 位数字)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^\\d&#123;<span class=\"number\">8</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;$)|(^\\d&#123;<span class=\"number\">6</span>&#125;(<span class=\"number\">18</span>|<span class=\"number\">19</span>|<span class=\"number\">20</span>)\\d&#123;<span class=\"number\">2</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;(\\d|X|x)$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"护照（包含香港、澳门）\"><a href=\"#护照（包含香港、澳门）\" class=\"headerlink\" title=\"护照（包含香港、澳门）\"></a>护照（包含香港、澳门）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[EeKkGgDdSsPpHh]\\d&#123;<span class=\"number\">8</span>&#125;$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(<span class=\"number\">1</span>[<span class=\"number\">45</span>]))\\d&#123;<span class=\"number\">7</span>&#125;$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"帐号是否合法-字母开头，允许-5-16-字节，允许字母数字下划线组合\"><a href=\"#帐号是否合法-字母开头，允许-5-16-字节，允许字母数字下划线组合\" class=\"headerlink\" title=\"帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合\"></a>帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z][a-zA-Z0<span class=\"number\">-9</span>_]&#123;<span class=\"number\">4</span>,<span class=\"number\">15</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯中文-汉字\"><a href=\"#纯中文-汉字\" class=\"headerlink\" title=\"纯中文/汉字\"></a>纯中文/汉字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[\\u4E00-\\u9FA5]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否小数\"><a href=\"#是否小数\" class=\"headerlink\" title=\"是否小数\"></a>是否小数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+\\.\\d+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"电话-座机\"><a href=\"#电话-座机\" class=\"headerlink\" title=\"电话(座机)\"></a>电话(座机)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">0</span>\\d&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯数字\"><a href=\"#纯数字\" class=\"headerlink\" title=\"纯数字\"></a>纯数字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">1</span>,&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否-html-标签\"><a href=\"#是否-html-标签\" class=\"headerlink\" title=\"是否 html 标签\"></a>是否 html 标签</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">(.*)</span>&gt;</span>.*<span class=\"tag\">&lt;<span class=\"name\">\\</span>/\\<span class=\"attr\">1</span>&gt;</span>|<span class=\"tag\">&lt;<span class=\"name\">(.*)</span> \\/&gt;</span></span><span class=\"regexp\">/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"是否-qq-号格式正确\"><a href=\"#是否-qq-号格式正确\" class=\"headerlink\" title=\"是否 qq 号格式正确\"></a>是否 qq 号格式正确</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[<span class=\"number\">1</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>,<span class=\"number\">10</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否由数字和字母组成\"><a href=\"#是否由数字和字母组成\" class=\"headerlink\" title=\"是否由数字和字母组成\"></a>是否由数字和字母组成</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[A-Za-z0<span class=\"number\">-9</span>]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯英文字母\"><a href=\"#纯英文字母\" class=\"headerlink\" title=\"纯英文字母\"></a>纯英文字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯小写英文字母组成\"><a href=\"#纯小写英文字母组成\" class=\"headerlink\" title=\"纯小写英文字母组成\"></a>纯小写英文字母组成</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯大写英文字母\"><a href=\"#纯大写英文字母\" class=\"headerlink\" title=\"纯大写英文字母\"></a>纯大写英文字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[A-Z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"密码强度正则，最少-6-位，包括至少-1-个大写字母，1-个小写字母，1-个数字，1-个特殊字符\"><a href=\"#密码强度正则，最少-6-位，包括至少-1-个大写字母，1-个小写字母，1-个数字，1-个特殊字符\" class=\"headerlink\" title=\"密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符\"></a>密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用户名正则，4-到-16-位（字母，数字，下划线，减号）\"><a href=\"#用户名正则，4-到-16-位（字母，数字，下划线，减号）\" class=\"headerlink\" title=\"用户名正则，4 到 16 位（字母，数字，下划线，减号）\"></a>用户名正则，4 到 16 位（字母，数字，下划线，减号）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z0<span class=\"number\">-9</span>_-]&#123;<span class=\"number\">4</span>,<span class=\"number\">16</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ip-v4\"><a href=\"#ip-v4\" class=\"headerlink\" title=\"ip-v4\"></a>ip-v4</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(?:(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\.)&#123;<span class=\"number\">3</span>&#125;(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ip-v6\"><a href=\"#ip-v6\" class=\"headerlink\" title=\"ip-v6\"></a>ip-v6</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">7</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">6</span>&#125;:[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">5</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)?[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">4</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">2</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">3</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">3</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">2</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">6</span>&#125;((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;:((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|(::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">6</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;:))$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"16-进制颜色\"><a href=\"#16-进制颜色\" class=\"headerlink\" title=\"16 进制颜色\"></a>16 进制颜色</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"微信号，6-至-20-位，以字母开头，字母，数字，减号，下划线\"><a href=\"#微信号，6-至-20-位，以字母开头，字母，数字，减号，下划线\" class=\"headerlink\" title=\"微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线\"></a>微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z][-_a-zA-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>,<span class=\"number\">19</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中国邮政编码\"><a href=\"#中国邮政编码\" class=\"headerlink\" title=\"中国邮政编码\"></a>中国邮政编码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-356</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-7</span>]|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-6</span>]|<span class=\"number\">4</span>[<span class=\"number\">0</span><span class=\"number\">-7</span>]|<span class=\"number\">5</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">6</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">7</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">8</span>[<span class=\"number\">013</span><span class=\"number\">-6</span>])\\d&#123;<span class=\"number\">4</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"只包含中文和数字\"><a href=\"#只包含中文和数字\" class=\"headerlink\" title=\"只包含中文和数字\"></a>只包含中文和数字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(([\\u4E00-\\u9FA5])|(\\d))+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"非字母\"><a href=\"#非字母\" class=\"headerlink\" title=\"非字母\"></a>非字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[^A-Za-z]$/;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"正则大全\"><a href=\"#正则大全\" class=\"headerlink\" title=\"正则大全   \"></a>正则大全 <img src=\"https://img.shields.io/badge/状态-积极更新-673ab7.svg\" alt> <img src=\"https://img.shields.io/badge/已收录-47条-4caf50.svg\" alt> <img src=\"https://img.shields.io/badge/license-MIT-F44336.svg\" alt></h1><p>:whale:图形界面: <a href=\"https://any86.github.io/any-rule/\" target=\"_blank\" rel=\"noopener\">https://any86.github.io/any-rule/</a></p>\n<h2 id=\"html-注释\"><a href=\"#html-注释\" class=\"headerlink\" title=\"html 注释\"></a>html 注释</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"xml\"><span class=\"comment\">&lt;!--(.*?)--&gt;</span>$/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"md5-格式-32-位\"><a href=\"#md5-格式-32-位\" class=\"headerlink\" title=\"md5 格式(32 位)\"></a>md5 格式(32 位)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-f0<span class=\"number\">-9</span>]&#123;<span class=\"number\">32</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"版本号格式必须为-X-Y-Z\"><a href=\"#版本号格式必须为-X-Y-Z\" class=\"headerlink\" title=\"版本号格式必须为 X.Y.Z\"></a>版本号格式必须为 X.Y.Z</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+(\\.\\d+)&#123;<span class=\"number\">2</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"视频链接地址（视频格式可按需增删）\"><a href=\"#视频链接地址（视频格式可按需增删）\" class=\"headerlink\" title=\"视频链接地址（视频格式可按需增删）\"></a>视频链接地址（视频格式可按需增删）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^https?:\\/\\/.*?(swf|avi|flv|mpg|rm|mov|wav|asf|<span class=\"number\">3</span>gp|mkv|rmvb|mp4)$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"图片链接地址（图片格式可按需增删）\"><a href=\"#图片链接地址（图片格式可按需增删）\" class=\"headerlink\" title=\"图片链接地址（图片格式可按需增删）\"></a>图片链接地址（图片格式可按需增删）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^https?:\\/\\/.*?(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif)$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"24-小时制时间（HH-mm-ss）\"><a href=\"#24-小时制时间（HH-mm-ss）\" class=\"headerlink\" title=\"24 小时制时间（HH:mm:ss）\"></a>24 小时制时间（HH:mm:ss）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((?:[<span class=\"number\">01</span>]\\d|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-3</span>]):[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d:[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-小时制时间（hh-mm-ss）\"><a href=\"#12-小时制时间（hh-mm-ss）\" class=\"headerlink\" title=\"12 小时制时间（hh:mm:ss）\"></a>12 小时制时间（hh:mm:ss）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-2</span>]|<span class=\"number\">0</span>?[<span class=\"number\">1</span><span class=\"number\">-9</span>]):[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d:[<span class=\"number\">0</span><span class=\"number\">-5</span>]\\d$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"base64-格式\"><a href=\"#base64-格式\" class=\"headerlink\" title=\"base64 格式\"></a>base64 格式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\s*data:([a-z]+\\/[a-z0<span class=\"number\">-9</span>-+.]+(;[a-z-]+=[a-z0<span class=\"number\">-9</span>-]+)?)?(;base64)?,([a-z0<span class=\"number\">-9</span>!$&amp;<span class=\"string\">',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"数字-货币金额（支持负数、千分位分隔符）\"><a href=\"#数字-货币金额（支持负数、千分位分隔符）\" class=\"headerlink\" title=\"数字/货币金额（支持负数、千分位分隔符）\"></a>数字/货币金额（支持负数、千分位分隔符）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[-]?[<span class=\"number\">1</span><span class=\"number\">-9</span>]\\d&#123;<span class=\"number\">0</span>,<span class=\"number\">2</span>&#125;($|(,\\d&#123;<span class=\"number\">3</span>&#125;)*($|(\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;$))))|((^[<span class=\"number\">0</span>](\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?)|(^[-][<span class=\"number\">0</span>]\\.\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字-货币金额-只支持正数、不支持校验千分位分隔符\"><a href=\"#数字-货币金额-只支持正数、不支持校验千分位分隔符\" class=\"headerlink\" title=\"数字/货币金额 (只支持正数、不支持校验千分位分隔符)\"></a>数字/货币金额 (只支持正数、不支持校验千分位分隔符)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[<span class=\"number\">1</span><span class=\"number\">-9</span>]([<span class=\"number\">0</span><span class=\"number\">-9</span>]+)?(\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;)?$)|(^(<span class=\"number\">0</span>)&#123;<span class=\"number\">1</span>&#125;$)|(^[<span class=\"number\">0</span><span class=\"number\">-9</span>]\\.[<span class=\"number\">0</span><span class=\"number\">-9</span>]([<span class=\"number\">0</span><span class=\"number\">-9</span>])?$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"银行卡号（16-或-19-位）\"><a href=\"#银行卡号（16-或-19-位）\" class=\"headerlink\" title=\"银行卡号（16 或 19 位）\"></a>银行卡号（16 或 19 位）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([<span class=\"number\">1</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">1</span>&#125;)(\\d&#123;<span class=\"number\">15</span>&#125;|\\d&#123;<span class=\"number\">18</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中文姓名\"><a href=\"#中文姓名\" class=\"headerlink\" title=\"中文姓名\"></a>中文姓名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([\\u4e00-\\u9fa5·]&#123;<span class=\"number\">2</span>,<span class=\"number\">16</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"英文姓名\"><a href=\"#英文姓名\" class=\"headerlink\" title=\"英文姓名\"></a>英文姓名</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[a-zA-Z]&#123;<span class=\"number\">1</span>&#125;[a-zA-Z\\s]&#123;<span class=\"number\">0</span>,<span class=\"number\">20</span>&#125;[a-zA-Z]&#123;<span class=\"number\">1</span>&#125;$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"新能源车牌号\"><a href=\"#新能源车牌号\" class=\"headerlink\" title=\"新能源车牌号\"></a>新能源车牌号</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;(([<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>&#125;[DF])|([DF][A-HJ-NP-Z0<span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;))$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"非新能源车牌号\"><a href=\"#非新能源车牌号\" class=\"headerlink\" title=\"非新能源车牌号\"></a>非新能源车牌号</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;[A-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;[A-Z0<span class=\"number\">-9</span>挂学警港澳]&#123;<span class=\"number\">1</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"车牌号-新能源-非新能源\"><a href=\"#车牌号-新能源-非新能源\" class=\"headerlink\" title=\"车牌号(新能源+非新能源)\"></a>车牌号(新能源+非新能源)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z]&#123;<span class=\"number\">1</span>&#125;(([<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>&#125;[DF])|([DF]([A-HJ-NP-Z0<span class=\"number\">-9</span>])[<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;)))|([京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]&#123;<span class=\"number\">1</span>&#125;[A-Z]&#123;<span class=\"number\">1</span>&#125;[A-HJ-NP-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>&#125;[A-HJ-NP-Z0<span class=\"number\">-9</span> 挂学警港澳]&#123;<span class=\"number\">1</span>&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"URL-链接-网址\"><a href=\"#URL-链接-网址\" class=\"headerlink\" title=\"URL 链接(网址)\"></a>URL 链接(网址)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((https?|ftp|file):\\/\\/)?([\\da-z.-]+)\\.([a-z.]&#123;<span class=\"number\">2</span>,<span class=\"number\">6</span>&#125;)(\\/\\w\\.-]*)*\\/?<span class=\"regexp\">/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-严谨-根据工信部-2019-年最新公布的手机号段\"><a href=\"#手机号-严谨-根据工信部-2019-年最新公布的手机号段\" class=\"headerlink\" title=\"手机号(严谨), 根据工信部 2019 年最新公布的手机号段\"></a>手机号(严谨), 根据工信部 2019 年最新公布的手机号段</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>((<span class=\"number\">3</span>[\\d])|(<span class=\"number\">4</span>[<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])|(<span class=\"number\">5</span>[<span class=\"number\">0</span><span class=\"number\">-3</span>,<span class=\"number\">5</span><span class=\"number\">-9</span>])|(<span class=\"number\">6</span>[<span class=\"number\">5</span><span class=\"number\">-7</span>])|(<span class=\"number\">7</span>[<span class=\"number\">0</span><span class=\"number\">-8</span>])|(<span class=\"number\">8</span>[\\d])|(<span class=\"number\">9</span>[<span class=\"number\">1</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]))\\d&#123;<span class=\"number\">8</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-宽松-只要是-13-14-15-16-17-18-19-开头即可\"><a href=\"#手机号-宽松-只要是-13-14-15-16-17-18-19-开头即可\" class=\"headerlink\" title=\"手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可\"></a>手机号(宽松), 只要是 13,14,15,16,17,18,19 开头即可</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>[<span class=\"number\">3</span><span class=\"number\">-9</span>]\\d&#123;<span class=\"number\">9</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"手机号-最宽松-只要是-1-开头即可-如果你的手机号是用来接收短信-优先建议选择这一条\"><a href=\"#手机号-最宽松-只要是-1-开头即可-如果你的手机号是用来接收短信-优先建议选择这一条\" class=\"headerlink\" title=\"手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条\"></a>手机号(最宽松), 只要是 1 开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">1</span>\\d&#123;<span class=\"number\">10</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"日期-如-2000-01-01-或-2000-1-1\"><a href=\"#日期-如-2000-01-01-或-2000-1-1\" class=\"headerlink\" title=\"日期, 如: 2000-01-01 或 2000-1-1\"></a>日期, 如: 2000-01-01 或 2000-1-1</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">4</span>&#125;(-)([<span class=\"number\">0</span><span class=\"number\">-1</span>][<span class=\"number\">0</span><span class=\"number\">-2</span>]|\\d)\\<span class=\"number\">1</span>([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"email-地址\"><a href=\"#email-地址\" class=\"headerlink\" title=\"email 地址\"></a>email 地址</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z0-9.!#$%&amp;'*+\\/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?)*$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"国内座机电话-如-0341-86091234\"><a href=\"#国内座机电话-如-0341-86091234\" class=\"headerlink\" title=\"国内座机电话,如: 0341-86091234\"></a>国内座机电话,如: 0341-86091234</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d&#123;<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">8</span>&#125;|\\d&#123;<span class=\"number\">4</span>&#125;-\\d&#123;<span class=\"number\">7</span>&#125;/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"一代身份证号-15-位数字\"><a href=\"#一代身份证号-15-位数字\" class=\"headerlink\" title=\"一代身份证号(15 位数字)\"></a>一代身份证号(15 位数字)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">8</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二代身份证号-18-位数字-最后一位是校验位-可能为数字或字符-X\"><a href=\"#二代身份证号-18-位数字-最后一位是校验位-可能为数字或字符-X\" class=\"headerlink\" title=\"二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X\"></a>二代身份证号(18 位数字),最后一位是校验位,可能为数字或字符 X</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">6</span>&#125;(<span class=\"number\">18</span>|<span class=\"number\">19</span>|<span class=\"number\">20</span>)\\d&#123;<span class=\"number\">2</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;(\\d|X|x)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"身份证号-支持-1-2-代-15-位-18-位数字\"><a href=\"#身份证号-支持-1-2-代-15-位-18-位数字\" class=\"headerlink\" title=\"身份证号, 支持 1/2 代(15 位/18 位数字)\"></a>身份证号, 支持 1/2 代(15 位/18 位数字)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^\\d&#123;<span class=\"number\">8</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;$)|(^\\d&#123;<span class=\"number\">6</span>&#125;(<span class=\"number\">18</span>|<span class=\"number\">19</span>|<span class=\"number\">20</span>)\\d&#123;<span class=\"number\">2</span>&#125;(<span class=\"number\">0</span>\\d|<span class=\"number\">10</span>|<span class=\"number\">11</span>|<span class=\"number\">12</span>)([<span class=\"number\">0</span><span class=\"number\">-2</span>]\\d|<span class=\"number\">30</span>|<span class=\"number\">31</span>)\\d&#123;<span class=\"number\">3</span>&#125;(\\d|X|x)$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"护照（包含香港、澳门）\"><a href=\"#护照（包含香港、澳门）\" class=\"headerlink\" title=\"护照（包含香港、澳门）\"></a>护照（包含香港、澳门）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/(^[EeKkGgDdSsPpHh]\\d&#123;<span class=\"number\">8</span>&#125;$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(<span class=\"number\">1</span>[<span class=\"number\">45</span>]))\\d&#123;<span class=\"number\">7</span>&#125;$)/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"帐号是否合法-字母开头，允许-5-16-字节，允许字母数字下划线组合\"><a href=\"#帐号是否合法-字母开头，允许-5-16-字节，允许字母数字下划线组合\" class=\"headerlink\" title=\"帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合\"></a>帐号是否合法(字母开头，允许 5-16 字节，允许字母数字下划线组合</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z][a-zA-Z0<span class=\"number\">-9</span>_]&#123;<span class=\"number\">4</span>,<span class=\"number\">15</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯中文-汉字\"><a href=\"#纯中文-汉字\" class=\"headerlink\" title=\"纯中文/汉字\"></a>纯中文/汉字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[\\u4E00-\\u9FA5]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否小数\"><a href=\"#是否小数\" class=\"headerlink\" title=\"是否小数\"></a>是否小数</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+\\.\\d+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"电话-座机\"><a href=\"#电话-座机\" class=\"headerlink\" title=\"电话(座机)\"></a>电话(座机)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^<span class=\"number\">0</span>\\d&#123;<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;-\\d&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯数字\"><a href=\"#纯数字\" class=\"headerlink\" title=\"纯数字\"></a>纯数字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d&#123;<span class=\"number\">1</span>,&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否-html-标签\"><a href=\"#是否-html-标签\" class=\"headerlink\" title=\"是否 html 标签\"></a>是否 html 标签</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">(.*)</span>&gt;</span>.*<span class=\"tag\">&lt;<span class=\"name\">\\</span>/\\<span class=\"attr\">1</span>&gt;</span>|<span class=\"tag\">&lt;<span class=\"name\">(.*)</span> \\/&gt;</span></span><span class=\"regexp\">/;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"是否-qq-号格式正确\"><a href=\"#是否-qq-号格式正确\" class=\"headerlink\" title=\"是否 qq 号格式正确\"></a>是否 qq 号格式正确</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[<span class=\"number\">1</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>,<span class=\"number\">10</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"是否由数字和字母组成\"><a href=\"#是否由数字和字母组成\" class=\"headerlink\" title=\"是否由数字和字母组成\"></a>是否由数字和字母组成</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[A-Za-z0<span class=\"number\">-9</span>]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯英文字母\"><a href=\"#纯英文字母\" class=\"headerlink\" title=\"纯英文字母\"></a>纯英文字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯小写英文字母组成\"><a href=\"#纯小写英文字母组成\" class=\"headerlink\" title=\"纯小写英文字母组成\"></a>纯小写英文字母组成</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"纯大写英文字母\"><a href=\"#纯大写英文字母\" class=\"headerlink\" title=\"纯大写英文字母\"></a>纯大写英文字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[A-Z]+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"密码强度正则，最少-6-位，包括至少-1-个大写字母，1-个小写字母，1-个数字，1-个特殊字符\"><a href=\"#密码强度正则，最少-6-位，包括至少-1-个大写字母，1-个小写字母，1-个数字，1-个特殊字符\" class=\"headerlink\" title=\"密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符\"></a>密码强度正则，最少 6 位，包括至少 1 个大写字母，1 个小写字母，1 个数字，1 个特殊字符</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用户名正则，4-到-16-位（字母，数字，下划线，减号）\"><a href=\"#用户名正则，4-到-16-位（字母，数字，下划线，减号）\" class=\"headerlink\" title=\"用户名正则，4 到 16 位（字母，数字，下划线，减号）\"></a>用户名正则，4 到 16 位（字母，数字，下划线，减号）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z0<span class=\"number\">-9</span>_-]&#123;<span class=\"number\">4</span>,<span class=\"number\">16</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ip-v4\"><a href=\"#ip-v4\" class=\"headerlink\" title=\"ip-v4\"></a>ip-v4</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(?:(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)\\.)&#123;<span class=\"number\">3</span>&#125;(?:<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]|[<span class=\"number\">01</span>]?[<span class=\"number\">0</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]?)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ip-v6\"><a href=\"#ip-v6\" class=\"headerlink\" title=\"ip-v6\"></a>ip-v6</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">7</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">6</span>&#125;:[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">5</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)?[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">4</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">2</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">3</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">3</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">2</span>&#125;:([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">4</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">6</span>&#125;((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;:((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|(::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;((\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b)\\.)&#123;<span class=\"number\">3</span>&#125;(\\b((<span class=\"number\">25</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>])|(<span class=\"number\">1</span>\\d&#123;<span class=\"number\">2</span>&#125;)|(<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-4</span>]\\d)|(\\d&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;))\\b))|([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">5</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(::([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">0</span>,<span class=\"number\">6</span>&#125;[<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;)|(([<span class=\"number\">0</span><span class=\"number\">-9</span>A-Fa-f]&#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>&#125;:)&#123;<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;:))$/i;</span><br></pre></td></tr></table></figure>\n<h2 id=\"16-进制颜色\"><a href=\"#16-进制颜色\" class=\"headerlink\" title=\"16 进制颜色\"></a>16 进制颜色</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"微信号，6-至-20-位，以字母开头，字母，数字，减号，下划线\"><a href=\"#微信号，6-至-20-位，以字母开头，字母，数字，减号，下划线\" class=\"headerlink\" title=\"微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线\"></a>微信号，6 至 20 位，以字母开头，字母，数字，减号，下划线</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^[a-zA-Z][-_a-zA-Z0<span class=\"number\">-9</span>]&#123;<span class=\"number\">5</span>,<span class=\"number\">19</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"中国邮政编码\"><a href=\"#中国邮政编码\" class=\"headerlink\" title=\"中国邮政编码\"></a>中国邮政编码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(<span class=\"number\">0</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">1</span>[<span class=\"number\">0</span><span class=\"number\">-356</span>]|<span class=\"number\">2</span>[<span class=\"number\">0</span><span class=\"number\">-7</span>]|<span class=\"number\">3</span>[<span class=\"number\">0</span><span class=\"number\">-6</span>]|<span class=\"number\">4</span>[<span class=\"number\">0</span><span class=\"number\">-7</span>]|<span class=\"number\">5</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">6</span>[<span class=\"number\">1</span><span class=\"number\">-7</span>]|<span class=\"number\">7</span>[<span class=\"number\">0</span><span class=\"number\">-5</span>]|<span class=\"number\">8</span>[<span class=\"number\">013</span><span class=\"number\">-6</span>])\\d&#123;<span class=\"number\">4</span>&#125;$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"只包含中文和数字\"><a href=\"#只包含中文和数字\" class=\"headerlink\" title=\"只包含中文和数字\"></a>只包含中文和数字</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^(([\\u4E00-\\u9FA5])|(\\d))+$/;</span><br></pre></td></tr></table></figure>\n<h2 id=\"非字母\"><a href=\"#非字母\" class=\"headerlink\" title=\"非字母\"></a>非字母</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[^A-Za-z]$/;</span><br></pre></td></tr></table></figure>\n"},{"title":"电视直播源分享","date":"2018-11-18T04:58:16.000Z","_content":"# 你懂的\n```\n凤凰中文,http://223.110.243.155:80/PLTV/3/224/3221226922/index.m3u8\n凤凰中文,http://223.110.245.139/PLTV/3/224/3221226922/index.m3u8\n凤凰中文,http://112.17.0.10:8085/ysten-business/live/fhchinese/yst.m3u8\n凤凰资讯,http://223.110.243.155:80/PLTV/3/224/3221226923/index.m3u8\n凤凰HD,http://223.82.250.72/live/fhchinese/1.m3u8\n凤凰香港,http://223.110.243.155:80/PLTV/3/224/3221226975/index.m3u8\n澳门赛马台,rtmp://mjcao-001.wecast.hk:1935/live/chinese\n澳丫卫视,http://stream.mastvnet.com/MASTV/sd/live.m3u8\n澳门卫视,http://stream.mastvnet.com/MSTV/SD/live.m3u8\n澳门澳视澳门,rtmp://live4.tdm.com.mo:80/ch1/_definst_/ch1.live\n澳门澳视葡文,rtmp://live4.tdm.com.mo:80/ch2/_definst_/ch2.live\n澳门澳视卫视,rtmp://live4.tdm.com.mo:80/ch3/_definst_/ch3.live\n澳门澳视体育,rtmp://live4.tdm.com.mo:80/ch4/_definst_/sport_ch4.live\n澳门澳视资讯,rtmp://live4.tdm.com.mo:80/ch5/_definst_/info_ch5.live\n澳门澳视高清,rtmp://live4.tdm.com.mo:80/ch6/_definst_/hd_ch6.live\n澳门莲花卫视,rtmp://live-rtmp.lotustv.duolaibo.cn/lotustv/5562e9e4d409d24c9600075c\nTVBS新闻台1,rtmp://dv2.tp33.net/sat/tv551\nTVBS新闻台2,rtmp://dv2.tp33.net/sat/tv552\nTVBS新闻台3,rtmp://dv2.tp33.net:1935/sat/tv551\nTVBS新闻台4,rtmp://dv2.tp33.net:1935/sat/tv552\n纬来育乐1,rtmp://dv2.tp33.net/sat/tv701\n纬来育乐2,rtmp://dv2.tp33.net/sat/tv702\n纬来育乐3,rtmp://dv2.tp33.net:1935/sat/tv701\n纬来育乐4,rtmp://dv2.tp33.net:1935/sat/tv702\n中視1,rtmp://dv2.tp33.net/sat/tv091\n中視2,rtmp://dv2.tp33.net/sat/tv092\n中视CTV3,rtmp://dv2.tp33.net:1935/sat/tv091\n中视CTV4,rtmp://dv2.tp33.net:1935/sat/tv092\n华视1,rtmp://dv2.tp33.net/sat/tv111\n华视2,rtmp://dv2.tp33.net/sat/tv112\n华视台3,rtmp://dv2.tp33.net:1935/sat/tv111\n华视台4,rtmp://dv2.tp33.net:1935/sat/tv112\n台视1,rtmp://dv2.tp33.net/sat/tv071\n台视2,rtmp://dv2.tp33.net/sat/tv072\n台视台3,rtmp://dv2.tp33.net:1935/sat/tv072\n台视台4,rtmp://dv2.tp33.net:1935/sat/tv071\n民视1,rtmp://dv2.tp33.net/sat/tv052\n民视2,rtmp://dv2.tp33.net/sat/tv051\n民视台3,rtmp://dv2.tp33.net:1935/sat/tv051\n民视台4,rtmp://dv2.tp33.net:1935/sat/tv052\n纬来日本1,rtmp://dv2.tp33.net/sat//tv761\n纬来日本2,rtmp://dv2.tp33.net/sat/tv762\n纬来日本3,rtmp://dv2.tp33.net:1935/sat/tv761\n纬来日本4,rtmp://dv2.tp33.net:1935/sat/tv762\n三立台湾,rtmp://dv2.ts33.net/sat/tv292\n纬来体育1,rtmp://dv2.ts33.net/sat/tv722\n纬来体育2,rtmp://dv2.tp33.net/sat/tv721\n纬来体育3,rtmp://dv2.tp33.net:1935/sat/tv721\n纬来体育4,rtmp://dv2.tp33.net:1935/sat/tv722\n东森财经新闻台1,rtmp://dv2.tp33.net/sat/tv571\n东森财经新闻台2,rtmp://dv2.tp33.net/sat/tv572\n东森财经新闻台3,rtmp://dv2.tp33.net:1935/sat/tv571\n东森财经新闻台4,rtmp://dv2.tp33.net:1935/sat/tv572\n```","source":"_posts/电视直播源分享.md","raw":"---\ntitle: 电视直播源分享\ntags:\ndate: 2018-11-18 12:58:16\ncategories: 可以公开的情报\n---\n# 你懂的\n```\n凤凰中文,http://223.110.243.155:80/PLTV/3/224/3221226922/index.m3u8\n凤凰中文,http://223.110.245.139/PLTV/3/224/3221226922/index.m3u8\n凤凰中文,http://112.17.0.10:8085/ysten-business/live/fhchinese/yst.m3u8\n凤凰资讯,http://223.110.243.155:80/PLTV/3/224/3221226923/index.m3u8\n凤凰HD,http://223.82.250.72/live/fhchinese/1.m3u8\n凤凰香港,http://223.110.243.155:80/PLTV/3/224/3221226975/index.m3u8\n澳门赛马台,rtmp://mjcao-001.wecast.hk:1935/live/chinese\n澳丫卫视,http://stream.mastvnet.com/MASTV/sd/live.m3u8\n澳门卫视,http://stream.mastvnet.com/MSTV/SD/live.m3u8\n澳门澳视澳门,rtmp://live4.tdm.com.mo:80/ch1/_definst_/ch1.live\n澳门澳视葡文,rtmp://live4.tdm.com.mo:80/ch2/_definst_/ch2.live\n澳门澳视卫视,rtmp://live4.tdm.com.mo:80/ch3/_definst_/ch3.live\n澳门澳视体育,rtmp://live4.tdm.com.mo:80/ch4/_definst_/sport_ch4.live\n澳门澳视资讯,rtmp://live4.tdm.com.mo:80/ch5/_definst_/info_ch5.live\n澳门澳视高清,rtmp://live4.tdm.com.mo:80/ch6/_definst_/hd_ch6.live\n澳门莲花卫视,rtmp://live-rtmp.lotustv.duolaibo.cn/lotustv/5562e9e4d409d24c9600075c\nTVBS新闻台1,rtmp://dv2.tp33.net/sat/tv551\nTVBS新闻台2,rtmp://dv2.tp33.net/sat/tv552\nTVBS新闻台3,rtmp://dv2.tp33.net:1935/sat/tv551\nTVBS新闻台4,rtmp://dv2.tp33.net:1935/sat/tv552\n纬来育乐1,rtmp://dv2.tp33.net/sat/tv701\n纬来育乐2,rtmp://dv2.tp33.net/sat/tv702\n纬来育乐3,rtmp://dv2.tp33.net:1935/sat/tv701\n纬来育乐4,rtmp://dv2.tp33.net:1935/sat/tv702\n中視1,rtmp://dv2.tp33.net/sat/tv091\n中視2,rtmp://dv2.tp33.net/sat/tv092\n中视CTV3,rtmp://dv2.tp33.net:1935/sat/tv091\n中视CTV4,rtmp://dv2.tp33.net:1935/sat/tv092\n华视1,rtmp://dv2.tp33.net/sat/tv111\n华视2,rtmp://dv2.tp33.net/sat/tv112\n华视台3,rtmp://dv2.tp33.net:1935/sat/tv111\n华视台4,rtmp://dv2.tp33.net:1935/sat/tv112\n台视1,rtmp://dv2.tp33.net/sat/tv071\n台视2,rtmp://dv2.tp33.net/sat/tv072\n台视台3,rtmp://dv2.tp33.net:1935/sat/tv072\n台视台4,rtmp://dv2.tp33.net:1935/sat/tv071\n民视1,rtmp://dv2.tp33.net/sat/tv052\n民视2,rtmp://dv2.tp33.net/sat/tv051\n民视台3,rtmp://dv2.tp33.net:1935/sat/tv051\n民视台4,rtmp://dv2.tp33.net:1935/sat/tv052\n纬来日本1,rtmp://dv2.tp33.net/sat//tv761\n纬来日本2,rtmp://dv2.tp33.net/sat/tv762\n纬来日本3,rtmp://dv2.tp33.net:1935/sat/tv761\n纬来日本4,rtmp://dv2.tp33.net:1935/sat/tv762\n三立台湾,rtmp://dv2.ts33.net/sat/tv292\n纬来体育1,rtmp://dv2.ts33.net/sat/tv722\n纬来体育2,rtmp://dv2.tp33.net/sat/tv721\n纬来体育3,rtmp://dv2.tp33.net:1935/sat/tv721\n纬来体育4,rtmp://dv2.tp33.net:1935/sat/tv722\n东森财经新闻台1,rtmp://dv2.tp33.net/sat/tv571\n东森财经新闻台2,rtmp://dv2.tp33.net/sat/tv572\n东森财经新闻台3,rtmp://dv2.tp33.net:1935/sat/tv571\n东森财经新闻台4,rtmp://dv2.tp33.net:1935/sat/tv572\n```","slug":"电视直播源分享","published":1,"updated":"2018-11-18T05:02:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxih002dw6il20l6nibl","content":"<h1 id=\"你懂的\"><a href=\"#你懂的\" class=\"headerlink\" title=\"你懂的\"></a>你懂的</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">凤凰中文,http://223.110.243.155:80/PLTV/3/224/3221226922/index.m3u8</span><br><span class=\"line\">凤凰中文,http://223.110.245.139/PLTV/3/224/3221226922/index.m3u8</span><br><span class=\"line\">凤凰中文,http://112.17.0.10:8085/ysten-business/live/fhchinese/yst.m3u8</span><br><span class=\"line\">凤凰资讯,http://223.110.243.155:80/PLTV/3/224/3221226923/index.m3u8</span><br><span class=\"line\">凤凰HD,http://223.82.250.72/live/fhchinese/1.m3u8</span><br><span class=\"line\">凤凰香港,http://223.110.243.155:80/PLTV/3/224/3221226975/index.m3u8</span><br><span class=\"line\">澳门赛马台,rtmp://mjcao-001.wecast.hk:1935/live/chinese</span><br><span class=\"line\">澳丫卫视,http://stream.mastvnet.com/MASTV/sd/live.m3u8</span><br><span class=\"line\">澳门卫视,http://stream.mastvnet.com/MSTV/SD/live.m3u8</span><br><span class=\"line\">澳门澳视澳门,rtmp://live4.tdm.com.mo:80/ch1/_definst_/ch1.live</span><br><span class=\"line\">澳门澳视葡文,rtmp://live4.tdm.com.mo:80/ch2/_definst_/ch2.live</span><br><span class=\"line\">澳门澳视卫视,rtmp://live4.tdm.com.mo:80/ch3/_definst_/ch3.live</span><br><span class=\"line\">澳门澳视体育,rtmp://live4.tdm.com.mo:80/ch4/_definst_/sport_ch4.live</span><br><span class=\"line\">澳门澳视资讯,rtmp://live4.tdm.com.mo:80/ch5/_definst_/info_ch5.live</span><br><span class=\"line\">澳门澳视高清,rtmp://live4.tdm.com.mo:80/ch6/_definst_/hd_ch6.live</span><br><span class=\"line\">澳门莲花卫视,rtmp://live-rtmp.lotustv.duolaibo.cn/lotustv/5562e9e4d409d24c9600075c</span><br><span class=\"line\">TVBS新闻台1,rtmp://dv2.tp33.net/sat/tv551</span><br><span class=\"line\">TVBS新闻台2,rtmp://dv2.tp33.net/sat/tv552</span><br><span class=\"line\">TVBS新闻台3,rtmp://dv2.tp33.net:1935/sat/tv551</span><br><span class=\"line\">TVBS新闻台4,rtmp://dv2.tp33.net:1935/sat/tv552</span><br><span class=\"line\">纬来育乐1,rtmp://dv2.tp33.net/sat/tv701</span><br><span class=\"line\">纬来育乐2,rtmp://dv2.tp33.net/sat/tv702</span><br><span class=\"line\">纬来育乐3,rtmp://dv2.tp33.net:1935/sat/tv701</span><br><span class=\"line\">纬来育乐4,rtmp://dv2.tp33.net:1935/sat/tv702</span><br><span class=\"line\">中視1,rtmp://dv2.tp33.net/sat/tv091</span><br><span class=\"line\">中視2,rtmp://dv2.tp33.net/sat/tv092</span><br><span class=\"line\">中视CTV3,rtmp://dv2.tp33.net:1935/sat/tv091</span><br><span class=\"line\">中视CTV4,rtmp://dv2.tp33.net:1935/sat/tv092</span><br><span class=\"line\">华视1,rtmp://dv2.tp33.net/sat/tv111</span><br><span class=\"line\">华视2,rtmp://dv2.tp33.net/sat/tv112</span><br><span class=\"line\">华视台3,rtmp://dv2.tp33.net:1935/sat/tv111</span><br><span class=\"line\">华视台4,rtmp://dv2.tp33.net:1935/sat/tv112</span><br><span class=\"line\">台视1,rtmp://dv2.tp33.net/sat/tv071</span><br><span class=\"line\">台视2,rtmp://dv2.tp33.net/sat/tv072</span><br><span class=\"line\">台视台3,rtmp://dv2.tp33.net:1935/sat/tv072</span><br><span class=\"line\">台视台4,rtmp://dv2.tp33.net:1935/sat/tv071</span><br><span class=\"line\">民视1,rtmp://dv2.tp33.net/sat/tv052</span><br><span class=\"line\">民视2,rtmp://dv2.tp33.net/sat/tv051</span><br><span class=\"line\">民视台3,rtmp://dv2.tp33.net:1935/sat/tv051</span><br><span class=\"line\">民视台4,rtmp://dv2.tp33.net:1935/sat/tv052</span><br><span class=\"line\">纬来日本1,rtmp://dv2.tp33.net/sat//tv761</span><br><span class=\"line\">纬来日本2,rtmp://dv2.tp33.net/sat/tv762</span><br><span class=\"line\">纬来日本3,rtmp://dv2.tp33.net:1935/sat/tv761</span><br><span class=\"line\">纬来日本4,rtmp://dv2.tp33.net:1935/sat/tv762</span><br><span class=\"line\">三立台湾,rtmp://dv2.ts33.net/sat/tv292</span><br><span class=\"line\">纬来体育1,rtmp://dv2.ts33.net/sat/tv722</span><br><span class=\"line\">纬来体育2,rtmp://dv2.tp33.net/sat/tv721</span><br><span class=\"line\">纬来体育3,rtmp://dv2.tp33.net:1935/sat/tv721</span><br><span class=\"line\">纬来体育4,rtmp://dv2.tp33.net:1935/sat/tv722</span><br><span class=\"line\">东森财经新闻台1,rtmp://dv2.tp33.net/sat/tv571</span><br><span class=\"line\">东森财经新闻台2,rtmp://dv2.tp33.net/sat/tv572</span><br><span class=\"line\">东森财经新闻台3,rtmp://dv2.tp33.net:1935/sat/tv571</span><br><span class=\"line\">东森财经新闻台4,rtmp://dv2.tp33.net:1935/sat/tv572</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"你懂的\"><a href=\"#你懂的\" class=\"headerlink\" title=\"你懂的\"></a>你懂的</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">凤凰中文,http://223.110.243.155:80/PLTV/3/224/3221226922/index.m3u8</span><br><span class=\"line\">凤凰中文,http://223.110.245.139/PLTV/3/224/3221226922/index.m3u8</span><br><span class=\"line\">凤凰中文,http://112.17.0.10:8085/ysten-business/live/fhchinese/yst.m3u8</span><br><span class=\"line\">凤凰资讯,http://223.110.243.155:80/PLTV/3/224/3221226923/index.m3u8</span><br><span class=\"line\">凤凰HD,http://223.82.250.72/live/fhchinese/1.m3u8</span><br><span class=\"line\">凤凰香港,http://223.110.243.155:80/PLTV/3/224/3221226975/index.m3u8</span><br><span class=\"line\">澳门赛马台,rtmp://mjcao-001.wecast.hk:1935/live/chinese</span><br><span class=\"line\">澳丫卫视,http://stream.mastvnet.com/MASTV/sd/live.m3u8</span><br><span class=\"line\">澳门卫视,http://stream.mastvnet.com/MSTV/SD/live.m3u8</span><br><span class=\"line\">澳门澳视澳门,rtmp://live4.tdm.com.mo:80/ch1/_definst_/ch1.live</span><br><span class=\"line\">澳门澳视葡文,rtmp://live4.tdm.com.mo:80/ch2/_definst_/ch2.live</span><br><span class=\"line\">澳门澳视卫视,rtmp://live4.tdm.com.mo:80/ch3/_definst_/ch3.live</span><br><span class=\"line\">澳门澳视体育,rtmp://live4.tdm.com.mo:80/ch4/_definst_/sport_ch4.live</span><br><span class=\"line\">澳门澳视资讯,rtmp://live4.tdm.com.mo:80/ch5/_definst_/info_ch5.live</span><br><span class=\"line\">澳门澳视高清,rtmp://live4.tdm.com.mo:80/ch6/_definst_/hd_ch6.live</span><br><span class=\"line\">澳门莲花卫视,rtmp://live-rtmp.lotustv.duolaibo.cn/lotustv/5562e9e4d409d24c9600075c</span><br><span class=\"line\">TVBS新闻台1,rtmp://dv2.tp33.net/sat/tv551</span><br><span class=\"line\">TVBS新闻台2,rtmp://dv2.tp33.net/sat/tv552</span><br><span class=\"line\">TVBS新闻台3,rtmp://dv2.tp33.net:1935/sat/tv551</span><br><span class=\"line\">TVBS新闻台4,rtmp://dv2.tp33.net:1935/sat/tv552</span><br><span class=\"line\">纬来育乐1,rtmp://dv2.tp33.net/sat/tv701</span><br><span class=\"line\">纬来育乐2,rtmp://dv2.tp33.net/sat/tv702</span><br><span class=\"line\">纬来育乐3,rtmp://dv2.tp33.net:1935/sat/tv701</span><br><span class=\"line\">纬来育乐4,rtmp://dv2.tp33.net:1935/sat/tv702</span><br><span class=\"line\">中視1,rtmp://dv2.tp33.net/sat/tv091</span><br><span class=\"line\">中視2,rtmp://dv2.tp33.net/sat/tv092</span><br><span class=\"line\">中视CTV3,rtmp://dv2.tp33.net:1935/sat/tv091</span><br><span class=\"line\">中视CTV4,rtmp://dv2.tp33.net:1935/sat/tv092</span><br><span class=\"line\">华视1,rtmp://dv2.tp33.net/sat/tv111</span><br><span class=\"line\">华视2,rtmp://dv2.tp33.net/sat/tv112</span><br><span class=\"line\">华视台3,rtmp://dv2.tp33.net:1935/sat/tv111</span><br><span class=\"line\">华视台4,rtmp://dv2.tp33.net:1935/sat/tv112</span><br><span class=\"line\">台视1,rtmp://dv2.tp33.net/sat/tv071</span><br><span class=\"line\">台视2,rtmp://dv2.tp33.net/sat/tv072</span><br><span class=\"line\">台视台3,rtmp://dv2.tp33.net:1935/sat/tv072</span><br><span class=\"line\">台视台4,rtmp://dv2.tp33.net:1935/sat/tv071</span><br><span class=\"line\">民视1,rtmp://dv2.tp33.net/sat/tv052</span><br><span class=\"line\">民视2,rtmp://dv2.tp33.net/sat/tv051</span><br><span class=\"line\">民视台3,rtmp://dv2.tp33.net:1935/sat/tv051</span><br><span class=\"line\">民视台4,rtmp://dv2.tp33.net:1935/sat/tv052</span><br><span class=\"line\">纬来日本1,rtmp://dv2.tp33.net/sat//tv761</span><br><span class=\"line\">纬来日本2,rtmp://dv2.tp33.net/sat/tv762</span><br><span class=\"line\">纬来日本3,rtmp://dv2.tp33.net:1935/sat/tv761</span><br><span class=\"line\">纬来日本4,rtmp://dv2.tp33.net:1935/sat/tv762</span><br><span class=\"line\">三立台湾,rtmp://dv2.ts33.net/sat/tv292</span><br><span class=\"line\">纬来体育1,rtmp://dv2.ts33.net/sat/tv722</span><br><span class=\"line\">纬来体育2,rtmp://dv2.tp33.net/sat/tv721</span><br><span class=\"line\">纬来体育3,rtmp://dv2.tp33.net:1935/sat/tv721</span><br><span class=\"line\">纬来体育4,rtmp://dv2.tp33.net:1935/sat/tv722</span><br><span class=\"line\">东森财经新闻台1,rtmp://dv2.tp33.net/sat/tv571</span><br><span class=\"line\">东森财经新闻台2,rtmp://dv2.tp33.net/sat/tv572</span><br><span class=\"line\">东森财经新闻台3,rtmp://dv2.tp33.net:1935/sat/tv571</span><br><span class=\"line\">东森财经新闻台4,rtmp://dv2.tp33.net:1935/sat/tv572</span><br></pre></td></tr></table></figure>"},{"title":"浏览器实现扫码枪的方法","date":"2018-11-20T01:40:02.000Z","_content":"\n# 浏览器实现扫码枪\n\n先上代码，整个依赖了 quagga 这个库进行前端的一纬码解码 通过比较每次扫码出现的值一样出现一个阀值来判断是否扫到正确的数字\n\n```vue\n<template>\n  <div v-loading=\"loading\" element-loading-text=\"请稍后\" class=\"scanner\">\n    <!-- 扫码完成后播放音频 -->\n    <audio src=\"barcode-scan.mp3\" style=\"display:none\" ref=\"sound\"></audio>\n    <div\n      class=\"scanner-container\"\n      ref=\"container\"\n      style=\"width: 100%;height: 100%;\"\n    />\n    <!-- 扫描器模拟 -->\n    <div v-if=\"!loading && !errorMessage\" class=\"scanner-animation\">\n      <div class=\"diode\">\n        <div class=\"laser\" />\n      </div>\n    </div>\n    <div v-if=\"errorMessage\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\n/** @format */\nimport Quagga from \"quagga\";\nimport { Message } from \"element-ui\";\nimport debounce from \"lodash/debounce\";\nconst MAX_TIMES = 5; // 最大同步次数，超过这个值说明是正确的，可以进行核销\n\n/**\n * 简单来说就是一个全屏扫码页，页面扫中某一个code超过规定次就当扫描成功，回调\n */\nexport default {\n  data() {\n    return {\n      loading: false,\n      barcode: \"\",\n      aimTimes: 0,\n      errorMessage: \"\",\n      delay: 0\n    };\n  },\n  methods: {\n    onDetected({ codeResult }) {\n      const { code } = codeResult;\n      console.log(\"找到\", code);\n      if (code !== this.barcode) {\n        this.barcode = code;\n        this.aimTimes = 0;\n      } else {\n        this.aimTimes++;\n      }\n    },\n    startScan: debounce(function(delay = 0) {\n      setTimeout(() => {\n        this.delay = delay;\n        this.aimTimes = 0;\n        this.barcode = \"\";\n        this.loading = false;\n        Quagga.start();\n      }, delay);\n    }, 500),\n    stopScan() {\n      this.aimTimes = 0;\n      this.loading = true;\n      Quagga.pause();\n    }\n  },\n  watch: {\n    aimTimes(times) {\n      /**\n       * 监听是否命中一定次数，如果命中了，发送并且锁上\n       */\n      if (times > MAX_TIMES) {\n        this.stopScan();\n        this.$refs.sound.play();\n        this.$emit(\"input\", this.barcode);\n      }\n    }\n  },\n  mounted() {\n    let that = this;\n    /**\n     * mounted初始化\n     */\n    that.loading = true;\n    Quagga.init(\n      {\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: this.$refs.container\n        },\n        decoder: {\n          readers: [\"i2of5_reader\", \"2of5_reader\"]\n        }\n      },\n      function(err) {\n        that.loading = false;\n        if (err) {\n          console.log(err.message);\n          if (!err.message.includes(\"Cannot read property\")) {\n            that.errorMessage = err.message || err;\n            Message({\n              message: that.errorMessage,\n              type: \"error\"\n            });\n          }\n          return;\n        }\n\n        Quagga.onDetected(that.onDetected.bind(that));\n        that.startScan();\n      }\n    );\n  },\n  beforeDestroy() {\n    Quagga.stop();\n    Quagga.offDetected(this.onDetected);\n  }\n};\n</script>\n<style lang=\"less\">\n/** @format */\n@keyframes beam {\n  50% {\n    opacity: 0;\n  }\n}\n\n@keyframes scanning {\n  50% {\n    transform: translateY(100%);\n  }\n}\n\n.scanner {\n  position: relative;\n  overflow: hidden;\n  video {\n    width: 100% !important;\n  }\n  canvas {\n    display: none !important;\n  }\n  .scanner-animation {\n    animation: scanning 2s infinite;\n    height: 100%;\n    height: 50%;\n    max-height: 300px;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    .diode {\n      animation: beam 0.01s infinite;\n      .laser {\n        width: 90%;\n        margin-left: 5%;\n        background-color: rgb(255, 99, 71);\n        height: 1px;\n        position: absolute;\n        top: 0;\n        z-index: 2;\n        box-shadow: 0 0 4px #ff0000;\n      }\n    }\n  }\n}\n</style>\n```\n","source":"_posts/浏览器实现扫码枪.md","raw":"---\ntitle: 浏览器实现扫码枪的方法\ntags:\n  - 扫码枪\n  - html5\n  - vue\ndate: 2018-11-20 09:40:02\ncategories: 可以公开的情报\n---\n\n# 浏览器实现扫码枪\n\n先上代码，整个依赖了 quagga 这个库进行前端的一纬码解码 通过比较每次扫码出现的值一样出现一个阀值来判断是否扫到正确的数字\n\n```vue\n<template>\n  <div v-loading=\"loading\" element-loading-text=\"请稍后\" class=\"scanner\">\n    <!-- 扫码完成后播放音频 -->\n    <audio src=\"barcode-scan.mp3\" style=\"display:none\" ref=\"sound\"></audio>\n    <div\n      class=\"scanner-container\"\n      ref=\"container\"\n      style=\"width: 100%;height: 100%;\"\n    />\n    <!-- 扫描器模拟 -->\n    <div v-if=\"!loading && !errorMessage\" class=\"scanner-animation\">\n      <div class=\"diode\">\n        <div class=\"laser\" />\n      </div>\n    </div>\n    <div v-if=\"errorMessage\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script>\n/** @format */\nimport Quagga from \"quagga\";\nimport { Message } from \"element-ui\";\nimport debounce from \"lodash/debounce\";\nconst MAX_TIMES = 5; // 最大同步次数，超过这个值说明是正确的，可以进行核销\n\n/**\n * 简单来说就是一个全屏扫码页，页面扫中某一个code超过规定次就当扫描成功，回调\n */\nexport default {\n  data() {\n    return {\n      loading: false,\n      barcode: \"\",\n      aimTimes: 0,\n      errorMessage: \"\",\n      delay: 0\n    };\n  },\n  methods: {\n    onDetected({ codeResult }) {\n      const { code } = codeResult;\n      console.log(\"找到\", code);\n      if (code !== this.barcode) {\n        this.barcode = code;\n        this.aimTimes = 0;\n      } else {\n        this.aimTimes++;\n      }\n    },\n    startScan: debounce(function(delay = 0) {\n      setTimeout(() => {\n        this.delay = delay;\n        this.aimTimes = 0;\n        this.barcode = \"\";\n        this.loading = false;\n        Quagga.start();\n      }, delay);\n    }, 500),\n    stopScan() {\n      this.aimTimes = 0;\n      this.loading = true;\n      Quagga.pause();\n    }\n  },\n  watch: {\n    aimTimes(times) {\n      /**\n       * 监听是否命中一定次数，如果命中了，发送并且锁上\n       */\n      if (times > MAX_TIMES) {\n        this.stopScan();\n        this.$refs.sound.play();\n        this.$emit(\"input\", this.barcode);\n      }\n    }\n  },\n  mounted() {\n    let that = this;\n    /**\n     * mounted初始化\n     */\n    that.loading = true;\n    Quagga.init(\n      {\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: this.$refs.container\n        },\n        decoder: {\n          readers: [\"i2of5_reader\", \"2of5_reader\"]\n        }\n      },\n      function(err) {\n        that.loading = false;\n        if (err) {\n          console.log(err.message);\n          if (!err.message.includes(\"Cannot read property\")) {\n            that.errorMessage = err.message || err;\n            Message({\n              message: that.errorMessage,\n              type: \"error\"\n            });\n          }\n          return;\n        }\n\n        Quagga.onDetected(that.onDetected.bind(that));\n        that.startScan();\n      }\n    );\n  },\n  beforeDestroy() {\n    Quagga.stop();\n    Quagga.offDetected(this.onDetected);\n  }\n};\n</script>\n<style lang=\"less\">\n/** @format */\n@keyframes beam {\n  50% {\n    opacity: 0;\n  }\n}\n\n@keyframes scanning {\n  50% {\n    transform: translateY(100%);\n  }\n}\n\n.scanner {\n  position: relative;\n  overflow: hidden;\n  video {\n    width: 100% !important;\n  }\n  canvas {\n    display: none !important;\n  }\n  .scanner-animation {\n    animation: scanning 2s infinite;\n    height: 100%;\n    height: 50%;\n    max-height: 300px;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    .diode {\n      animation: beam 0.01s infinite;\n      .laser {\n        width: 90%;\n        margin-left: 5%;\n        background-color: rgb(255, 99, 71);\n        height: 1px;\n        position: absolute;\n        top: 0;\n        z-index: 2;\n        box-shadow: 0 0 4px #ff0000;\n      }\n    }\n  }\n}\n</style>\n```\n","slug":"浏览器实现扫码枪","published":1,"updated":"2019-11-24T11:01:59.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxik002hw6il3f0ar7gh","content":"<h1 id=\"浏览器实现扫码枪\"><a href=\"#浏览器实现扫码枪\" class=\"headerlink\" title=\"浏览器实现扫码枪\"></a>浏览器实现扫码枪</h1><p>先上代码，整个依赖了 quagga 这个库进行前端的一纬码解码 通过比较每次扫码出现的值一样出现一个阀值来判断是否扫到正确的数字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div v-loading=&quot;loading&quot; element-loading-text=&quot;请稍后&quot; class=&quot;scanner&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 扫码完成后播放音频 --&gt;</span><br><span class=\"line\">    &lt;audio src=&quot;barcode-scan.mp3&quot; style=&quot;display:none&quot; ref=&quot;sound&quot;&gt;&lt;/audio&gt;</span><br><span class=\"line\">    &lt;div</span><br><span class=\"line\">      class=&quot;scanner-container&quot;</span><br><span class=\"line\">      ref=&quot;container&quot;</span><br><span class=\"line\">      style=&quot;width: 100%;height: 100%;&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;!-- 扫描器模拟 --&gt;</span><br><span class=\"line\">    &lt;div v-if=&quot;!loading &amp;&amp; !errorMessage&quot; class=&quot;scanner-animation&quot;&gt;</span><br><span class=\"line\">      &lt;div class=&quot;diode&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;laser&quot; /&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div v-if=&quot;errorMessage&quot;&gt;&#123;&#123; errorMessage &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">/** @format */</span><br><span class=\"line\">import Quagga from &quot;quagga&quot;;</span><br><span class=\"line\">import &#123; Message &#125; from &quot;element-ui&quot;;</span><br><span class=\"line\">import debounce from &quot;lodash/debounce&quot;;</span><br><span class=\"line\">const MAX_TIMES = 5; // 最大同步次数，超过这个值说明是正确的，可以进行核销</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 简单来说就是一个全屏扫码页，页面扫中某一个code超过规定次就当扫描成功，回调</span><br><span class=\"line\"> */</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      loading: false,</span><br><span class=\"line\">      barcode: &quot;&quot;,</span><br><span class=\"line\">      aimTimes: 0,</span><br><span class=\"line\">      errorMessage: &quot;&quot;,</span><br><span class=\"line\">      delay: 0</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onDetected(&#123; codeResult &#125;) &#123;</span><br><span class=\"line\">      const &#123; code &#125; = codeResult;</span><br><span class=\"line\">      console.log(&quot;找到&quot;, code);</span><br><span class=\"line\">      if (code !== this.barcode) &#123;</span><br><span class=\"line\">        this.barcode = code;</span><br><span class=\"line\">        this.aimTimes = 0;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        this.aimTimes++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    startScan: debounce(function(delay = 0) &#123;</span><br><span class=\"line\">      setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        this.delay = delay;</span><br><span class=\"line\">        this.aimTimes = 0;</span><br><span class=\"line\">        this.barcode = &quot;&quot;;</span><br><span class=\"line\">        this.loading = false;</span><br><span class=\"line\">        Quagga.start();</span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">    &#125;, 500),</span><br><span class=\"line\">    stopScan() &#123;</span><br><span class=\"line\">      this.aimTimes = 0;</span><br><span class=\"line\">      this.loading = true;</span><br><span class=\"line\">      Quagga.pause();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    aimTimes(times) &#123;</span><br><span class=\"line\">      /**</span><br><span class=\"line\">       * 监听是否命中一定次数，如果命中了，发送并且锁上</span><br><span class=\"line\">       */</span><br><span class=\"line\">      if (times &gt; MAX_TIMES) &#123;</span><br><span class=\"line\">        this.stopScan();</span><br><span class=\"line\">        this.$refs.sound.play();</span><br><span class=\"line\">        this.$emit(&quot;input&quot;, this.barcode);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    let that = this;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * mounted初始化</span><br><span class=\"line\">     */</span><br><span class=\"line\">    that.loading = true;</span><br><span class=\"line\">    Quagga.init(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        inputStream: &#123;</span><br><span class=\"line\">          name: &quot;Live&quot;,</span><br><span class=\"line\">          type: &quot;LiveStream&quot;,</span><br><span class=\"line\">          target: this.$refs.container</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        decoder: &#123;</span><br><span class=\"line\">          readers: [&quot;i2of5_reader&quot;, &quot;2of5_reader&quot;]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      function(err) &#123;</span><br><span class=\"line\">        that.loading = false;</span><br><span class=\"line\">        if (err) &#123;</span><br><span class=\"line\">          console.log(err.message);</span><br><span class=\"line\">          if (!err.message.includes(&quot;Cannot read property&quot;)) &#123;</span><br><span class=\"line\">            that.errorMessage = err.message || err;</span><br><span class=\"line\">            Message(&#123;</span><br><span class=\"line\">              message: that.errorMessage,</span><br><span class=\"line\">              type: &quot;error&quot;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Quagga.onDetected(that.onDetected.bind(that));</span><br><span class=\"line\">        that.startScan();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy() &#123;</span><br><span class=\"line\">    Quagga.stop();</span><br><span class=\"line\">    Quagga.offDetected(this.onDetected);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style lang=&quot;less&quot;&gt;</span><br><span class=\"line\">/** @format */</span><br><span class=\"line\">@keyframes beam &#123;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes scanning &#123;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    transform: translateY(100%);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.scanner &#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  video &#123;</span><br><span class=\"line\">    width: 100% !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  canvas &#123;</span><br><span class=\"line\">    display: none !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .scanner-animation &#123;</span><br><span class=\"line\">    animation: scanning 2s infinite;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">    height: 50%;</span><br><span class=\"line\">    max-height: 300px;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">    .diode &#123;</span><br><span class=\"line\">      animation: beam 0.01s infinite;</span><br><span class=\"line\">      .laser &#123;</span><br><span class=\"line\">        width: 90%;</span><br><span class=\"line\">        margin-left: 5%;</span><br><span class=\"line\">        background-color: rgb(255, 99, 71);</span><br><span class=\"line\">        height: 1px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        z-index: 2;</span><br><span class=\"line\">        box-shadow: 0 0 4px #ff0000;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"浏览器实现扫码枪\"><a href=\"#浏览器实现扫码枪\" class=\"headerlink\" title=\"浏览器实现扫码枪\"></a>浏览器实现扫码枪</h1><p>先上代码，整个依赖了 quagga 这个库进行前端的一纬码解码 通过比较每次扫码出现的值一样出现一个阀值来判断是否扫到正确的数字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div v-loading=&quot;loading&quot; element-loading-text=&quot;请稍后&quot; class=&quot;scanner&quot;&gt;</span><br><span class=\"line\">    &lt;!-- 扫码完成后播放音频 --&gt;</span><br><span class=\"line\">    &lt;audio src=&quot;barcode-scan.mp3&quot; style=&quot;display:none&quot; ref=&quot;sound&quot;&gt;&lt;/audio&gt;</span><br><span class=\"line\">    &lt;div</span><br><span class=\"line\">      class=&quot;scanner-container&quot;</span><br><span class=\"line\">      ref=&quot;container&quot;</span><br><span class=\"line\">      style=&quot;width: 100%;height: 100%;&quot;</span><br><span class=\"line\">    /&gt;</span><br><span class=\"line\">    &lt;!-- 扫描器模拟 --&gt;</span><br><span class=\"line\">    &lt;div v-if=&quot;!loading &amp;&amp; !errorMessage&quot; class=&quot;scanner-animation&quot;&gt;</span><br><span class=\"line\">      &lt;div class=&quot;diode&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;laser&quot; /&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;div v-if=&quot;errorMessage&quot;&gt;&#123;&#123; errorMessage &#125;&#125;&lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">/** @format */</span><br><span class=\"line\">import Quagga from &quot;quagga&quot;;</span><br><span class=\"line\">import &#123; Message &#125; from &quot;element-ui&quot;;</span><br><span class=\"line\">import debounce from &quot;lodash/debounce&quot;;</span><br><span class=\"line\">const MAX_TIMES = 5; // 最大同步次数，超过这个值说明是正确的，可以进行核销</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 简单来说就是一个全屏扫码页，页面扫中某一个code超过规定次就当扫描成功，回调</span><br><span class=\"line\"> */</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      loading: false,</span><br><span class=\"line\">      barcode: &quot;&quot;,</span><br><span class=\"line\">      aimTimes: 0,</span><br><span class=\"line\">      errorMessage: &quot;&quot;,</span><br><span class=\"line\">      delay: 0</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onDetected(&#123; codeResult &#125;) &#123;</span><br><span class=\"line\">      const &#123; code &#125; = codeResult;</span><br><span class=\"line\">      console.log(&quot;找到&quot;, code);</span><br><span class=\"line\">      if (code !== this.barcode) &#123;</span><br><span class=\"line\">        this.barcode = code;</span><br><span class=\"line\">        this.aimTimes = 0;</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">        this.aimTimes++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    startScan: debounce(function(delay = 0) &#123;</span><br><span class=\"line\">      setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        this.delay = delay;</span><br><span class=\"line\">        this.aimTimes = 0;</span><br><span class=\"line\">        this.barcode = &quot;&quot;;</span><br><span class=\"line\">        this.loading = false;</span><br><span class=\"line\">        Quagga.start();</span><br><span class=\"line\">      &#125;, delay);</span><br><span class=\"line\">    &#125;, 500),</span><br><span class=\"line\">    stopScan() &#123;</span><br><span class=\"line\">      this.aimTimes = 0;</span><br><span class=\"line\">      this.loading = true;</span><br><span class=\"line\">      Quagga.pause();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  watch: &#123;</span><br><span class=\"line\">    aimTimes(times) &#123;</span><br><span class=\"line\">      /**</span><br><span class=\"line\">       * 监听是否命中一定次数，如果命中了，发送并且锁上</span><br><span class=\"line\">       */</span><br><span class=\"line\">      if (times &gt; MAX_TIMES) &#123;</span><br><span class=\"line\">        this.stopScan();</span><br><span class=\"line\">        this.$refs.sound.play();</span><br><span class=\"line\">        this.$emit(&quot;input&quot;, this.barcode);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    let that = this;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * mounted初始化</span><br><span class=\"line\">     */</span><br><span class=\"line\">    that.loading = true;</span><br><span class=\"line\">    Quagga.init(</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        inputStream: &#123;</span><br><span class=\"line\">          name: &quot;Live&quot;,</span><br><span class=\"line\">          type: &quot;LiveStream&quot;,</span><br><span class=\"line\">          target: this.$refs.container</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        decoder: &#123;</span><br><span class=\"line\">          readers: [&quot;i2of5_reader&quot;, &quot;2of5_reader&quot;]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      function(err) &#123;</span><br><span class=\"line\">        that.loading = false;</span><br><span class=\"line\">        if (err) &#123;</span><br><span class=\"line\">          console.log(err.message);</span><br><span class=\"line\">          if (!err.message.includes(&quot;Cannot read property&quot;)) &#123;</span><br><span class=\"line\">            that.errorMessage = err.message || err;</span><br><span class=\"line\">            Message(&#123;</span><br><span class=\"line\">              message: that.errorMessage,</span><br><span class=\"line\">              type: &quot;error&quot;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Quagga.onDetected(that.onDetected.bind(that));</span><br><span class=\"line\">        that.startScan();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeDestroy() &#123;</span><br><span class=\"line\">    Quagga.stop();</span><br><span class=\"line\">    Quagga.offDetected(this.onDetected);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;style lang=&quot;less&quot;&gt;</span><br><span class=\"line\">/** @format */</span><br><span class=\"line\">@keyframes beam &#123;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes scanning &#123;</span><br><span class=\"line\">  50% &#123;</span><br><span class=\"line\">    transform: translateY(100%);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.scanner &#123;</span><br><span class=\"line\">  position: relative;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  video &#123;</span><br><span class=\"line\">    width: 100% !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  canvas &#123;</span><br><span class=\"line\">    display: none !important;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  .scanner-animation &#123;</span><br><span class=\"line\">    animation: scanning 2s infinite;</span><br><span class=\"line\">    height: 100%;</span><br><span class=\"line\">    height: 50%;</span><br><span class=\"line\">    max-height: 300px;</span><br><span class=\"line\">    width: 100%;</span><br><span class=\"line\">    position: absolute;</span><br><span class=\"line\">    top: 0;</span><br><span class=\"line\">    bottom: 0;</span><br><span class=\"line\">    margin: auto;</span><br><span class=\"line\">    .diode &#123;</span><br><span class=\"line\">      animation: beam 0.01s infinite;</span><br><span class=\"line\">      .laser &#123;</span><br><span class=\"line\">        width: 90%;</span><br><span class=\"line\">        margin-left: 5%;</span><br><span class=\"line\">        background-color: rgb(255, 99, 71);</span><br><span class=\"line\">        height: 1px;</span><br><span class=\"line\">        position: absolute;</span><br><span class=\"line\">        top: 0;</span><br><span class=\"line\">        z-index: 2;</span><br><span class=\"line\">        box-shadow: 0 0 4px #ff0000;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"纯css实现table表头吸顶","date":"2019-09-09T04:11:57.000Z","_content":"\n# Position Sticky 与表格头\n\n> 原文章[https://css-tricks.com/position-sticky-and-table-headers/](https://css-tricks.com/position-sticky-and-table-headers/). 本身产品有个需求需要表格自动吸顶，本身用了 antd design 的 scroll 实现的，现在使用 css 实现，效果更好\n\n`thead`和`tr`上无法设置 style`position: sticky;`,\n到那时在`th`上却可以，这也意味着，其实你可以在一个传统的`table`上实现吸顶 header 效果，如果你不清楚吸顶实现的原理，大概实现起来会很棘手吧，使用 css 总比原先用 js 去监听事件然后改变`position`好得多\n\n## 兼容性\n\n[查看兼容性](https://caniuse.com/#search=sticky)\n只要不是 ie 这种活化石，基本都已经支持了\n\n## 使用\n\n1. 保证 table 的 position 为 relative\n2. 给每个 th 加上 sticky\n\n## 例子\n\n```less\n.stickyTable {\n  :global(table) {\n    position: relative;\n    :global(th) {\n      position: sticky;\n      top: 0;\n      z-index: 9999;\n    }\n  }\n}\n```\n","source":"_posts/纯css实现table表头吸顶.md","raw":"---\ntitle: 纯css实现table表头吸顶\ntags:\n  - 前端\n  - css\n  - 表格\n  - 吸顶\n  - sticky\ndate: 2019-09-09 12:11:57\ncategories: 可以公开的情报\n---\n\n# Position Sticky 与表格头\n\n> 原文章[https://css-tricks.com/position-sticky-and-table-headers/](https://css-tricks.com/position-sticky-and-table-headers/). 本身产品有个需求需要表格自动吸顶，本身用了 antd design 的 scroll 实现的，现在使用 css 实现，效果更好\n\n`thead`和`tr`上无法设置 style`position: sticky;`,\n到那时在`th`上却可以，这也意味着，其实你可以在一个传统的`table`上实现吸顶 header 效果，如果你不清楚吸顶实现的原理，大概实现起来会很棘手吧，使用 css 总比原先用 js 去监听事件然后改变`position`好得多\n\n## 兼容性\n\n[查看兼容性](https://caniuse.com/#search=sticky)\n只要不是 ie 这种活化石，基本都已经支持了\n\n## 使用\n\n1. 保证 table 的 position 为 relative\n2. 给每个 th 加上 sticky\n\n## 例子\n\n```less\n.stickyTable {\n  :global(table) {\n    position: relative;\n    :global(th) {\n      position: sticky;\n      top: 0;\n      z-index: 9999;\n    }\n  }\n}\n```\n","slug":"纯css实现table表头吸顶","published":1,"updated":"2020-01-08T14:08:44.166Z","_id":"ck55dkxil002kw6ilboe3f3a0","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Position-Sticky-与表格头\"><a href=\"#Position-Sticky-与表格头\" class=\"headerlink\" title=\"Position Sticky 与表格头\"></a>Position Sticky 与表格头</h1><blockquote>\n<p>原文章<a href=\"https://css-tricks.com/position-sticky-and-table-headers/\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com/position-sticky-and-table-headers/</a>. 本身产品有个需求需要表格自动吸顶，本身用了 antd design 的 scroll 实现的，现在使用 css 实现，效果更好</p>\n</blockquote>\n<p><code>thead</code>和<code>tr</code>上无法设置 style<code>position: sticky;</code>,<br>到那时在<code>th</code>上却可以，这也意味着，其实你可以在一个传统的<code>table</code>上实现吸顶 header 效果，如果你不清楚吸顶实现的原理，大概实现起来会很棘手吧，使用 css 总比原先用 js 去监听事件然后改变<code>position</code>好得多</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p><a href=\"https://caniuse.com/#search=sticky\" target=\"_blank\" rel=\"noopener\">查看兼容性</a><br>只要不是 ie 这种活化石，基本都已经支持了</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li>保证 table 的 position 为 relative</li>\n<li>给每个 th 加上 sticky</li>\n</ol>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stickyTable</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:global(table)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"selector-pseudo\">:global(th)</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: sticky;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">9999</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Position-Sticky-与表格头\"><a href=\"#Position-Sticky-与表格头\" class=\"headerlink\" title=\"Position Sticky 与表格头\"></a>Position Sticky 与表格头</h1><blockquote>\n<p>原文章<a href=\"https://css-tricks.com/position-sticky-and-table-headers/\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com/position-sticky-and-table-headers/</a>. 本身产品有个需求需要表格自动吸顶，本身用了 antd design 的 scroll 实现的，现在使用 css 实现，效果更好</p>\n</blockquote>\n<p><code>thead</code>和<code>tr</code>上无法设置 style<code>position: sticky;</code>,<br>到那时在<code>th</code>上却可以，这也意味着，其实你可以在一个传统的<code>table</code>上实现吸顶 header 效果，如果你不清楚吸顶实现的原理，大概实现起来会很棘手吧，使用 css 总比原先用 js 去监听事件然后改变<code>position</code>好得多</p>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><p><a href=\"https://caniuse.com/#search=sticky\" target=\"_blank\" rel=\"noopener\">查看兼容性</a><br>只要不是 ie 这种活化石，基本都已经支持了</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li>保证 table 的 position 为 relative</li>\n<li>给每个 th 加上 sticky</li>\n</ol>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.stickyTable</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:global(table)</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"selector-pseudo\">:global(th)</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: sticky;</span><br><span class=\"line\">      <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: <span class=\"number\">9999</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"自动给表格空单元格补上字符串","date":"2019-09-23T01:11:57.000Z","_content":"\n# 背景\n\nui 设计中，如果单元格内部为空的话，需要填充一个默认字符串标明是个空格子，本身计划使用 js 来做的，但是考虑到要需要遍历，判断等等一系列操作，而且 js 里 `0` 做 boolean 判断也是返回 false，无形中增加了判断的步骤，所以这个时候还是求助于万能的 css 吧\n\n以下为 less 代码\n\n```less\ntd:empty {\n  &::after {\n    content: \"-\";\n  }\n}\n```\n","source":"_posts/自动给表格空单元格补上字符串.md","raw":"---\ntitle: 自动给表格空单元格补上字符串\ntags:\n  - 前端\n  - css\n  - 表格\n  - 单元格\n  - 补全\ndate: 2019-09-23 09:11:57\ncategories: 可以公开的情报\n---\n\n# 背景\n\nui 设计中，如果单元格内部为空的话，需要填充一个默认字符串标明是个空格子，本身计划使用 js 来做的，但是考虑到要需要遍历，判断等等一系列操作，而且 js 里 `0` 做 boolean 判断也是返回 false，无形中增加了判断的步骤，所以这个时候还是求助于万能的 css 吧\n\n以下为 less 代码\n\n```less\ntd:empty {\n  &::after {\n    content: \"-\";\n  }\n}\n```\n","slug":"自动给表格空单元格补上字符串","published":1,"updated":"2019-09-23T01:39:13.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxio002ow6il4294rrf5","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>ui 设计中，如果单元格内部为空的话，需要填充一个默认字符串标明是个空格子，本身计划使用 js 来做的，但是考虑到要需要遍历，判断等等一系列操作，而且 js 里 <code>0</code> 做 boolean 判断也是返回 false，无形中增加了判断的步骤，所以这个时候还是求助于万能的 css 吧</p>\n<p>以下为 less 代码</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">td</span>:empty &#123;</span><br><span class=\"line\">  &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"-\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>ui 设计中，如果单元格内部为空的话，需要填充一个默认字符串标明是个空格子，本身计划使用 js 来做的，但是考虑到要需要遍历，判断等等一系列操作，而且 js 里 <code>0</code> 做 boolean 判断也是返回 false，无形中增加了判断的步骤，所以这个时候还是求助于万能的 css 吧</p>\n<p>以下为 less 代码</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">td</span>:empty &#123;</span><br><span class=\"line\">  &amp;::after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">\"-\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"记不住快捷键怎么办","date":"2018-10-15T14:04:25.000Z","_content":"# 记不住快捷键怎么办\n> 身为一个程序员怎么可以使用鼠标这么low的操作呢，但是快捷键就是记不住啊\n\n## Chectsheet\n按住command键两秒钟，CheatSheet就会自动弹出来，告诉你当前程序的快捷键都有哪些。简直是神器啊\n![图](https://www.mediaatelier.com/CheatSheet/imgs/main.png)\n\n### 下载地址\n[点我下载](https://www.mediaatelier.com/CheatSheet/)","source":"_posts/记不住快捷键怎么办.md","raw":"---\ntitle: 记不住快捷键怎么办\ndate: 2018-10-15 22:04:25\ntags: \n    - MAC\n    - OSX\n    - 软件推荐\ncategories: 可以公开的情报\n---\n# 记不住快捷键怎么办\n> 身为一个程序员怎么可以使用鼠标这么low的操作呢，但是快捷键就是记不住啊\n\n## Chectsheet\n按住command键两秒钟，CheatSheet就会自动弹出来，告诉你当前程序的快捷键都有哪些。简直是神器啊\n![图](https://www.mediaatelier.com/CheatSheet/imgs/main.png)\n\n### 下载地址\n[点我下载](https://www.mediaatelier.com/CheatSheet/)","slug":"记不住快捷键怎么办","published":1,"updated":"2018-10-15T14:11:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxiq002rw6il2249u478","content":"<h1 id=\"记不住快捷键怎么办\"><a href=\"#记不住快捷键怎么办\" class=\"headerlink\" title=\"记不住快捷键怎么办\"></a>记不住快捷键怎么办</h1><blockquote>\n<p>身为一个程序员怎么可以使用鼠标这么low的操作呢，但是快捷键就是记不住啊</p>\n</blockquote>\n<h2 id=\"Chectsheet\"><a href=\"#Chectsheet\" class=\"headerlink\" title=\"Chectsheet\"></a>Chectsheet</h2><p>按住command键两秒钟，CheatSheet就会自动弹出来，告诉你当前程序的快捷键都有哪些。简直是神器啊<br><img src=\"https://www.mediaatelier.com/CheatSheet/imgs/main.png\" alt=\"图\"></p>\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h3><p><a href=\"https://www.mediaatelier.com/CheatSheet/\" target=\"_blank\" rel=\"noopener\">点我下载</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"记不住快捷键怎么办\"><a href=\"#记不住快捷键怎么办\" class=\"headerlink\" title=\"记不住快捷键怎么办\"></a>记不住快捷键怎么办</h1><blockquote>\n<p>身为一个程序员怎么可以使用鼠标这么low的操作呢，但是快捷键就是记不住啊</p>\n</blockquote>\n<h2 id=\"Chectsheet\"><a href=\"#Chectsheet\" class=\"headerlink\" title=\"Chectsheet\"></a>Chectsheet</h2><p>按住command键两秒钟，CheatSheet就会自动弹出来，告诉你当前程序的快捷键都有哪些。简直是神器啊<br><img src=\"https://www.mediaatelier.com/CheatSheet/imgs/main.png\" alt=\"图\"></p>\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"下载地址\"></a>下载地址</h3><p><a href=\"https://www.mediaatelier.com/CheatSheet/\" target=\"_blank\" rel=\"noopener\">点我下载</a></p>\n"},{"title":"COS-镜音len-刹月华","date":"2020-02-09T02:32:18.000Z","_content":"\n# 镜音-刹月华\n\n> 是幻梦或现实　是梦时或醒时\n> 前进连声道好　退回则令人恐惧\n> 过去吧　过去吧\n> 已无法归去了　撩乱绽放吧\n\n几百年不拍片的回归系列感谢妆娘反君不嫌弃\n镜音连 cn: 水华\n摄影：紫羽-血色天堂 | 化妆：宛童加价不加量 | 后期：王老板\n\n<iframe style=\"border: 0; width: 100%; height: 1600px;\" src=\"https://t.bilibili.com/h5/dynamic/detail/54504589?tab=1&type=2\"/>\n","source":"_posts/镜音len-刹月华.md","raw":"---\ntitle: COS-镜音len-刹月华\ndate: 2020-02-09 10:32:18\ntags:\n  - 镜音\n  - cos\n  - 镜音len\ncategories: Cos\n---\n\n# 镜音-刹月华\n\n> 是幻梦或现实　是梦时或醒时\n> 前进连声道好　退回则令人恐惧\n> 过去吧　过去吧\n> 已无法归去了　撩乱绽放吧\n\n几百年不拍片的回归系列感谢妆娘反君不嫌弃\n镜音连 cn: 水华\n摄影：紫羽-血色天堂 | 化妆：宛童加价不加量 | 后期：王老板\n\n<iframe style=\"border: 0; width: 100%; height: 1600px;\" src=\"https://t.bilibili.com/h5/dynamic/detail/54504589?tab=1&type=2\"/>\n","slug":"镜音len-刹月华","published":1,"updated":"2020-02-09T15:07:54.014Z","_id":"ck55dkxiu002vw6ildxtfct8b","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"镜音-刹月华\"><a href=\"#镜音-刹月华\" class=\"headerlink\" title=\"镜音-刹月华\"></a>镜音-刹月华</h1><blockquote>\n<p>是幻梦或现实　是梦时或醒时<br>前进连声道好　退回则令人恐惧<br>过去吧　过去吧<br>已无法归去了　撩乱绽放吧</p>\n</blockquote>\n<p>几百年不拍片的回归系列感谢妆娘反君不嫌弃<br>镜音连 cn: 水华<br>摄影：紫羽-血色天堂 | 化妆：宛童加价不加量 | 后期：王老板</p>\n<iframe style=\"border: 0; width: 100%; height: 1600px;\" src=\"https://t.bilibili.com/h5/dynamic/detail/54504589?tab=1&type=2\">\n</iframe>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"镜音-刹月华\"><a href=\"#镜音-刹月华\" class=\"headerlink\" title=\"镜音-刹月华\"></a>镜音-刹月华</h1><blockquote>\n<p>是幻梦或现实　是梦时或醒时<br>前进连声道好　退回则令人恐惧<br>过去吧　过去吧<br>已无法归去了　撩乱绽放吧</p>\n</blockquote>\n<p>几百年不拍片的回归系列感谢妆娘反君不嫌弃<br>镜音连 cn: 水华<br>摄影：紫羽-血色天堂 | 化妆：宛童加价不加量 | 后期：王老板</p>\n<iframe style=\"border: 0; width: 100%; height: 1600px;\" src=\"https://t.bilibili.com/h5/dynamic/detail/54504589?tab=1&type=2\">\n</iframe>"},{"title":"postgresql全文搜索引擎","date":"2019-10-18T09:41:57.000Z","_content":"\n# 带权重的搜索引擎\n\n> [双十一背后的技术](https://github.com/digoal/blog/blob/462c0cf738380b0bfc080e99fd168c19bb2d4fce/201611/20161115_01.md) 参考此文 对其进行改进和自定义\n> 毫秒级的为[该文章](https://yq.aliyun.com/articles/68424?spm=a2c4e.11153959.blogcont61833.34.uwRpsS)\n\n## 具体实施流程\n\n### 分词(英文基本无需分词)\n\n#### [zhparser](https://github.com/amutu/zhparser)\n\n安装 SCWS.\n\n```\nwget -q -O - http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 | tar xf -\n\n cd scws-1.2.3 ; ./configure ; make install\n\n注意:在FreeBSD release 10及以上版本上运行configure时，需要增加--with-pic选项。\n\n如果是从github上下载的scws源码需要先运行以下命令生成configure文件：\n\n touch README;aclocal;autoconf;autoheader;libtoolize;automake --add-missing\n\n  git clone https://github.com/amutu/zhparser.git\n  cd zhparser\n  make && make install\n  CREATE EXTENSION zhparser;\n  CREATE TEXT SEARCH CONFIGURATION zhcfg (PARSER = zhparser);\n  ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR n,v,a,i,e,l,j,m WITH simple;\n\n\n```\n\n```\n\n增加类型\nselect ts_debug('zhcfg','三一') ;\n                ts_debug\n可以查看到分词的token类型 如果不在之前的mapping内的话是不会被分词的\n解决方案是\nALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR [没有的类型] WITH simple;\n\n```\n\n**设置分词参数**\n\n```\n-- 忽略所有的标点等特殊符号\nset zhparser.punctuation_ignore = on;\n-- 全部单字复合\nset zhparser.multi_zall = on;\n-- 散字二元复合\nset zhparser.multi_duality = on;\n-- 闲散文字自动以二字分词法聚合\nset zhparser.seg_with_duality = on;\n-- 短词复合\nset zhparser.multi_short = on;\n-- 重要单字复合\nset zhparser.multi_zmain = on;\n\n```\n\n**测试**\n\n`select to_tsvector('zhcfg','南京市长江大桥');测试用例`\n\n**中文单字等特殊需求**[PostgreSQL 中英文混合分词特殊规则(中文单字、英文单词) - 中英分明](https://github.com/digoal/blog/blob/master/201711/20171104_03.md)\n\n```\ncreate or replace function udf_to_tsvector(regconfig,text) returns tsvector as $$\n  SELECT array_to_tsvector(array_agg(token)) from ts_debug($1, $2)\n    where (char_length(token)=1 and octet_length(token)<>1 ) or (char_length(token)=octet_length(token));\n$$ language sql strict immutable;\n\n```\n\n### 按照字段进行搜索\n\n**用例**\n`select * from search_company where to_tsvector(company_name_cn) @@ to_tsquery('zhcfg', '上海');`\n\n**转化为行级(全字段)的方式，to_tsvector 传入的对象为转为 text 的该行**\n`select * from search_company where to_tsvector(search_company::text) @@ to_tsquery('zhcfg', '上海');`\n\n### 搜索用的固态视图\n\n> 通过固态视图事先对可以可以搜索的部分进行预处理 加速\n\n#### 特性\n\n1. 增加 ts 列 减少在搜索的时候动态创建的成本\n2. 利用 ts 列 可以进行**行级搜索**\n3. COALESCE 函数防止 null\n4. 顺带一提行的 ts 列可以参考[该文章](https://github.com/digoal/blog/blob/8946988f885a3f16f159082610d6ec9027ae21dd/201604/20160419_01.md) 但是自定义权重就不行，使用手动构建\n5. 附带一个 weight 的作为行的权重，上市为:2 非上市为 1 投资机构为 0\n6. weight 的 COALESCE 函数可以附带作为未来公司自带权重的时候的扩展\n7. setweight 函数的例子是设定字段的权重，字段内所有的关键字的权重将被统一设置 有 ABCD 之分 可以用来过滤分词 ts_filter 或者权重计算匹配度\n8. text 字段 这样模糊搜索可以加快一定速度了\n9. [zpharse 配置](https://yq.aliyun.com/articles/7730)\n10. 配置可以拼音搜索[参考](http://www.codeweblog.com/postgresql%E7%9A%84%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/)\n11. 建立索引`create index idx_test_ts on search_company using gin (ts);`\n12. 另一个转 pinyin 的方案[汉字转拼音](https://yq.aliyun.com/articles/228252) 已注入 有修改\n\n```\nSELECT\n    result.company_id,\n    result.company_logo,\n    result.ticker,\n    result.company_status_id,\n    result.company_name_cn,\n    result.company_name_en,\n    result.company_shortname_cn,\n    result.company_shortname_en,\n    result.brand_name,\n    result.year_founded,\n    result.company_status_name_cn,\n    result.company_status_name_en,\n    result.weight,\n    -- 添加支持拼音 不需要的话 直接用ts\n    ((get_pinyin((result.ts)::text))::tsvector || (get_pinyin((result.ts)::text, 'zm'::text))::tsvector || result.ts) AS ts\n FROM (\n SELECT computed_list.company_id,\n    computed_list.company_logo,\n    computed_list.ticker,\n    computed_list.company_status_id,\n    computed_list.company_name_cn,\n    computed_list.company_name_en,\n    computed_list.company_shortname_cn,\n    computed_list.company_shortname_en,\n    computed_list.brand_name,\n    computed_list.year_founded,\n    computed_list.company_status_name_cn,\n    computed_list.company_status_name_en,\n    -- 添加权重 将company_status_id转为权重 第一个null可以改为联查作为第三方权重\n    COALESCE(NULL::integer,\n        CASE\n            WHEN ((computed_list.company_status_id)::text ~~ '1%'::text) THEN 2\n            WHEN ((computed_list.company_status_id)::text ~~ '2%'::text) THEN 1\n            ELSE 0\n        END) AS weight,\n    -- 字段权重 有一部分比如company_shortname_cn用全部作为关键词\n    COALESCE(setweight(((computed_list.company_id) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_name_cn), 'A'), '') ||\n    COALESCE(setweight(to_tsvector(computed_list.company_name_en), 'A'), '') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_shortname_cn), 'A'), '') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_shortname_en), 'A'), '') ||\n    COALESCE(setweight(((computed_list.company_shortname_cn) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(((computed_list.company_status_name_en) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(((computed_list.brand_name) || ':1 ')::tsvector, 'A'::\"char\"),'')\n\tas ts\n\t-- 合并掉该合并的部分比如brand name\n   FROM ( SELECT list.company_id,\n            list.company_logo,\n            list.ticker,\n            list.company_status_id,\n            list.company_name_cn,\n            list.company_name_en,\n            list.company_shortname_cn,\n            list.company_shortname_en,\n            -- 合并brand_name\n            array_to_string(array_agg(list.brand_name), ','::text) AS brand_name,\n            list.year_founded,\n            list.company_status_name_cn,\n            list.company_status_name_en\n            -- 先整理原始的数据\n           FROM ( SELECT DISTINCT a.company_id,\n           \t\t\ta.company_logo,\n                    a.ticker,\n                    a.company_status_id,\n                    a.company_name_cn,\n                    a.company_name_en,\n                    a.company_shortname_cn,\n                    a.company_shortname_en,\n                    b.brand_name,\n                    a.year_founded,\n                    c.name_cn AS company_status_name_cn,\n                    c.name_en AS company_status_name_en\n                   FROM ((company_profile a\n                     LEFT JOIN brand_info b ON (((a.company_id)::text = (b.company_id)::text)))\n                     LEFT JOIN config.dictionary c ON (((a.company_status_id)::text = (c.id)::text)))\n                  WHERE ((a.company_status_id)::text <> '3.3'::text)) list\n          GROUP BY list.company_id, list.ticker, list.company_status_id, list.company_name_cn, list.company_name_en, list.company_shortname_cn, list.company_shortname_en, list.year_founded, list.company_status_name_cn, list.company_status_name_en) computed_list\n) AS RESULT\n\n```\n\n##### 查询方式\n\n说明 ts 为查询用的列  \norder by 通过权重和 ts_rank(和搜索词的匹配度) \\* 10 作为排序规则\n\n```\nSELECT DISTINCT\n\tcompany_id AS \"companyId\",\n\tcompany_logo AS \"companyLogo\",\n\tticker,\n\tbrand_name as \"brandName\",\n\tcompany_status_id AS \"companyStatusId\",\n\tcompany_name_cn AS \"companyNameCn\",\n\tcompany_name_en AS \"companyNameEn\",\n\tcompany_shortname_cn AS \"companyShortnameCn\",\n\tcompany_shortname_en AS \"companyShortnameEn\",\n\tts_rank(\n\t\tts,\n\t\tto_tsquery('zhcfg',lower('海思'))\n\t) * 10 + weight AS RANK\nFROM\n\tsearch_company\nWHERE\n-- 原本的全文搜索方式\n-- \tts @@ (phraseto_tsquery('zhcfg',lower('海思')) || phraseto_tsquery('zhcfg',upper('海思')))\n-- 通过模糊查询保证顺序 9.6可以更换为原本的全文搜索添加距离部分来完成\n\tts::text ~ upper('海思')\n\tor\n\tts:: text ~ lower('海思')\nORDER BY\n\tRANK DESC\nLIMIT 25\n\n\n```\n\n#### 拼音查询配置\n\n- 构建函数\n\n```\n\ncreate or replace function get_pinyin(vhz text, return_type text = 'py') returns text as $$\ndeclare\n  res_py text;\n  res_zm text;\n  tmp_py text;\n  tmp_zm text;\nbegin\nres_py:='';\nres_zm:='';\n-- 循环每个字进行替换\nfor i in 1..length(vhz)\nloop\n  select py,zm into tmp_py,tmp_zm from config.pinyin where hz=substring(vhz, i, 1);\n  if not found then\n    res_py := res_py || substring(vhz, i, 1);\n    res_zm := res_zm || substring(vhz, i, 1);\n  else\n    res_py := res_py || tmp_py;\n    res_zm := res_zm || tmp_zm;\n  end if;\nend loop;\n-- return lower(res_py || ' ' || res_zm);\n-- return return_type;\n-- 根据return type来看返回首字母还是全拼音\nif return_type = 'py' then\n  return lower(res_py);\nelse\n  return lower(res_zm);\nend if;\nend;\n\n$$ language plpgsql strict immutable;\n\n```\n\n- 引入表 py.sql(有道云)\n- 把分词结果转为拼音`get_pinyin('上海')`\n\n#### 重建索引 需要使用 pg_trgm\n\n```\n-- 引入 trgm\ncreate extension pg_trgm;\ncreate or replace function record_to_text(anyelement) returns text as $$\n  select $1::text;\n$$ language sql strict immutable;\n\n\ncreate or replace function textsend_i (text) returns bytea as $$\n  select textsend($1);\n$$ language sql strict immutable;\n\n-- 重建部分\ndrop index idx_search_company_ts ;\ncreate index idx_search_company_ts on search_company using gin(record_to_text(search_company) gin_trgm_ops);\n\n```\n\n#### 词典\n\n```\n-- 往自定义分词词典里面插入新的分词\ninsert into pg_ts_custom_word values ('保障房资');\n-- 使新的分词生效\nselect zhprs_sync_dict_xdb();\n-- 退出此连接\n```\n\n#### 跨数据库\n\n```\ncreate database product_v2_back with template template0 lc_collate 'zh_CN.utf8' lc_ctype 'zh_CN.utf8';\ncreate extension postgres_fdw;\ncreate server aliyun foreign data wrapper postgres_fdw options(dbname 'product_v2');\ncreate user mapping for jydreader server aliyun options(user 'jydreader',password 'Jyd6789!');\n\nCREATE FOREIGN TABLE search_engine(\nticker varchar,\ncompany_logo varchar,\ncompany_status_id varchar,\ncompany_name_cn varchar,\ncompany_name_en varchar,\ncompany_shortname_cn varchar,\ncompany_shortname_en varchar,\nbrand_name varchar,\nyear_founded varchar,\ncompany_status_name_cn varchar,\ncompany_status_name_en varchar,\nweight varchar,\nts tsvector\n) server aliyun options (schema_name 'public',table_name 'search_engine');\n\n```\n\n#### 两个字的搜索加速(gin 索引)\n\n```\ncreate or replace function split_gin_accelerate(text) returns text[] as $$\ndeclare\n  res text[];\nbegin\n  select regexp_split_to_array($1,'') into res;\n  for i in 1..length($1)-1 loop\n    res := array_append(res, substring($1,i,2));\n  end loop;\n  return res;\nend;\n$$ language plpgsql strict immutable;\n\n-- create index ids_foreign_search_engine_gin on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;\n-- create index ids_foreign_search_engine_gist on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;\ncreate index idx_foreign_search_engine_split_gin_accelerate on foreign_search_engine using gin (split_gin_accelerate(record_to_text(foreign_search_engine)));\n\n```\n\n## 后续开发计划\n\n1. 搜索引擎支持权重查询(完成) [教程](https://github.com/digoal/blog/blob/master/201604/20160419_01.md)\n2. 支持相似搜索 [教程](https://github.com/digoal/blog/blob/936be5892997fa312f8882977054066d852c77a4/201608/20160817_01.md)\n3. 支持拼音搜索(完成) [教程](https://github.com/digoal/blog/blob/master/201611/20161109_01.md?spm=5176.100239.blogcont64240.26.FVsDwc&file=20161109_01.md) [2](https://github.com/digoal/blog/blob/master/201605/20160511_01.md) [排序](https://github.com/digoal/blog/blob/master/201612/20161205_01.md)\n\n4. 自定义词典 [文章](https://github.com/digoal/blog/blob/76b23d76ae9ce9ec80bc836e6a2850f7a965e808/201603/20160310_01.md)\n5. 高效筛选 [文章](https://github.com/digoal/blog/blob/master/201706/20170607_02.md)\n","source":"_posts/postgresql 全文搜索引擎.md","raw":"---\ntitle: postgresql全文搜索引擎\ntags:\n  - 数据库\n  - 搜索引擎\n  - postgresql\ndate: 2019-10-18 17:41:57\ncategories: 可以公开的情报\n---\n\n# 带权重的搜索引擎\n\n> [双十一背后的技术](https://github.com/digoal/blog/blob/462c0cf738380b0bfc080e99fd168c19bb2d4fce/201611/20161115_01.md) 参考此文 对其进行改进和自定义\n> 毫秒级的为[该文章](https://yq.aliyun.com/articles/68424?spm=a2c4e.11153959.blogcont61833.34.uwRpsS)\n\n## 具体实施流程\n\n### 分词(英文基本无需分词)\n\n#### [zhparser](https://github.com/amutu/zhparser)\n\n安装 SCWS.\n\n```\nwget -q -O - http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 | tar xf -\n\n cd scws-1.2.3 ; ./configure ; make install\n\n注意:在FreeBSD release 10及以上版本上运行configure时，需要增加--with-pic选项。\n\n如果是从github上下载的scws源码需要先运行以下命令生成configure文件：\n\n touch README;aclocal;autoconf;autoheader;libtoolize;automake --add-missing\n\n  git clone https://github.com/amutu/zhparser.git\n  cd zhparser\n  make && make install\n  CREATE EXTENSION zhparser;\n  CREATE TEXT SEARCH CONFIGURATION zhcfg (PARSER = zhparser);\n  ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR n,v,a,i,e,l,j,m WITH simple;\n\n\n```\n\n```\n\n增加类型\nselect ts_debug('zhcfg','三一') ;\n                ts_debug\n可以查看到分词的token类型 如果不在之前的mapping内的话是不会被分词的\n解决方案是\nALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR [没有的类型] WITH simple;\n\n```\n\n**设置分词参数**\n\n```\n-- 忽略所有的标点等特殊符号\nset zhparser.punctuation_ignore = on;\n-- 全部单字复合\nset zhparser.multi_zall = on;\n-- 散字二元复合\nset zhparser.multi_duality = on;\n-- 闲散文字自动以二字分词法聚合\nset zhparser.seg_with_duality = on;\n-- 短词复合\nset zhparser.multi_short = on;\n-- 重要单字复合\nset zhparser.multi_zmain = on;\n\n```\n\n**测试**\n\n`select to_tsvector('zhcfg','南京市长江大桥');测试用例`\n\n**中文单字等特殊需求**[PostgreSQL 中英文混合分词特殊规则(中文单字、英文单词) - 中英分明](https://github.com/digoal/blog/blob/master/201711/20171104_03.md)\n\n```\ncreate or replace function udf_to_tsvector(regconfig,text) returns tsvector as $$\n  SELECT array_to_tsvector(array_agg(token)) from ts_debug($1, $2)\n    where (char_length(token)=1 and octet_length(token)<>1 ) or (char_length(token)=octet_length(token));\n$$ language sql strict immutable;\n\n```\n\n### 按照字段进行搜索\n\n**用例**\n`select * from search_company where to_tsvector(company_name_cn) @@ to_tsquery('zhcfg', '上海');`\n\n**转化为行级(全字段)的方式，to_tsvector 传入的对象为转为 text 的该行**\n`select * from search_company where to_tsvector(search_company::text) @@ to_tsquery('zhcfg', '上海');`\n\n### 搜索用的固态视图\n\n> 通过固态视图事先对可以可以搜索的部分进行预处理 加速\n\n#### 特性\n\n1. 增加 ts 列 减少在搜索的时候动态创建的成本\n2. 利用 ts 列 可以进行**行级搜索**\n3. COALESCE 函数防止 null\n4. 顺带一提行的 ts 列可以参考[该文章](https://github.com/digoal/blog/blob/8946988f885a3f16f159082610d6ec9027ae21dd/201604/20160419_01.md) 但是自定义权重就不行，使用手动构建\n5. 附带一个 weight 的作为行的权重，上市为:2 非上市为 1 投资机构为 0\n6. weight 的 COALESCE 函数可以附带作为未来公司自带权重的时候的扩展\n7. setweight 函数的例子是设定字段的权重，字段内所有的关键字的权重将被统一设置 有 ABCD 之分 可以用来过滤分词 ts_filter 或者权重计算匹配度\n8. text 字段 这样模糊搜索可以加快一定速度了\n9. [zpharse 配置](https://yq.aliyun.com/articles/7730)\n10. 配置可以拼音搜索[参考](http://www.codeweblog.com/postgresql%E7%9A%84%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/)\n11. 建立索引`create index idx_test_ts on search_company using gin (ts);`\n12. 另一个转 pinyin 的方案[汉字转拼音](https://yq.aliyun.com/articles/228252) 已注入 有修改\n\n```\nSELECT\n    result.company_id,\n    result.company_logo,\n    result.ticker,\n    result.company_status_id,\n    result.company_name_cn,\n    result.company_name_en,\n    result.company_shortname_cn,\n    result.company_shortname_en,\n    result.brand_name,\n    result.year_founded,\n    result.company_status_name_cn,\n    result.company_status_name_en,\n    result.weight,\n    -- 添加支持拼音 不需要的话 直接用ts\n    ((get_pinyin((result.ts)::text))::tsvector || (get_pinyin((result.ts)::text, 'zm'::text))::tsvector || result.ts) AS ts\n FROM (\n SELECT computed_list.company_id,\n    computed_list.company_logo,\n    computed_list.ticker,\n    computed_list.company_status_id,\n    computed_list.company_name_cn,\n    computed_list.company_name_en,\n    computed_list.company_shortname_cn,\n    computed_list.company_shortname_en,\n    computed_list.brand_name,\n    computed_list.year_founded,\n    computed_list.company_status_name_cn,\n    computed_list.company_status_name_en,\n    -- 添加权重 将company_status_id转为权重 第一个null可以改为联查作为第三方权重\n    COALESCE(NULL::integer,\n        CASE\n            WHEN ((computed_list.company_status_id)::text ~~ '1%'::text) THEN 2\n            WHEN ((computed_list.company_status_id)::text ~~ '2%'::text) THEN 1\n            ELSE 0\n        END) AS weight,\n    -- 字段权重 有一部分比如company_shortname_cn用全部作为关键词\n    COALESCE(setweight(((computed_list.company_id) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_name_cn), 'A'), '') ||\n    COALESCE(setweight(to_tsvector(computed_list.company_name_en), 'A'), '') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_shortname_cn), 'A'), '') ||\n    COALESCE(setweight(to_tsvector('zhcfg',computed_list.company_shortname_en), 'A'), '') ||\n    COALESCE(setweight(((computed_list.company_shortname_cn) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(((computed_list.company_status_name_en) || ':1 ')::tsvector, 'A'::\"char\"),'') ||\n    COALESCE(setweight(((computed_list.brand_name) || ':1 ')::tsvector, 'A'::\"char\"),'')\n\tas ts\n\t-- 合并掉该合并的部分比如brand name\n   FROM ( SELECT list.company_id,\n            list.company_logo,\n            list.ticker,\n            list.company_status_id,\n            list.company_name_cn,\n            list.company_name_en,\n            list.company_shortname_cn,\n            list.company_shortname_en,\n            -- 合并brand_name\n            array_to_string(array_agg(list.brand_name), ','::text) AS brand_name,\n            list.year_founded,\n            list.company_status_name_cn,\n            list.company_status_name_en\n            -- 先整理原始的数据\n           FROM ( SELECT DISTINCT a.company_id,\n           \t\t\ta.company_logo,\n                    a.ticker,\n                    a.company_status_id,\n                    a.company_name_cn,\n                    a.company_name_en,\n                    a.company_shortname_cn,\n                    a.company_shortname_en,\n                    b.brand_name,\n                    a.year_founded,\n                    c.name_cn AS company_status_name_cn,\n                    c.name_en AS company_status_name_en\n                   FROM ((company_profile a\n                     LEFT JOIN brand_info b ON (((a.company_id)::text = (b.company_id)::text)))\n                     LEFT JOIN config.dictionary c ON (((a.company_status_id)::text = (c.id)::text)))\n                  WHERE ((a.company_status_id)::text <> '3.3'::text)) list\n          GROUP BY list.company_id, list.ticker, list.company_status_id, list.company_name_cn, list.company_name_en, list.company_shortname_cn, list.company_shortname_en, list.year_founded, list.company_status_name_cn, list.company_status_name_en) computed_list\n) AS RESULT\n\n```\n\n##### 查询方式\n\n说明 ts 为查询用的列  \norder by 通过权重和 ts_rank(和搜索词的匹配度) \\* 10 作为排序规则\n\n```\nSELECT DISTINCT\n\tcompany_id AS \"companyId\",\n\tcompany_logo AS \"companyLogo\",\n\tticker,\n\tbrand_name as \"brandName\",\n\tcompany_status_id AS \"companyStatusId\",\n\tcompany_name_cn AS \"companyNameCn\",\n\tcompany_name_en AS \"companyNameEn\",\n\tcompany_shortname_cn AS \"companyShortnameCn\",\n\tcompany_shortname_en AS \"companyShortnameEn\",\n\tts_rank(\n\t\tts,\n\t\tto_tsquery('zhcfg',lower('海思'))\n\t) * 10 + weight AS RANK\nFROM\n\tsearch_company\nWHERE\n-- 原本的全文搜索方式\n-- \tts @@ (phraseto_tsquery('zhcfg',lower('海思')) || phraseto_tsquery('zhcfg',upper('海思')))\n-- 通过模糊查询保证顺序 9.6可以更换为原本的全文搜索添加距离部分来完成\n\tts::text ~ upper('海思')\n\tor\n\tts:: text ~ lower('海思')\nORDER BY\n\tRANK DESC\nLIMIT 25\n\n\n```\n\n#### 拼音查询配置\n\n- 构建函数\n\n```\n\ncreate or replace function get_pinyin(vhz text, return_type text = 'py') returns text as $$\ndeclare\n  res_py text;\n  res_zm text;\n  tmp_py text;\n  tmp_zm text;\nbegin\nres_py:='';\nres_zm:='';\n-- 循环每个字进行替换\nfor i in 1..length(vhz)\nloop\n  select py,zm into tmp_py,tmp_zm from config.pinyin where hz=substring(vhz, i, 1);\n  if not found then\n    res_py := res_py || substring(vhz, i, 1);\n    res_zm := res_zm || substring(vhz, i, 1);\n  else\n    res_py := res_py || tmp_py;\n    res_zm := res_zm || tmp_zm;\n  end if;\nend loop;\n-- return lower(res_py || ' ' || res_zm);\n-- return return_type;\n-- 根据return type来看返回首字母还是全拼音\nif return_type = 'py' then\n  return lower(res_py);\nelse\n  return lower(res_zm);\nend if;\nend;\n\n$$ language plpgsql strict immutable;\n\n```\n\n- 引入表 py.sql(有道云)\n- 把分词结果转为拼音`get_pinyin('上海')`\n\n#### 重建索引 需要使用 pg_trgm\n\n```\n-- 引入 trgm\ncreate extension pg_trgm;\ncreate or replace function record_to_text(anyelement) returns text as $$\n  select $1::text;\n$$ language sql strict immutable;\n\n\ncreate or replace function textsend_i (text) returns bytea as $$\n  select textsend($1);\n$$ language sql strict immutable;\n\n-- 重建部分\ndrop index idx_search_company_ts ;\ncreate index idx_search_company_ts on search_company using gin(record_to_text(search_company) gin_trgm_ops);\n\n```\n\n#### 词典\n\n```\n-- 往自定义分词词典里面插入新的分词\ninsert into pg_ts_custom_word values ('保障房资');\n-- 使新的分词生效\nselect zhprs_sync_dict_xdb();\n-- 退出此连接\n```\n\n#### 跨数据库\n\n```\ncreate database product_v2_back with template template0 lc_collate 'zh_CN.utf8' lc_ctype 'zh_CN.utf8';\ncreate extension postgres_fdw;\ncreate server aliyun foreign data wrapper postgres_fdw options(dbname 'product_v2');\ncreate user mapping for jydreader server aliyun options(user 'jydreader',password 'Jyd6789!');\n\nCREATE FOREIGN TABLE search_engine(\nticker varchar,\ncompany_logo varchar,\ncompany_status_id varchar,\ncompany_name_cn varchar,\ncompany_name_en varchar,\ncompany_shortname_cn varchar,\ncompany_shortname_en varchar,\nbrand_name varchar,\nyear_founded varchar,\ncompany_status_name_cn varchar,\ncompany_status_name_en varchar,\nweight varchar,\nts tsvector\n) server aliyun options (schema_name 'public',table_name 'search_engine');\n\n```\n\n#### 两个字的搜索加速(gin 索引)\n\n```\ncreate or replace function split_gin_accelerate(text) returns text[] as $$\ndeclare\n  res text[];\nbegin\n  select regexp_split_to_array($1,'') into res;\n  for i in 1..length($1)-1 loop\n    res := array_append(res, substring($1,i,2));\n  end loop;\n  return res;\nend;\n$$ language plpgsql strict immutable;\n\n-- create index ids_foreign_search_engine_gin on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;\n-- create index ids_foreign_search_engine_gist on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;\ncreate index idx_foreign_search_engine_split_gin_accelerate on foreign_search_engine using gin (split_gin_accelerate(record_to_text(foreign_search_engine)));\n\n```\n\n## 后续开发计划\n\n1. 搜索引擎支持权重查询(完成) [教程](https://github.com/digoal/blog/blob/master/201604/20160419_01.md)\n2. 支持相似搜索 [教程](https://github.com/digoal/blog/blob/936be5892997fa312f8882977054066d852c77a4/201608/20160817_01.md)\n3. 支持拼音搜索(完成) [教程](https://github.com/digoal/blog/blob/master/201611/20161109_01.md?spm=5176.100239.blogcont64240.26.FVsDwc&file=20161109_01.md) [2](https://github.com/digoal/blog/blob/master/201605/20160511_01.md) [排序](https://github.com/digoal/blog/blob/master/201612/20161205_01.md)\n\n4. 自定义词典 [文章](https://github.com/digoal/blog/blob/76b23d76ae9ce9ec80bc836e6a2850f7a965e808/201603/20160310_01.md)\n5. 高效筛选 [文章](https://github.com/digoal/blog/blob/master/201706/20170607_02.md)\n","slug":"postgresql 全文搜索引擎","published":1,"updated":"2019-10-18T08:44:33.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxof008cw6ileieyb2oi","content":"<h1 id=\"带权重的搜索引擎\"><a href=\"#带权重的搜索引擎\" class=\"headerlink\" title=\"带权重的搜索引擎\"></a>带权重的搜索引擎</h1><blockquote>\n<p><a href=\"https://github.com/digoal/blog/blob/462c0cf738380b0bfc080e99fd168c19bb2d4fce/201611/20161115_01.md\" target=\"_blank\" rel=\"noopener\">双十一背后的技术</a> 参考此文 对其进行改进和自定义<br>毫秒级的为<a href=\"https://yq.aliyun.com/articles/68424?spm=a2c4e.11153959.blogcont61833.34.uwRpsS\" target=\"_blank\" rel=\"noopener\">该文章</a></p>\n</blockquote>\n<h2 id=\"具体实施流程\"><a href=\"#具体实施流程\" class=\"headerlink\" title=\"具体实施流程\"></a>具体实施流程</h2><h3 id=\"分词-英文基本无需分词\"><a href=\"#分词-英文基本无需分词\" class=\"headerlink\" title=\"分词(英文基本无需分词)\"></a>分词(英文基本无需分词)</h3><h4 id=\"zhparser\"><a href=\"#zhparser\" class=\"headerlink\" title=\"zhparser\"></a><a href=\"https://github.com/amutu/zhparser\" target=\"_blank\" rel=\"noopener\">zhparser</a></h4><p>安装 SCWS.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q -O - http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 | tar xf -</span><br><span class=\"line\"></span><br><span class=\"line\"> cd scws-1.2.3 ; ./configure ; make install</span><br><span class=\"line\"></span><br><span class=\"line\">注意:在FreeBSD release 10及以上版本上运行configure时，需要增加--with-pic选项。</span><br><span class=\"line\"></span><br><span class=\"line\">如果是从github上下载的scws源码需要先运行以下命令生成configure文件：</span><br><span class=\"line\"></span><br><span class=\"line\"> touch README;aclocal;autoconf;autoheader;libtoolize;automake --add-missing</span><br><span class=\"line\"></span><br><span class=\"line\">  git clone https://github.com/amutu/zhparser.git</span><br><span class=\"line\">  cd zhparser</span><br><span class=\"line\">  make &amp;&amp; make install</span><br><span class=\"line\">  CREATE EXTENSION zhparser;</span><br><span class=\"line\">  CREATE TEXT SEARCH CONFIGURATION zhcfg (PARSER = zhparser);</span><br><span class=\"line\">  ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR n,v,a,i,e,l,j,m WITH simple;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">增加类型</span><br><span class=\"line\">select ts_debug(&apos;zhcfg&apos;,&apos;三一&apos;) ;</span><br><span class=\"line\">                ts_debug</span><br><span class=\"line\">可以查看到分词的token类型 如果不在之前的mapping内的话是不会被分词的</span><br><span class=\"line\">解决方案是</span><br><span class=\"line\">ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR [没有的类型] WITH simple;</span><br></pre></td></tr></table></figure>\n<p><strong>设置分词参数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 忽略所有的标点等特殊符号</span><br><span class=\"line\">set zhparser.punctuation_ignore = on;</span><br><span class=\"line\">-- 全部单字复合</span><br><span class=\"line\">set zhparser.multi_zall = on;</span><br><span class=\"line\">-- 散字二元复合</span><br><span class=\"line\">set zhparser.multi_duality = on;</span><br><span class=\"line\">-- 闲散文字自动以二字分词法聚合</span><br><span class=\"line\">set zhparser.seg_with_duality = on;</span><br><span class=\"line\">-- 短词复合</span><br><span class=\"line\">set zhparser.multi_short = on;</span><br><span class=\"line\">-- 重要单字复合</span><br><span class=\"line\">set zhparser.multi_zmain = on;</span><br></pre></td></tr></table></figure>\n<p><strong>测试</strong></p>\n<p><code>select to_tsvector(&#39;zhcfg&#39;,&#39;南京市长江大桥&#39;);测试用例</code></p>\n<p><strong>中文单字等特殊需求</strong><a href=\"https://github.com/digoal/blog/blob/master/201711/20171104_03.md\" target=\"_blank\" rel=\"noopener\">PostgreSQL 中英文混合分词特殊规则(中文单字、英文单词) - 中英分明</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create or replace function udf_to_tsvector(regconfig,text) returns tsvector as $$</span><br><span class=\"line\">  SELECT array_to_tsvector(array_agg(token)) from ts_debug($1, $2)</span><br><span class=\"line\">    where (char_length(token)=1 and octet_length(token)&lt;&gt;1 ) or (char_length(token)=octet_length(token));</span><br><span class=\"line\">$$ language sql strict immutable;</span><br></pre></td></tr></table></figure>\n<h3 id=\"按照字段进行搜索\"><a href=\"#按照字段进行搜索\" class=\"headerlink\" title=\"按照字段进行搜索\"></a>按照字段进行搜索</h3><p><strong>用例</strong><br><code>select * from search_company where to_tsvector(company_name_cn) @@ to_tsquery(&#39;zhcfg&#39;, &#39;上海&#39;);</code></p>\n<p><strong>转化为行级(全字段)的方式，to_tsvector 传入的对象为转为 text 的该行</strong><br><code>select * from search_company where to_tsvector(search_company::text) @@ to_tsquery(&#39;zhcfg&#39;, &#39;上海&#39;);</code></p>\n<h3 id=\"搜索用的固态视图\"><a href=\"#搜索用的固态视图\" class=\"headerlink\" title=\"搜索用的固态视图\"></a>搜索用的固态视图</h3><blockquote>\n<p>通过固态视图事先对可以可以搜索的部分进行预处理 加速</p>\n</blockquote>\n<h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><ol>\n<li>增加 ts 列 减少在搜索的时候动态创建的成本</li>\n<li>利用 ts 列 可以进行<strong>行级搜索</strong></li>\n<li>COALESCE 函数防止 null</li>\n<li>顺带一提行的 ts 列可以参考<a href=\"https://github.com/digoal/blog/blob/8946988f885a3f16f159082610d6ec9027ae21dd/201604/20160419_01.md\" target=\"_blank\" rel=\"noopener\">该文章</a> 但是自定义权重就不行，使用手动构建</li>\n<li>附带一个 weight 的作为行的权重，上市为:2 非上市为 1 投资机构为 0</li>\n<li>weight 的 COALESCE 函数可以附带作为未来公司自带权重的时候的扩展</li>\n<li>setweight 函数的例子是设定字段的权重，字段内所有的关键字的权重将被统一设置 有 ABCD 之分 可以用来过滤分词 ts_filter 或者权重计算匹配度</li>\n<li>text 字段 这样模糊搜索可以加快一定速度了</li>\n<li><a href=\"https://yq.aliyun.com/articles/7730\" target=\"_blank\" rel=\"noopener\">zpharse 配置</a></li>\n<li>配置可以拼音搜索<a href=\"http://www.codeweblog.com/postgresql%E7%9A%84%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/\" target=\"_blank\" rel=\"noopener\">参考</a></li>\n<li>建立索引<code>create index idx_test_ts on search_company using gin (ts);</code></li>\n<li>另一个转 pinyin 的方案<a href=\"https://yq.aliyun.com/articles/228252\" target=\"_blank\" rel=\"noopener\">汉字转拼音</a> 已注入 有修改</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">    result.company_id,</span><br><span class=\"line\">    result.company_logo,</span><br><span class=\"line\">    result.ticker,</span><br><span class=\"line\">    result.company_status_id,</span><br><span class=\"line\">    result.company_name_cn,</span><br><span class=\"line\">    result.company_name_en,</span><br><span class=\"line\">    result.company_shortname_cn,</span><br><span class=\"line\">    result.company_shortname_en,</span><br><span class=\"line\">    result.brand_name,</span><br><span class=\"line\">    result.year_founded,</span><br><span class=\"line\">    result.company_status_name_cn,</span><br><span class=\"line\">    result.company_status_name_en,</span><br><span class=\"line\">    result.weight,</span><br><span class=\"line\">    -- 添加支持拼音 不需要的话 直接用ts</span><br><span class=\"line\">    ((get_pinyin((result.ts)::text))::tsvector || (get_pinyin((result.ts)::text, &apos;zm&apos;::text))::tsvector || result.ts) AS ts</span><br><span class=\"line\"> FROM (</span><br><span class=\"line\"> SELECT computed_list.company_id,</span><br><span class=\"line\">    computed_list.company_logo,</span><br><span class=\"line\">    computed_list.ticker,</span><br><span class=\"line\">    computed_list.company_status_id,</span><br><span class=\"line\">    computed_list.company_name_cn,</span><br><span class=\"line\">    computed_list.company_name_en,</span><br><span class=\"line\">    computed_list.company_shortname_cn,</span><br><span class=\"line\">    computed_list.company_shortname_en,</span><br><span class=\"line\">    computed_list.brand_name,</span><br><span class=\"line\">    computed_list.year_founded,</span><br><span class=\"line\">    computed_list.company_status_name_cn,</span><br><span class=\"line\">    computed_list.company_status_name_en,</span><br><span class=\"line\">    -- 添加权重 将company_status_id转为权重 第一个null可以改为联查作为第三方权重</span><br><span class=\"line\">    COALESCE(NULL::integer,</span><br><span class=\"line\">        CASE</span><br><span class=\"line\">            WHEN ((computed_list.company_status_id)::text ~~ &apos;1%&apos;::text) THEN 2</span><br><span class=\"line\">            WHEN ((computed_list.company_status_id)::text ~~ &apos;2%&apos;::text) THEN 1</span><br><span class=\"line\">            ELSE 0</span><br><span class=\"line\">        END) AS weight,</span><br><span class=\"line\">    -- 字段权重 有一部分比如company_shortname_cn用全部作为关键词</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_id) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_name_cn), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(computed_list.company_name_en), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_shortname_cn), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_shortname_en), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_shortname_cn) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_status_name_en) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.brand_name) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;)</span><br><span class=\"line\">\tas ts</span><br><span class=\"line\">\t-- 合并掉该合并的部分比如brand name</span><br><span class=\"line\">   FROM ( SELECT list.company_id,</span><br><span class=\"line\">            list.company_logo,</span><br><span class=\"line\">            list.ticker,</span><br><span class=\"line\">            list.company_status_id,</span><br><span class=\"line\">            list.company_name_cn,</span><br><span class=\"line\">            list.company_name_en,</span><br><span class=\"line\">            list.company_shortname_cn,</span><br><span class=\"line\">            list.company_shortname_en,</span><br><span class=\"line\">            -- 合并brand_name</span><br><span class=\"line\">            array_to_string(array_agg(list.brand_name), &apos;,&apos;::text) AS brand_name,</span><br><span class=\"line\">            list.year_founded,</span><br><span class=\"line\">            list.company_status_name_cn,</span><br><span class=\"line\">            list.company_status_name_en</span><br><span class=\"line\">            -- 先整理原始的数据</span><br><span class=\"line\">           FROM ( SELECT DISTINCT a.company_id,</span><br><span class=\"line\">           \t\t\ta.company_logo,</span><br><span class=\"line\">                    a.ticker,</span><br><span class=\"line\">                    a.company_status_id,</span><br><span class=\"line\">                    a.company_name_cn,</span><br><span class=\"line\">                    a.company_name_en,</span><br><span class=\"line\">                    a.company_shortname_cn,</span><br><span class=\"line\">                    a.company_shortname_en,</span><br><span class=\"line\">                    b.brand_name,</span><br><span class=\"line\">                    a.year_founded,</span><br><span class=\"line\">                    c.name_cn AS company_status_name_cn,</span><br><span class=\"line\">                    c.name_en AS company_status_name_en</span><br><span class=\"line\">                   FROM ((company_profile a</span><br><span class=\"line\">                     LEFT JOIN brand_info b ON (((a.company_id)::text = (b.company_id)::text)))</span><br><span class=\"line\">                     LEFT JOIN config.dictionary c ON (((a.company_status_id)::text = (c.id)::text)))</span><br><span class=\"line\">                  WHERE ((a.company_status_id)::text &lt;&gt; &apos;3.3&apos;::text)) list</span><br><span class=\"line\">          GROUP BY list.company_id, list.ticker, list.company_status_id, list.company_name_cn, list.company_name_en, list.company_shortname_cn, list.company_shortname_en, list.year_founded, list.company_status_name_cn, list.company_status_name_en) computed_list</span><br><span class=\"line\">) AS RESULT</span><br></pre></td></tr></table></figure>\n<h5 id=\"查询方式\"><a href=\"#查询方式\" class=\"headerlink\" title=\"查询方式\"></a>查询方式</h5><p>说明 ts 为查询用的列<br>order by 通过权重和 ts_rank(和搜索词的匹配度) * 10 作为排序规则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT DISTINCT</span><br><span class=\"line\">\tcompany_id AS &quot;companyId&quot;,</span><br><span class=\"line\">\tcompany_logo AS &quot;companyLogo&quot;,</span><br><span class=\"line\">\tticker,</span><br><span class=\"line\">\tbrand_name as &quot;brandName&quot;,</span><br><span class=\"line\">\tcompany_status_id AS &quot;companyStatusId&quot;,</span><br><span class=\"line\">\tcompany_name_cn AS &quot;companyNameCn&quot;,</span><br><span class=\"line\">\tcompany_name_en AS &quot;companyNameEn&quot;,</span><br><span class=\"line\">\tcompany_shortname_cn AS &quot;companyShortnameCn&quot;,</span><br><span class=\"line\">\tcompany_shortname_en AS &quot;companyShortnameEn&quot;,</span><br><span class=\"line\">\tts_rank(</span><br><span class=\"line\">\t\tts,</span><br><span class=\"line\">\t\tto_tsquery(&apos;zhcfg&apos;,lower(&apos;海思&apos;))</span><br><span class=\"line\">\t) * 10 + weight AS RANK</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tsearch_company</span><br><span class=\"line\">WHERE</span><br><span class=\"line\">-- 原本的全文搜索方式</span><br><span class=\"line\">-- \tts @@ (phraseto_tsquery(&apos;zhcfg&apos;,lower(&apos;海思&apos;)) || phraseto_tsquery(&apos;zhcfg&apos;,upper(&apos;海思&apos;)))</span><br><span class=\"line\">-- 通过模糊查询保证顺序 9.6可以更换为原本的全文搜索添加距离部分来完成</span><br><span class=\"line\">\tts::text ~ upper(&apos;海思&apos;)</span><br><span class=\"line\">\tor</span><br><span class=\"line\">\tts:: text ~ lower(&apos;海思&apos;)</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tRANK DESC</span><br><span class=\"line\">LIMIT 25</span><br></pre></td></tr></table></figure>\n<h4 id=\"拼音查询配置\"><a href=\"#拼音查询配置\" class=\"headerlink\" title=\"拼音查询配置\"></a>拼音查询配置</h4><ul>\n<li>构建函数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">create or replace function get_pinyin(vhz text, return_type text = &apos;py&apos;) returns text as $$</span><br><span class=\"line\">declare</span><br><span class=\"line\">  res_py text;</span><br><span class=\"line\">  res_zm text;</span><br><span class=\"line\">  tmp_py text;</span><br><span class=\"line\">  tmp_zm text;</span><br><span class=\"line\">begin</span><br><span class=\"line\">res_py:=&apos;&apos;;</span><br><span class=\"line\">res_zm:=&apos;&apos;;</span><br><span class=\"line\">-- 循环每个字进行替换</span><br><span class=\"line\">for i in 1..length(vhz)</span><br><span class=\"line\">loop</span><br><span class=\"line\">  select py,zm into tmp_py,tmp_zm from config.pinyin where hz=substring(vhz, i, 1);</span><br><span class=\"line\">  if not found then</span><br><span class=\"line\">    res_py := res_py || substring(vhz, i, 1);</span><br><span class=\"line\">    res_zm := res_zm || substring(vhz, i, 1);</span><br><span class=\"line\">  else</span><br><span class=\"line\">    res_py := res_py || tmp_py;</span><br><span class=\"line\">    res_zm := res_zm || tmp_zm;</span><br><span class=\"line\">  end if;</span><br><span class=\"line\">end loop;</span><br><span class=\"line\">-- return lower(res_py || &apos; &apos; || res_zm);</span><br><span class=\"line\">-- return return_type;</span><br><span class=\"line\">-- 根据return type来看返回首字母还是全拼音</span><br><span class=\"line\">if return_type = &apos;py&apos; then</span><br><span class=\"line\">  return lower(res_py);</span><br><span class=\"line\">else</span><br><span class=\"line\">  return lower(res_zm);</span><br><span class=\"line\">end if;</span><br><span class=\"line\">end;</span><br><span class=\"line\"></span><br><span class=\"line\">$$ language plpgsql strict immutable;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>引入表 py.sql(有道云)</li>\n<li>把分词结果转为拼音<code>get_pinyin(&#39;上海&#39;)</code></li>\n</ul>\n<h4 id=\"重建索引-需要使用-pg-trgm\"><a href=\"#重建索引-需要使用-pg-trgm\" class=\"headerlink\" title=\"重建索引 需要使用 pg_trgm\"></a>重建索引 需要使用 pg_trgm</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 引入 trgm</span><br><span class=\"line\">create extension pg_trgm;</span><br><span class=\"line\">create or replace function record_to_text(anyelement) returns text as $$</span><br><span class=\"line\">  select $1::text;</span><br><span class=\"line\">$$ language sql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">create or replace function textsend_i (text) returns bytea as $$</span><br><span class=\"line\">  select textsend($1);</span><br><span class=\"line\">$$ language sql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 重建部分</span><br><span class=\"line\">drop index idx_search_company_ts ;</span><br><span class=\"line\">create index idx_search_company_ts on search_company using gin(record_to_text(search_company) gin_trgm_ops);</span><br></pre></td></tr></table></figure>\n<h4 id=\"词典\"><a href=\"#词典\" class=\"headerlink\" title=\"词典\"></a>词典</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 往自定义分词词典里面插入新的分词</span><br><span class=\"line\">insert into pg_ts_custom_word values (&apos;保障房资&apos;);</span><br><span class=\"line\">-- 使新的分词生效</span><br><span class=\"line\">select zhprs_sync_dict_xdb();</span><br><span class=\"line\">-- 退出此连接</span><br></pre></td></tr></table></figure>\n<h4 id=\"跨数据库\"><a href=\"#跨数据库\" class=\"headerlink\" title=\"跨数据库\"></a>跨数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database product_v2_back with template template0 lc_collate &apos;zh_CN.utf8&apos; lc_ctype &apos;zh_CN.utf8&apos;;</span><br><span class=\"line\">create extension postgres_fdw;</span><br><span class=\"line\">create server aliyun foreign data wrapper postgres_fdw options(dbname &apos;product_v2&apos;);</span><br><span class=\"line\">create user mapping for jydreader server aliyun options(user &apos;jydreader&apos;,password &apos;Jyd6789!&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE FOREIGN TABLE search_engine(</span><br><span class=\"line\">ticker varchar,</span><br><span class=\"line\">company_logo varchar,</span><br><span class=\"line\">company_status_id varchar,</span><br><span class=\"line\">company_name_cn varchar,</span><br><span class=\"line\">company_name_en varchar,</span><br><span class=\"line\">company_shortname_cn varchar,</span><br><span class=\"line\">company_shortname_en varchar,</span><br><span class=\"line\">brand_name varchar,</span><br><span class=\"line\">year_founded varchar,</span><br><span class=\"line\">company_status_name_cn varchar,</span><br><span class=\"line\">company_status_name_en varchar,</span><br><span class=\"line\">weight varchar,</span><br><span class=\"line\">ts tsvector</span><br><span class=\"line\">) server aliyun options (schema_name &apos;public&apos;,table_name &apos;search_engine&apos;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"两个字的搜索加速-gin-索引\"><a href=\"#两个字的搜索加速-gin-索引\" class=\"headerlink\" title=\"两个字的搜索加速(gin 索引)\"></a>两个字的搜索加速(gin 索引)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create or replace function split_gin_accelerate(text) returns text[] as $$</span><br><span class=\"line\">declare</span><br><span class=\"line\">  res text[];</span><br><span class=\"line\">begin</span><br><span class=\"line\">  select regexp_split_to_array($1,&apos;&apos;) into res;</span><br><span class=\"line\">  for i in 1..length($1)-1 loop</span><br><span class=\"line\">    res := array_append(res, substring($1,i,2));</span><br><span class=\"line\">  end loop;</span><br><span class=\"line\">  return res;</span><br><span class=\"line\">end;</span><br><span class=\"line\">$$ language plpgsql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\">-- create index ids_foreign_search_engine_gin on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;</span><br><span class=\"line\">-- create index ids_foreign_search_engine_gist on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;</span><br><span class=\"line\">create index idx_foreign_search_engine_split_gin_accelerate on foreign_search_engine using gin (split_gin_accelerate(record_to_text(foreign_search_engine)));</span><br></pre></td></tr></table></figure>\n<h2 id=\"后续开发计划\"><a href=\"#后续开发计划\" class=\"headerlink\" title=\"后续开发计划\"></a>后续开发计划</h2><ol>\n<li>搜索引擎支持权重查询(完成) <a href=\"https://github.com/digoal/blog/blob/master/201604/20160419_01.md\" target=\"_blank\" rel=\"noopener\">教程</a></li>\n<li>支持相似搜索 <a href=\"https://github.com/digoal/blog/blob/936be5892997fa312f8882977054066d852c77a4/201608/20160817_01.md\" target=\"_blank\" rel=\"noopener\">教程</a></li>\n<li><p>支持拼音搜索(完成) <a href=\"https://github.com/digoal/blog/blob/master/201611/20161109_01.md?spm=5176.100239.blogcont64240.26.FVsDwc&amp;file=20161109_01.md\" target=\"_blank\" rel=\"noopener\">教程</a> <a href=\"https://github.com/digoal/blog/blob/master/201605/20160511_01.md\" target=\"_blank\" rel=\"noopener\">2</a> <a href=\"https://github.com/digoal/blog/blob/master/201612/20161205_01.md\" target=\"_blank\" rel=\"noopener\">排序</a></p>\n</li>\n<li><p>自定义词典 <a href=\"https://github.com/digoal/blog/blob/76b23d76ae9ce9ec80bc836e6a2850f7a965e808/201603/20160310_01.md\" target=\"_blank\" rel=\"noopener\">文章</a></p>\n</li>\n<li>高效筛选 <a href=\"https://github.com/digoal/blog/blob/master/201706/20170607_02.md\" target=\"_blank\" rel=\"noopener\">文章</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"带权重的搜索引擎\"><a href=\"#带权重的搜索引擎\" class=\"headerlink\" title=\"带权重的搜索引擎\"></a>带权重的搜索引擎</h1><blockquote>\n<p><a href=\"https://github.com/digoal/blog/blob/462c0cf738380b0bfc080e99fd168c19bb2d4fce/201611/20161115_01.md\" target=\"_blank\" rel=\"noopener\">双十一背后的技术</a> 参考此文 对其进行改进和自定义<br>毫秒级的为<a href=\"https://yq.aliyun.com/articles/68424?spm=a2c4e.11153959.blogcont61833.34.uwRpsS\" target=\"_blank\" rel=\"noopener\">该文章</a></p>\n</blockquote>\n<h2 id=\"具体实施流程\"><a href=\"#具体实施流程\" class=\"headerlink\" title=\"具体实施流程\"></a>具体实施流程</h2><h3 id=\"分词-英文基本无需分词\"><a href=\"#分词-英文基本无需分词\" class=\"headerlink\" title=\"分词(英文基本无需分词)\"></a>分词(英文基本无需分词)</h3><h4 id=\"zhparser\"><a href=\"#zhparser\" class=\"headerlink\" title=\"zhparser\"></a><a href=\"https://github.com/amutu/zhparser\" target=\"_blank\" rel=\"noopener\">zhparser</a></h4><p>安装 SCWS.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q -O - http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2 | tar xf -</span><br><span class=\"line\"></span><br><span class=\"line\"> cd scws-1.2.3 ; ./configure ; make install</span><br><span class=\"line\"></span><br><span class=\"line\">注意:在FreeBSD release 10及以上版本上运行configure时，需要增加--with-pic选项。</span><br><span class=\"line\"></span><br><span class=\"line\">如果是从github上下载的scws源码需要先运行以下命令生成configure文件：</span><br><span class=\"line\"></span><br><span class=\"line\"> touch README;aclocal;autoconf;autoheader;libtoolize;automake --add-missing</span><br><span class=\"line\"></span><br><span class=\"line\">  git clone https://github.com/amutu/zhparser.git</span><br><span class=\"line\">  cd zhparser</span><br><span class=\"line\">  make &amp;&amp; make install</span><br><span class=\"line\">  CREATE EXTENSION zhparser;</span><br><span class=\"line\">  CREATE TEXT SEARCH CONFIGURATION zhcfg (PARSER = zhparser);</span><br><span class=\"line\">  ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR n,v,a,i,e,l,j,m WITH simple;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">增加类型</span><br><span class=\"line\">select ts_debug(&apos;zhcfg&apos;,&apos;三一&apos;) ;</span><br><span class=\"line\">                ts_debug</span><br><span class=\"line\">可以查看到分词的token类型 如果不在之前的mapping内的话是不会被分词的</span><br><span class=\"line\">解决方案是</span><br><span class=\"line\">ALTER TEXT SEARCH CONFIGURATION zhcfg ADD MAPPING FOR [没有的类型] WITH simple;</span><br></pre></td></tr></table></figure>\n<p><strong>设置分词参数</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 忽略所有的标点等特殊符号</span><br><span class=\"line\">set zhparser.punctuation_ignore = on;</span><br><span class=\"line\">-- 全部单字复合</span><br><span class=\"line\">set zhparser.multi_zall = on;</span><br><span class=\"line\">-- 散字二元复合</span><br><span class=\"line\">set zhparser.multi_duality = on;</span><br><span class=\"line\">-- 闲散文字自动以二字分词法聚合</span><br><span class=\"line\">set zhparser.seg_with_duality = on;</span><br><span class=\"line\">-- 短词复合</span><br><span class=\"line\">set zhparser.multi_short = on;</span><br><span class=\"line\">-- 重要单字复合</span><br><span class=\"line\">set zhparser.multi_zmain = on;</span><br></pre></td></tr></table></figure>\n<p><strong>测试</strong></p>\n<p><code>select to_tsvector(&#39;zhcfg&#39;,&#39;南京市长江大桥&#39;);测试用例</code></p>\n<p><strong>中文单字等特殊需求</strong><a href=\"https://github.com/digoal/blog/blob/master/201711/20171104_03.md\" target=\"_blank\" rel=\"noopener\">PostgreSQL 中英文混合分词特殊规则(中文单字、英文单词) - 中英分明</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create or replace function udf_to_tsvector(regconfig,text) returns tsvector as $$</span><br><span class=\"line\">  SELECT array_to_tsvector(array_agg(token)) from ts_debug($1, $2)</span><br><span class=\"line\">    where (char_length(token)=1 and octet_length(token)&lt;&gt;1 ) or (char_length(token)=octet_length(token));</span><br><span class=\"line\">$$ language sql strict immutable;</span><br></pre></td></tr></table></figure>\n<h3 id=\"按照字段进行搜索\"><a href=\"#按照字段进行搜索\" class=\"headerlink\" title=\"按照字段进行搜索\"></a>按照字段进行搜索</h3><p><strong>用例</strong><br><code>select * from search_company where to_tsvector(company_name_cn) @@ to_tsquery(&#39;zhcfg&#39;, &#39;上海&#39;);</code></p>\n<p><strong>转化为行级(全字段)的方式，to_tsvector 传入的对象为转为 text 的该行</strong><br><code>select * from search_company where to_tsvector(search_company::text) @@ to_tsquery(&#39;zhcfg&#39;, &#39;上海&#39;);</code></p>\n<h3 id=\"搜索用的固态视图\"><a href=\"#搜索用的固态视图\" class=\"headerlink\" title=\"搜索用的固态视图\"></a>搜索用的固态视图</h3><blockquote>\n<p>通过固态视图事先对可以可以搜索的部分进行预处理 加速</p>\n</blockquote>\n<h4 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h4><ol>\n<li>增加 ts 列 减少在搜索的时候动态创建的成本</li>\n<li>利用 ts 列 可以进行<strong>行级搜索</strong></li>\n<li>COALESCE 函数防止 null</li>\n<li>顺带一提行的 ts 列可以参考<a href=\"https://github.com/digoal/blog/blob/8946988f885a3f16f159082610d6ec9027ae21dd/201604/20160419_01.md\" target=\"_blank\" rel=\"noopener\">该文章</a> 但是自定义权重就不行，使用手动构建</li>\n<li>附带一个 weight 的作为行的权重，上市为:2 非上市为 1 投资机构为 0</li>\n<li>weight 的 COALESCE 函数可以附带作为未来公司自带权重的时候的扩展</li>\n<li>setweight 函数的例子是设定字段的权重，字段内所有的关键字的权重将被统一设置 有 ABCD 之分 可以用来过滤分词 ts_filter 或者权重计算匹配度</li>\n<li>text 字段 这样模糊搜索可以加快一定速度了</li>\n<li><a href=\"https://yq.aliyun.com/articles/7730\" target=\"_blank\" rel=\"noopener\">zpharse 配置</a></li>\n<li>配置可以拼音搜索<a href=\"http://www.codeweblog.com/postgresql%E7%9A%84%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/\" target=\"_blank\" rel=\"noopener\">参考</a></li>\n<li>建立索引<code>create index idx_test_ts on search_company using gin (ts);</code></li>\n<li>另一个转 pinyin 的方案<a href=\"https://yq.aliyun.com/articles/228252\" target=\"_blank\" rel=\"noopener\">汉字转拼音</a> 已注入 有修改</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">    result.company_id,</span><br><span class=\"line\">    result.company_logo,</span><br><span class=\"line\">    result.ticker,</span><br><span class=\"line\">    result.company_status_id,</span><br><span class=\"line\">    result.company_name_cn,</span><br><span class=\"line\">    result.company_name_en,</span><br><span class=\"line\">    result.company_shortname_cn,</span><br><span class=\"line\">    result.company_shortname_en,</span><br><span class=\"line\">    result.brand_name,</span><br><span class=\"line\">    result.year_founded,</span><br><span class=\"line\">    result.company_status_name_cn,</span><br><span class=\"line\">    result.company_status_name_en,</span><br><span class=\"line\">    result.weight,</span><br><span class=\"line\">    -- 添加支持拼音 不需要的话 直接用ts</span><br><span class=\"line\">    ((get_pinyin((result.ts)::text))::tsvector || (get_pinyin((result.ts)::text, &apos;zm&apos;::text))::tsvector || result.ts) AS ts</span><br><span class=\"line\"> FROM (</span><br><span class=\"line\"> SELECT computed_list.company_id,</span><br><span class=\"line\">    computed_list.company_logo,</span><br><span class=\"line\">    computed_list.ticker,</span><br><span class=\"line\">    computed_list.company_status_id,</span><br><span class=\"line\">    computed_list.company_name_cn,</span><br><span class=\"line\">    computed_list.company_name_en,</span><br><span class=\"line\">    computed_list.company_shortname_cn,</span><br><span class=\"line\">    computed_list.company_shortname_en,</span><br><span class=\"line\">    computed_list.brand_name,</span><br><span class=\"line\">    computed_list.year_founded,</span><br><span class=\"line\">    computed_list.company_status_name_cn,</span><br><span class=\"line\">    computed_list.company_status_name_en,</span><br><span class=\"line\">    -- 添加权重 将company_status_id转为权重 第一个null可以改为联查作为第三方权重</span><br><span class=\"line\">    COALESCE(NULL::integer,</span><br><span class=\"line\">        CASE</span><br><span class=\"line\">            WHEN ((computed_list.company_status_id)::text ~~ &apos;1%&apos;::text) THEN 2</span><br><span class=\"line\">            WHEN ((computed_list.company_status_id)::text ~~ &apos;2%&apos;::text) THEN 1</span><br><span class=\"line\">            ELSE 0</span><br><span class=\"line\">        END) AS weight,</span><br><span class=\"line\">    -- 字段权重 有一部分比如company_shortname_cn用全部作为关键词</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_id) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_name_cn), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(computed_list.company_name_en), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_shortname_cn), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(to_tsvector(&apos;zhcfg&apos;,computed_list.company_shortname_en), &apos;A&apos;), &apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_shortname_cn) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.company_status_name_en) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;) ||</span><br><span class=\"line\">    COALESCE(setweight(((computed_list.brand_name) || &apos;:1 &apos;)::tsvector, &apos;A&apos;::&quot;char&quot;),&apos;&apos;)</span><br><span class=\"line\">\tas ts</span><br><span class=\"line\">\t-- 合并掉该合并的部分比如brand name</span><br><span class=\"line\">   FROM ( SELECT list.company_id,</span><br><span class=\"line\">            list.company_logo,</span><br><span class=\"line\">            list.ticker,</span><br><span class=\"line\">            list.company_status_id,</span><br><span class=\"line\">            list.company_name_cn,</span><br><span class=\"line\">            list.company_name_en,</span><br><span class=\"line\">            list.company_shortname_cn,</span><br><span class=\"line\">            list.company_shortname_en,</span><br><span class=\"line\">            -- 合并brand_name</span><br><span class=\"line\">            array_to_string(array_agg(list.brand_name), &apos;,&apos;::text) AS brand_name,</span><br><span class=\"line\">            list.year_founded,</span><br><span class=\"line\">            list.company_status_name_cn,</span><br><span class=\"line\">            list.company_status_name_en</span><br><span class=\"line\">            -- 先整理原始的数据</span><br><span class=\"line\">           FROM ( SELECT DISTINCT a.company_id,</span><br><span class=\"line\">           \t\t\ta.company_logo,</span><br><span class=\"line\">                    a.ticker,</span><br><span class=\"line\">                    a.company_status_id,</span><br><span class=\"line\">                    a.company_name_cn,</span><br><span class=\"line\">                    a.company_name_en,</span><br><span class=\"line\">                    a.company_shortname_cn,</span><br><span class=\"line\">                    a.company_shortname_en,</span><br><span class=\"line\">                    b.brand_name,</span><br><span class=\"line\">                    a.year_founded,</span><br><span class=\"line\">                    c.name_cn AS company_status_name_cn,</span><br><span class=\"line\">                    c.name_en AS company_status_name_en</span><br><span class=\"line\">                   FROM ((company_profile a</span><br><span class=\"line\">                     LEFT JOIN brand_info b ON (((a.company_id)::text = (b.company_id)::text)))</span><br><span class=\"line\">                     LEFT JOIN config.dictionary c ON (((a.company_status_id)::text = (c.id)::text)))</span><br><span class=\"line\">                  WHERE ((a.company_status_id)::text &lt;&gt; &apos;3.3&apos;::text)) list</span><br><span class=\"line\">          GROUP BY list.company_id, list.ticker, list.company_status_id, list.company_name_cn, list.company_name_en, list.company_shortname_cn, list.company_shortname_en, list.year_founded, list.company_status_name_cn, list.company_status_name_en) computed_list</span><br><span class=\"line\">) AS RESULT</span><br></pre></td></tr></table></figure>\n<h5 id=\"查询方式\"><a href=\"#查询方式\" class=\"headerlink\" title=\"查询方式\"></a>查询方式</h5><p>说明 ts 为查询用的列<br>order by 通过权重和 ts_rank(和搜索词的匹配度) * 10 作为排序规则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT DISTINCT</span><br><span class=\"line\">\tcompany_id AS &quot;companyId&quot;,</span><br><span class=\"line\">\tcompany_logo AS &quot;companyLogo&quot;,</span><br><span class=\"line\">\tticker,</span><br><span class=\"line\">\tbrand_name as &quot;brandName&quot;,</span><br><span class=\"line\">\tcompany_status_id AS &quot;companyStatusId&quot;,</span><br><span class=\"line\">\tcompany_name_cn AS &quot;companyNameCn&quot;,</span><br><span class=\"line\">\tcompany_name_en AS &quot;companyNameEn&quot;,</span><br><span class=\"line\">\tcompany_shortname_cn AS &quot;companyShortnameCn&quot;,</span><br><span class=\"line\">\tcompany_shortname_en AS &quot;companyShortnameEn&quot;,</span><br><span class=\"line\">\tts_rank(</span><br><span class=\"line\">\t\tts,</span><br><span class=\"line\">\t\tto_tsquery(&apos;zhcfg&apos;,lower(&apos;海思&apos;))</span><br><span class=\"line\">\t) * 10 + weight AS RANK</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tsearch_company</span><br><span class=\"line\">WHERE</span><br><span class=\"line\">-- 原本的全文搜索方式</span><br><span class=\"line\">-- \tts @@ (phraseto_tsquery(&apos;zhcfg&apos;,lower(&apos;海思&apos;)) || phraseto_tsquery(&apos;zhcfg&apos;,upper(&apos;海思&apos;)))</span><br><span class=\"line\">-- 通过模糊查询保证顺序 9.6可以更换为原本的全文搜索添加距离部分来完成</span><br><span class=\"line\">\tts::text ~ upper(&apos;海思&apos;)</span><br><span class=\"line\">\tor</span><br><span class=\"line\">\tts:: text ~ lower(&apos;海思&apos;)</span><br><span class=\"line\">ORDER BY</span><br><span class=\"line\">\tRANK DESC</span><br><span class=\"line\">LIMIT 25</span><br></pre></td></tr></table></figure>\n<h4 id=\"拼音查询配置\"><a href=\"#拼音查询配置\" class=\"headerlink\" title=\"拼音查询配置\"></a>拼音查询配置</h4><ul>\n<li>构建函数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">create or replace function get_pinyin(vhz text, return_type text = &apos;py&apos;) returns text as $$</span><br><span class=\"line\">declare</span><br><span class=\"line\">  res_py text;</span><br><span class=\"line\">  res_zm text;</span><br><span class=\"line\">  tmp_py text;</span><br><span class=\"line\">  tmp_zm text;</span><br><span class=\"line\">begin</span><br><span class=\"line\">res_py:=&apos;&apos;;</span><br><span class=\"line\">res_zm:=&apos;&apos;;</span><br><span class=\"line\">-- 循环每个字进行替换</span><br><span class=\"line\">for i in 1..length(vhz)</span><br><span class=\"line\">loop</span><br><span class=\"line\">  select py,zm into tmp_py,tmp_zm from config.pinyin where hz=substring(vhz, i, 1);</span><br><span class=\"line\">  if not found then</span><br><span class=\"line\">    res_py := res_py || substring(vhz, i, 1);</span><br><span class=\"line\">    res_zm := res_zm || substring(vhz, i, 1);</span><br><span class=\"line\">  else</span><br><span class=\"line\">    res_py := res_py || tmp_py;</span><br><span class=\"line\">    res_zm := res_zm || tmp_zm;</span><br><span class=\"line\">  end if;</span><br><span class=\"line\">end loop;</span><br><span class=\"line\">-- return lower(res_py || &apos; &apos; || res_zm);</span><br><span class=\"line\">-- return return_type;</span><br><span class=\"line\">-- 根据return type来看返回首字母还是全拼音</span><br><span class=\"line\">if return_type = &apos;py&apos; then</span><br><span class=\"line\">  return lower(res_py);</span><br><span class=\"line\">else</span><br><span class=\"line\">  return lower(res_zm);</span><br><span class=\"line\">end if;</span><br><span class=\"line\">end;</span><br><span class=\"line\"></span><br><span class=\"line\">$$ language plpgsql strict immutable;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>引入表 py.sql(有道云)</li>\n<li>把分词结果转为拼音<code>get_pinyin(&#39;上海&#39;)</code></li>\n</ul>\n<h4 id=\"重建索引-需要使用-pg-trgm\"><a href=\"#重建索引-需要使用-pg-trgm\" class=\"headerlink\" title=\"重建索引 需要使用 pg_trgm\"></a>重建索引 需要使用 pg_trgm</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 引入 trgm</span><br><span class=\"line\">create extension pg_trgm;</span><br><span class=\"line\">create or replace function record_to_text(anyelement) returns text as $$</span><br><span class=\"line\">  select $1::text;</span><br><span class=\"line\">$$ language sql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">create or replace function textsend_i (text) returns bytea as $$</span><br><span class=\"line\">  select textsend($1);</span><br><span class=\"line\">$$ language sql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 重建部分</span><br><span class=\"line\">drop index idx_search_company_ts ;</span><br><span class=\"line\">create index idx_search_company_ts on search_company using gin(record_to_text(search_company) gin_trgm_ops);</span><br></pre></td></tr></table></figure>\n<h4 id=\"词典\"><a href=\"#词典\" class=\"headerlink\" title=\"词典\"></a>词典</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 往自定义分词词典里面插入新的分词</span><br><span class=\"line\">insert into pg_ts_custom_word values (&apos;保障房资&apos;);</span><br><span class=\"line\">-- 使新的分词生效</span><br><span class=\"line\">select zhprs_sync_dict_xdb();</span><br><span class=\"line\">-- 退出此连接</span><br></pre></td></tr></table></figure>\n<h4 id=\"跨数据库\"><a href=\"#跨数据库\" class=\"headerlink\" title=\"跨数据库\"></a>跨数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database product_v2_back with template template0 lc_collate &apos;zh_CN.utf8&apos; lc_ctype &apos;zh_CN.utf8&apos;;</span><br><span class=\"line\">create extension postgres_fdw;</span><br><span class=\"line\">create server aliyun foreign data wrapper postgres_fdw options(dbname &apos;product_v2&apos;);</span><br><span class=\"line\">create user mapping for jydreader server aliyun options(user &apos;jydreader&apos;,password &apos;Jyd6789!&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">CREATE FOREIGN TABLE search_engine(</span><br><span class=\"line\">ticker varchar,</span><br><span class=\"line\">company_logo varchar,</span><br><span class=\"line\">company_status_id varchar,</span><br><span class=\"line\">company_name_cn varchar,</span><br><span class=\"line\">company_name_en varchar,</span><br><span class=\"line\">company_shortname_cn varchar,</span><br><span class=\"line\">company_shortname_en varchar,</span><br><span class=\"line\">brand_name varchar,</span><br><span class=\"line\">year_founded varchar,</span><br><span class=\"line\">company_status_name_cn varchar,</span><br><span class=\"line\">company_status_name_en varchar,</span><br><span class=\"line\">weight varchar,</span><br><span class=\"line\">ts tsvector</span><br><span class=\"line\">) server aliyun options (schema_name &apos;public&apos;,table_name &apos;search_engine&apos;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"两个字的搜索加速-gin-索引\"><a href=\"#两个字的搜索加速-gin-索引\" class=\"headerlink\" title=\"两个字的搜索加速(gin 索引)\"></a>两个字的搜索加速(gin 索引)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create or replace function split_gin_accelerate(text) returns text[] as $$</span><br><span class=\"line\">declare</span><br><span class=\"line\">  res text[];</span><br><span class=\"line\">begin</span><br><span class=\"line\">  select regexp_split_to_array($1,&apos;&apos;) into res;</span><br><span class=\"line\">  for i in 1..length($1)-1 loop</span><br><span class=\"line\">    res := array_append(res, substring($1,i,2));</span><br><span class=\"line\">  end loop;</span><br><span class=\"line\">  return res;</span><br><span class=\"line\">end;</span><br><span class=\"line\">$$ language plpgsql strict immutable;</span><br><span class=\"line\"></span><br><span class=\"line\">-- create index ids_foreign_search_engine_gin on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;</span><br><span class=\"line\">-- create index ids_foreign_search_engine_gist on foreign_search_engine using gin (record_to_text(foreign_search_engine) gin_trgm_ops) ;</span><br><span class=\"line\">create index idx_foreign_search_engine_split_gin_accelerate on foreign_search_engine using gin (split_gin_accelerate(record_to_text(foreign_search_engine)));</span><br></pre></td></tr></table></figure>\n<h2 id=\"后续开发计划\"><a href=\"#后续开发计划\" class=\"headerlink\" title=\"后续开发计划\"></a>后续开发计划</h2><ol>\n<li>搜索引擎支持权重查询(完成) <a href=\"https://github.com/digoal/blog/blob/master/201604/20160419_01.md\" target=\"_blank\" rel=\"noopener\">教程</a></li>\n<li>支持相似搜索 <a href=\"https://github.com/digoal/blog/blob/936be5892997fa312f8882977054066d852c77a4/201608/20160817_01.md\" target=\"_blank\" rel=\"noopener\">教程</a></li>\n<li><p>支持拼音搜索(完成) <a href=\"https://github.com/digoal/blog/blob/master/201611/20161109_01.md?spm=5176.100239.blogcont64240.26.FVsDwc&amp;file=20161109_01.md\" target=\"_blank\" rel=\"noopener\">教程</a> <a href=\"https://github.com/digoal/blog/blob/master/201605/20160511_01.md\" target=\"_blank\" rel=\"noopener\">2</a> <a href=\"https://github.com/digoal/blog/blob/master/201612/20161205_01.md\" target=\"_blank\" rel=\"noopener\">排序</a></p>\n</li>\n<li><p>自定义词典 <a href=\"https://github.com/digoal/blog/blob/76b23d76ae9ce9ec80bc836e6a2850f7a965e808/201603/20160310_01.md\" target=\"_blank\" rel=\"noopener\">文章</a></p>\n</li>\n<li>高效筛选 <a href=\"https://github.com/digoal/blog/blob/master/201706/20170607_02.md\" target=\"_blank\" rel=\"noopener\">文章</a></li>\n</ol>\n"},{"title":"我们是怎么从ng迁移到vue的","date":"2019-01-03T13:41:57.000Z","_content":"# 我们是如何从ng1迁移ing到vue的\n> 原本的技术栈 ng1 + gulp + slim + \n> vue *2 + iframe 的一个后端管理项目\n\n\n[![](https://badge.juejin.im/entry/5c2e10c7f265da613d7c31ee/likes.svg?style=flat-square)](https://juejin.im/post/5c2e109fe51d453fdd604763)\n\n![](https://camo.githubusercontent.com/5082953bc69645086be2b2ac5e1a8fa20eff0314/68747470733a2f2f73696e676c652d7370612e6a732e6f72672f696d672f6c6f676f2d77686974652d6267626c75652e737667)\n\n这是一个本身因为人手不足，一开始由后端同学创建的后端管理项目，基本采用了gulp + ng1来进行开发，同时前端接手之后为了方便开发以及跟上潮流，采用了新开子目录使用vue开发，nginx和iframe进行整合的方式，最后一个项目变成了三个项目，其实最开始进行开发的时候，连怎么启动都不知道😂\n\n# 要解决的问题\n## 项目的层级结构\n### 原本的结构\n顶级目录只包含多个子文件夹以及build.sh，每个子项目需要独立进行编译以及开发\n\n### 新的结构\n采用signle-spa作为入口文件解决方案，统一管理所有项目的入口文件，实现一次启动，所有项目都能一起开发以及编译，省去了来回切换以及端口冲突\n\n## 构建语言的混乱\n### 原本的架构\n原本的app是使用ng1来进行编写js部分，slim来编写页面模版，同时使用gulp来完成遍历所有的js文件，并打包到一个js中，后来一些新的页面部分采用iframe引入另一个vue-cli项目，两者之间通过cookie来进行登录数据的共享。\n\n### 更新之后的架构\n因为模版文件的问题，仍然以gulp为主，webpack负责vue和原本app的js打包和资源文件的编译工作，大家约定好，原本的ng部分尽量不更新，新的采用vue进行编写\n\n## 逐步过渡\n### 原本的方案\n老的不管它，需要更新就回去更新，新的需求去vue的项目中编写\n\n### 现在的方案\nsingle-spa进行页面的拆分，将需要更新的老的ng部分作为一个新的子app，拆分出来之后再进行更新，保证局部更新，不影响整体\n\n# 解决过程\n## 编译工具\n确定了整体的迁移方案之后，就是首先对编译工具的改造了，最开始是想把gulp先替换成webpack的（因为习惯配置webpack了，以及webpack4 + babel7真的编译速度快了很多）\n\n但是因为slim始终找不到适合使用的webpack插件的关系，最终决定还是保留gulp进行编译ng的相关的html文件\n\n### 小问题\n#### gulp支持webpack的问题\ngulp-webpack插件支持的webpack版本是2，但是目标是使用4(为了快),好在webpack支持使用node来进行调用，只要在编译结束之后给gulp一个回调就可以了\n\n```javascript\n\nconst webpack = require('webpack')\nconst fs = require('fs')\n\nmodule.exports = function (webpackConfig) {\n  return new Promise((resolve, reject) => {\n    const compiler = webpack(webpackConfig);\n\n    compiler.run((err, stats) => {\n      if (err) {\n        console.error(err)\n        reject(err)\n      }\n\n      // 输出\n      process.stdout.write(stats.toString({\n        // stats对象中保存着编译过程中的各种消息\n        colors: true, // 增加控制台颜色开关\n        modules: false, // 不增加内置模块信息\n        children: false, // 不增加子级信息\n        chunks: false, // 允许较少的输出\n        chunkModules: false // 不将内置模块的信息加到包信息\n      }) + '\\n\\n')\n    })\n\n    compiler.hooks.afterEmit.tap('gulp', function() {\n      resolve()\n    })\n  })\n}\n\n```\n\n同理，devServer也使用自定义的脚本, 当然因为公司原因，其中的api切换也直接放在devServer的before中\n\n```\n/**\n * webpack的devserver\n */\nconst webpack = require(\"webpack\");\nconst WebpackDevServer = require(\"webpack-dev-server\");\nconst proxy = require(\"http-proxy-middleware\");\n\nlet env = \"dev\"; // 环境\n\nmodule.exports = function(config) {\n  return new Promise((resolve, reject) => {\n    // node模式下需要进行配置\n    let devServerConfig = config.devServer;\n    let devPath = `http://${devServerConfig.host}:${devServerConfig.port}/`;\n    config.entry.app.unshift(\"webpack/hot/dev-server\");\n    config.entry.app.unshift(`webpack-dev-server/client?${devPath}`);\n\n    const server = new WebpackDevServer(webpack(config), {\n      open: devServerConfig.open,\n      contentBase: config.output.path,\n      publicPath: config.output.publicPath,\n      hot: true,\n      disableHostCheck: devServerConfig.disableHostCheck,\n      historyApiFallback: true,\n      inline: devServerConfig.inline,\n      watchContentBase: devServerConfig.watchContentBase,\n      before: function(app) {\n        \n      },\n      stats: {\n        colors: true\n      }\n    });\n\n    server.listen(devServerConfig.port, devServerConfig.host, function(err) {\n      if (err) {\n        console.log(err);\n        reject(err);\n      }\n\n      console.log(`Listening at ${devPath}`);\n      resolve();\n    });\n  });\n};\n\n\n```\n\n## 统一构建和开发\n因为使用的语言不一样，负责的页面不一样，Store和Route也不一样，想要统一的话，就必须解决这些问题\n\n### single-spa\n> SINGLE-SPA是一个 JavaScript 元框架，它允许我们使用不同的框架构建微前端，而这些框架可以共存于单个应用中。\n\n![](https://upload-images.jianshu.io/upload_images/2267652-a636f8d7cce8768f.png)\n后端微服务架构（microservice style）已经流行了一段时间了，那么前端能不能同样使用微服务呢？页面拆分成不同的部分，互相之间互不干扰又紧密相连，single-spa正是为此而出现的，而且更好的事，single-spa支持几乎所有的前端开发框架，是一个框架的元框架，而我们的迁移目标正好就是将原本的ng部分拆分成一个个小的app然后逐步迁移到vue上么\n\n### 统一Store\n最终决定使用vuex作为整个项目的Store，但是如何与ng本身的rootScope进行整合就又是一个问题了，好在通过import引入的js文件的作用域是共同的，只需要将ng的rootScope挂载上vuex，然后vuex使用插件的形式反过来触发更新ng就行了. \n\n```javascript\nimport store from '../store'\n\nObject.assign(store.state, {\n    _ng: {\n      $rootScope: $rootScope,\n      $state: $state\n    }\n  })\n```\n\n```javascript\n/**\n * 同步这些数据到ng的Scope里\n * @param store\n */\nexport const ngPlugin = store => {\n  // 当 store 初始化后调用\n  store.subscribe(({ type, payload }, state) => {\n    if (state._ng) {\n      state._ng.$rootScope[type] = payload\n      state._ng.$rootScope.$apply()\n    }\n  })\n}\n\n```\n\n\n### 统一路由\n目前仍然各自为政，只不过路由跳转方式通过指令的方式，将vue和ng的跳转修改为使用single-spa的路由跳转方式. 当然，因为之前ng的路由是继续hash而不是history，所以还有一部分兼容操作\n\n```javascript\nimport { navigateToUrl } from 'single-spa'\n\ndirectives: {\n      // spa链接\n      spaLink (element, {value}) {\n        element.style.display = 'inline-block'\n        element.style.width = '100%'\n        // 自动判断hash类型\n        let hash = (value || '').includes('#') ? value.replace('/#', '#') : `#/${value}`\n        element.setAttribute('href', value ? hash : 'javascript:void(0)')\n        element.addEventListener('click', (e) => {\n          e.preventDefault()\n          if (value) {\n            navigateToUrl(hash)\n          }\n        })\n      }\n    },\n```\n\n### 目录结构统一\n使用webpack的一个好处就是可以使用alias的方式 引入vue的相关组件，将原先平级的目录都移入src之后，只要修改alias，就能做到无缝迁移了\n\n### 拆分app\n没什么好说的，按照业务相关性和优先级拆分，使用single-spa进行管理\n\n# 目前进度\n当然啦，迁移也不是一朝一夕的事，其实主要把整个项目的侧边栏导航栏给换了，支持了一直吵着要做的搜索框，更换的过程中还出过不少问题，不过因为拆分了app，倒是没有影响整个项目的正常运行，看来迁移有望，起码现在启动项目不用各种切分支了😂，同时因为偷懒，还专门写了seed系统，通过定义数据结构快速生成项目页面，这也是后话了\n","source":"_posts/我们是怎么从ng迁移到vue的.md","raw":"---\ntitle: 我们是怎么从ng迁移到vue的\ntags:\n  - vue\n  - ng\n  - 迁移\n  - angularJs\n  - 经验\ndate: 2019-01-03 21:41:57\ncategories: 可以公开的情报\n---\n# 我们是如何从ng1迁移ing到vue的\n> 原本的技术栈 ng1 + gulp + slim + \n> vue *2 + iframe 的一个后端管理项目\n\n\n[![](https://badge.juejin.im/entry/5c2e10c7f265da613d7c31ee/likes.svg?style=flat-square)](https://juejin.im/post/5c2e109fe51d453fdd604763)\n\n![](https://camo.githubusercontent.com/5082953bc69645086be2b2ac5e1a8fa20eff0314/68747470733a2f2f73696e676c652d7370612e6a732e6f72672f696d672f6c6f676f2d77686974652d6267626c75652e737667)\n\n这是一个本身因为人手不足，一开始由后端同学创建的后端管理项目，基本采用了gulp + ng1来进行开发，同时前端接手之后为了方便开发以及跟上潮流，采用了新开子目录使用vue开发，nginx和iframe进行整合的方式，最后一个项目变成了三个项目，其实最开始进行开发的时候，连怎么启动都不知道😂\n\n# 要解决的问题\n## 项目的层级结构\n### 原本的结构\n顶级目录只包含多个子文件夹以及build.sh，每个子项目需要独立进行编译以及开发\n\n### 新的结构\n采用signle-spa作为入口文件解决方案，统一管理所有项目的入口文件，实现一次启动，所有项目都能一起开发以及编译，省去了来回切换以及端口冲突\n\n## 构建语言的混乱\n### 原本的架构\n原本的app是使用ng1来进行编写js部分，slim来编写页面模版，同时使用gulp来完成遍历所有的js文件，并打包到一个js中，后来一些新的页面部分采用iframe引入另一个vue-cli项目，两者之间通过cookie来进行登录数据的共享。\n\n### 更新之后的架构\n因为模版文件的问题，仍然以gulp为主，webpack负责vue和原本app的js打包和资源文件的编译工作，大家约定好，原本的ng部分尽量不更新，新的采用vue进行编写\n\n## 逐步过渡\n### 原本的方案\n老的不管它，需要更新就回去更新，新的需求去vue的项目中编写\n\n### 现在的方案\nsingle-spa进行页面的拆分，将需要更新的老的ng部分作为一个新的子app，拆分出来之后再进行更新，保证局部更新，不影响整体\n\n# 解决过程\n## 编译工具\n确定了整体的迁移方案之后，就是首先对编译工具的改造了，最开始是想把gulp先替换成webpack的（因为习惯配置webpack了，以及webpack4 + babel7真的编译速度快了很多）\n\n但是因为slim始终找不到适合使用的webpack插件的关系，最终决定还是保留gulp进行编译ng的相关的html文件\n\n### 小问题\n#### gulp支持webpack的问题\ngulp-webpack插件支持的webpack版本是2，但是目标是使用4(为了快),好在webpack支持使用node来进行调用，只要在编译结束之后给gulp一个回调就可以了\n\n```javascript\n\nconst webpack = require('webpack')\nconst fs = require('fs')\n\nmodule.exports = function (webpackConfig) {\n  return new Promise((resolve, reject) => {\n    const compiler = webpack(webpackConfig);\n\n    compiler.run((err, stats) => {\n      if (err) {\n        console.error(err)\n        reject(err)\n      }\n\n      // 输出\n      process.stdout.write(stats.toString({\n        // stats对象中保存着编译过程中的各种消息\n        colors: true, // 增加控制台颜色开关\n        modules: false, // 不增加内置模块信息\n        children: false, // 不增加子级信息\n        chunks: false, // 允许较少的输出\n        chunkModules: false // 不将内置模块的信息加到包信息\n      }) + '\\n\\n')\n    })\n\n    compiler.hooks.afterEmit.tap('gulp', function() {\n      resolve()\n    })\n  })\n}\n\n```\n\n同理，devServer也使用自定义的脚本, 当然因为公司原因，其中的api切换也直接放在devServer的before中\n\n```\n/**\n * webpack的devserver\n */\nconst webpack = require(\"webpack\");\nconst WebpackDevServer = require(\"webpack-dev-server\");\nconst proxy = require(\"http-proxy-middleware\");\n\nlet env = \"dev\"; // 环境\n\nmodule.exports = function(config) {\n  return new Promise((resolve, reject) => {\n    // node模式下需要进行配置\n    let devServerConfig = config.devServer;\n    let devPath = `http://${devServerConfig.host}:${devServerConfig.port}/`;\n    config.entry.app.unshift(\"webpack/hot/dev-server\");\n    config.entry.app.unshift(`webpack-dev-server/client?${devPath}`);\n\n    const server = new WebpackDevServer(webpack(config), {\n      open: devServerConfig.open,\n      contentBase: config.output.path,\n      publicPath: config.output.publicPath,\n      hot: true,\n      disableHostCheck: devServerConfig.disableHostCheck,\n      historyApiFallback: true,\n      inline: devServerConfig.inline,\n      watchContentBase: devServerConfig.watchContentBase,\n      before: function(app) {\n        \n      },\n      stats: {\n        colors: true\n      }\n    });\n\n    server.listen(devServerConfig.port, devServerConfig.host, function(err) {\n      if (err) {\n        console.log(err);\n        reject(err);\n      }\n\n      console.log(`Listening at ${devPath}`);\n      resolve();\n    });\n  });\n};\n\n\n```\n\n## 统一构建和开发\n因为使用的语言不一样，负责的页面不一样，Store和Route也不一样，想要统一的话，就必须解决这些问题\n\n### single-spa\n> SINGLE-SPA是一个 JavaScript 元框架，它允许我们使用不同的框架构建微前端，而这些框架可以共存于单个应用中。\n\n![](https://upload-images.jianshu.io/upload_images/2267652-a636f8d7cce8768f.png)\n后端微服务架构（microservice style）已经流行了一段时间了，那么前端能不能同样使用微服务呢？页面拆分成不同的部分，互相之间互不干扰又紧密相连，single-spa正是为此而出现的，而且更好的事，single-spa支持几乎所有的前端开发框架，是一个框架的元框架，而我们的迁移目标正好就是将原本的ng部分拆分成一个个小的app然后逐步迁移到vue上么\n\n### 统一Store\n最终决定使用vuex作为整个项目的Store，但是如何与ng本身的rootScope进行整合就又是一个问题了，好在通过import引入的js文件的作用域是共同的，只需要将ng的rootScope挂载上vuex，然后vuex使用插件的形式反过来触发更新ng就行了. \n\n```javascript\nimport store from '../store'\n\nObject.assign(store.state, {\n    _ng: {\n      $rootScope: $rootScope,\n      $state: $state\n    }\n  })\n```\n\n```javascript\n/**\n * 同步这些数据到ng的Scope里\n * @param store\n */\nexport const ngPlugin = store => {\n  // 当 store 初始化后调用\n  store.subscribe(({ type, payload }, state) => {\n    if (state._ng) {\n      state._ng.$rootScope[type] = payload\n      state._ng.$rootScope.$apply()\n    }\n  })\n}\n\n```\n\n\n### 统一路由\n目前仍然各自为政，只不过路由跳转方式通过指令的方式，将vue和ng的跳转修改为使用single-spa的路由跳转方式. 当然，因为之前ng的路由是继续hash而不是history，所以还有一部分兼容操作\n\n```javascript\nimport { navigateToUrl } from 'single-spa'\n\ndirectives: {\n      // spa链接\n      spaLink (element, {value}) {\n        element.style.display = 'inline-block'\n        element.style.width = '100%'\n        // 自动判断hash类型\n        let hash = (value || '').includes('#') ? value.replace('/#', '#') : `#/${value}`\n        element.setAttribute('href', value ? hash : 'javascript:void(0)')\n        element.addEventListener('click', (e) => {\n          e.preventDefault()\n          if (value) {\n            navigateToUrl(hash)\n          }\n        })\n      }\n    },\n```\n\n### 目录结构统一\n使用webpack的一个好处就是可以使用alias的方式 引入vue的相关组件，将原先平级的目录都移入src之后，只要修改alias，就能做到无缝迁移了\n\n### 拆分app\n没什么好说的，按照业务相关性和优先级拆分，使用single-spa进行管理\n\n# 目前进度\n当然啦，迁移也不是一朝一夕的事，其实主要把整个项目的侧边栏导航栏给换了，支持了一直吵着要做的搜索框，更换的过程中还出过不少问题，不过因为拆分了app，倒是没有影响整个项目的正常运行，看来迁移有望，起码现在启动项目不用各种切分支了😂，同时因为偷懒，还专门写了seed系统，通过定义数据结构快速生成项目页面，这也是后话了\n","slug":"我们是怎么从ng迁移到vue的","published":1,"updated":"2019-01-03T13:42:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck55dkxoh008dw6ilfvebelfj","content":"<h1 id=\"我们是如何从ng1迁移ing到vue的\"><a href=\"#我们是如何从ng1迁移ing到vue的\" class=\"headerlink\" title=\"我们是如何从ng1迁移ing到vue的\"></a>我们是如何从ng1迁移ing到vue的</h1><blockquote>\n<p>原本的技术栈 ng1 + gulp + slim +<br>vue *2 + iframe 的一个后端管理项目</p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5c2e109fe51d453fdd604763\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5c2e10c7f265da613d7c31ee/likes.svg?style=flat-square\" alt></a></p>\n<p><img src=\"https://camo.githubusercontent.com/5082953bc69645086be2b2ac5e1a8fa20eff0314/68747470733a2f2f73696e676c652d7370612e6a732e6f72672f696d672f6c6f676f2d77686974652d6267626c75652e737667\" alt></p>\n<p>这是一个本身因为人手不足，一开始由后端同学创建的后端管理项目，基本采用了gulp + ng1来进行开发，同时前端接手之后为了方便开发以及跟上潮流，采用了新开子目录使用vue开发，nginx和iframe进行整合的方式，最后一个项目变成了三个项目，其实最开始进行开发的时候，连怎么启动都不知道😂</p>\n<h1 id=\"要解决的问题\"><a href=\"#要解决的问题\" class=\"headerlink\" title=\"要解决的问题\"></a>要解决的问题</h1><h2 id=\"项目的层级结构\"><a href=\"#项目的层级结构\" class=\"headerlink\" title=\"项目的层级结构\"></a>项目的层级结构</h2><h3 id=\"原本的结构\"><a href=\"#原本的结构\" class=\"headerlink\" title=\"原本的结构\"></a>原本的结构</h3><p>顶级目录只包含多个子文件夹以及build.sh，每个子项目需要独立进行编译以及开发</p>\n<h3 id=\"新的结构\"><a href=\"#新的结构\" class=\"headerlink\" title=\"新的结构\"></a>新的结构</h3><p>采用signle-spa作为入口文件解决方案，统一管理所有项目的入口文件，实现一次启动，所有项目都能一起开发以及编译，省去了来回切换以及端口冲突</p>\n<h2 id=\"构建语言的混乱\"><a href=\"#构建语言的混乱\" class=\"headerlink\" title=\"构建语言的混乱\"></a>构建语言的混乱</h2><h3 id=\"原本的架构\"><a href=\"#原本的架构\" class=\"headerlink\" title=\"原本的架构\"></a>原本的架构</h3><p>原本的app是使用ng1来进行编写js部分，slim来编写页面模版，同时使用gulp来完成遍历所有的js文件，并打包到一个js中，后来一些新的页面部分采用iframe引入另一个vue-cli项目，两者之间通过cookie来进行登录数据的共享。</p>\n<h3 id=\"更新之后的架构\"><a href=\"#更新之后的架构\" class=\"headerlink\" title=\"更新之后的架构\"></a>更新之后的架构</h3><p>因为模版文件的问题，仍然以gulp为主，webpack负责vue和原本app的js打包和资源文件的编译工作，大家约定好，原本的ng部分尽量不更新，新的采用vue进行编写</p>\n<h2 id=\"逐步过渡\"><a href=\"#逐步过渡\" class=\"headerlink\" title=\"逐步过渡\"></a>逐步过渡</h2><h3 id=\"原本的方案\"><a href=\"#原本的方案\" class=\"headerlink\" title=\"原本的方案\"></a>原本的方案</h3><p>老的不管它，需要更新就回去更新，新的需求去vue的项目中编写</p>\n<h3 id=\"现在的方案\"><a href=\"#现在的方案\" class=\"headerlink\" title=\"现在的方案\"></a>现在的方案</h3><p>single-spa进行页面的拆分，将需要更新的老的ng部分作为一个新的子app，拆分出来之后再进行更新，保证局部更新，不影响整体</p>\n<h1 id=\"解决过程\"><a href=\"#解决过程\" class=\"headerlink\" title=\"解决过程\"></a>解决过程</h1><h2 id=\"编译工具\"><a href=\"#编译工具\" class=\"headerlink\" title=\"编译工具\"></a>编译工具</h2><p>确定了整体的迁移方案之后，就是首先对编译工具的改造了，最开始是想把gulp先替换成webpack的（因为习惯配置webpack了，以及webpack4 + babel7真的编译速度快了很多）</p>\n<p>但是因为slim始终找不到适合使用的webpack插件的关系，最终决定还是保留gulp进行编译ng的相关的html文件</p>\n<h3 id=\"小问题\"><a href=\"#小问题\" class=\"headerlink\" title=\"小问题\"></a>小问题</h3><h4 id=\"gulp支持webpack的问题\"><a href=\"#gulp支持webpack的问题\" class=\"headerlink\" title=\"gulp支持webpack的问题\"></a>gulp支持webpack的问题</h4><p>gulp-webpack插件支持的webpack版本是2，但是目标是使用4(为了快),好在webpack支持使用node来进行调用，只要在编译结束之后给gulp一个回调就可以了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">webpackConfig</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\">    compiler.run(<span class=\"function\">(<span class=\"params\">err, stats</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">        reject(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出</span></span><br><span class=\"line\">      process.stdout.write(stats.toString(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// stats对象中保存着编译过程中的各种消息</span></span><br><span class=\"line\">        colors: <span class=\"literal\">true</span>, <span class=\"comment\">// 增加控制台颜色开关</span></span><br><span class=\"line\">        modules: <span class=\"literal\">false</span>, <span class=\"comment\">// 不增加内置模块信息</span></span><br><span class=\"line\">        children: <span class=\"literal\">false</span>, <span class=\"comment\">// 不增加子级信息</span></span><br><span class=\"line\">        chunks: <span class=\"literal\">false</span>, <span class=\"comment\">// 允许较少的输出</span></span><br><span class=\"line\">        chunkModules: <span class=\"literal\">false</span> <span class=\"comment\">// 不将内置模块的信息加到包信息</span></span><br><span class=\"line\">      &#125;) + <span class=\"string\">'\\n\\n'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    compiler.hooks.afterEmit.tap(<span class=\"string\">'gulp'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      resolve()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同理，devServer也使用自定义的脚本, 当然因为公司原因，其中的api切换也直接放在devServer的before中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * webpack的devserver</span><br><span class=\"line\"> */</span><br><span class=\"line\">const webpack = require(&quot;webpack&quot;);</span><br><span class=\"line\">const WebpackDevServer = require(&quot;webpack-dev-server&quot;);</span><br><span class=\"line\">const proxy = require(&quot;http-proxy-middleware&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">let env = &quot;dev&quot;; // 环境</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = function(config) &#123;</span><br><span class=\"line\">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    // node模式下需要进行配置</span><br><span class=\"line\">    let devServerConfig = config.devServer;</span><br><span class=\"line\">    let devPath = `http://$&#123;devServerConfig.host&#125;:$&#123;devServerConfig.port&#125;/`;</span><br><span class=\"line\">    config.entry.app.unshift(&quot;webpack/hot/dev-server&quot;);</span><br><span class=\"line\">    config.entry.app.unshift(`webpack-dev-server/client?$&#123;devPath&#125;`);</span><br><span class=\"line\"></span><br><span class=\"line\">    const server = new WebpackDevServer(webpack(config), &#123;</span><br><span class=\"line\">      open: devServerConfig.open,</span><br><span class=\"line\">      contentBase: config.output.path,</span><br><span class=\"line\">      publicPath: config.output.publicPath,</span><br><span class=\"line\">      hot: true,</span><br><span class=\"line\">      disableHostCheck: devServerConfig.disableHostCheck,</span><br><span class=\"line\">      historyApiFallback: true,</span><br><span class=\"line\">      inline: devServerConfig.inline,</span><br><span class=\"line\">      watchContentBase: devServerConfig.watchContentBase,</span><br><span class=\"line\">      before: function(app) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      stats: &#123;</span><br><span class=\"line\">        colors: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    server.listen(devServerConfig.port, devServerConfig.host, function(err) &#123;</span><br><span class=\"line\">      if (err) &#123;</span><br><span class=\"line\">        console.log(err);</span><br><span class=\"line\">        reject(err);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      console.log(`Listening at $&#123;devPath&#125;`);</span><br><span class=\"line\">      resolve();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"统一构建和开发\"><a href=\"#统一构建和开发\" class=\"headerlink\" title=\"统一构建和开发\"></a>统一构建和开发</h2><p>因为使用的语言不一样，负责的页面不一样，Store和Route也不一样，想要统一的话，就必须解决这些问题</p>\n<h3 id=\"single-spa\"><a href=\"#single-spa\" class=\"headerlink\" title=\"single-spa\"></a>single-spa</h3><blockquote>\n<p>SINGLE-SPA是一个 JavaScript 元框架，它允许我们使用不同的框架构建微前端，而这些框架可以共存于单个应用中。</p>\n</blockquote>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2267652-a636f8d7cce8768f.png\" alt><br>后端微服务架构（microservice style）已经流行了一段时间了，那么前端能不能同样使用微服务呢？页面拆分成不同的部分，互相之间互不干扰又紧密相连，single-spa正是为此而出现的，而且更好的事，single-spa支持几乎所有的前端开发框架，是一个框架的元框架，而我们的迁移目标正好就是将原本的ng部分拆分成一个个小的app然后逐步迁移到vue上么</p>\n<h3 id=\"统一Store\"><a href=\"#统一Store\" class=\"headerlink\" title=\"统一Store\"></a>统一Store</h3><p>最终决定使用vuex作为整个项目的Store，但是如何与ng本身的rootScope进行整合就又是一个问题了，好在通过import引入的js文件的作用域是共同的，只需要将ng的rootScope挂载上vuex，然后vuex使用插件的形式反过来触发更新ng就行了. </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'../store'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.assign(store.state, &#123;</span><br><span class=\"line\">    _ng: &#123;</span><br><span class=\"line\">      $rootScope: $rootScope,</span><br><span class=\"line\">      $state: $state</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 同步这些数据到ng的Scope里</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"variable\">store</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ngPlugin = <span class=\"function\"><span class=\"params\">store</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当 store 初始化后调用</span></span><br><span class=\"line\">  store.subscribe(<span class=\"function\">(<span class=\"params\">&#123; type, payload &#125;, state</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state._ng) &#123;</span><br><span class=\"line\">      state._ng.$rootScope[type] = payload</span><br><span class=\"line\">      state._ng.$rootScope.$apply()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"统一路由\"><a href=\"#统一路由\" class=\"headerlink\" title=\"统一路由\"></a>统一路由</h3><p>目前仍然各自为政，只不过路由跳转方式通过指令的方式，将vue和ng的跳转修改为使用single-spa的路由跳转方式. 当然，因为之前ng的路由是继续hash而不是history，所以还有一部分兼容操作</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; navigateToUrl &#125; <span class=\"keyword\">from</span> <span class=\"string\">'single-spa'</span></span><br><span class=\"line\"></span><br><span class=\"line\">directives: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// spa链接</span></span><br><span class=\"line\">      spaLink (element, &#123;value&#125;) &#123;</span><br><span class=\"line\">        element.style.display = <span class=\"string\">'inline-block'</span></span><br><span class=\"line\">        element.style.width = <span class=\"string\">'100%'</span></span><br><span class=\"line\">        <span class=\"comment\">// 自动判断hash类型</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> hash = (value || <span class=\"string\">''</span>).includes(<span class=\"string\">'#'</span>) ? value.replace(<span class=\"string\">'/#'</span>, <span class=\"string\">'#'</span>) : <span class=\"string\">`#/<span class=\"subst\">$&#123;value&#125;</span>`</span></span><br><span class=\"line\">        element.setAttribute(<span class=\"string\">'href'</span>, value ? hash : <span class=\"string\">'javascript:void(0)'</span>)</span><br><span class=\"line\">        element.addEventListener(<span class=\"string\">'click'</span>, (e) =&gt; &#123;</span><br><span class=\"line\">          e.preventDefault()</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">            navigateToUrl(hash)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"目录结构统一\"><a href=\"#目录结构统一\" class=\"headerlink\" title=\"目录结构统一\"></a>目录结构统一</h3><p>使用webpack的一个好处就是可以使用alias的方式 引入vue的相关组件，将原先平级的目录都移入src之后，只要修改alias，就能做到无缝迁移了</p>\n<h3 id=\"拆分app\"><a href=\"#拆分app\" class=\"headerlink\" title=\"拆分app\"></a>拆分app</h3><p>没什么好说的，按照业务相关性和优先级拆分，使用single-spa进行管理</p>\n<h1 id=\"目前进度\"><a href=\"#目前进度\" class=\"headerlink\" title=\"目前进度\"></a>目前进度</h1><p>当然啦，迁移也不是一朝一夕的事，其实主要把整个项目的侧边栏导航栏给换了，支持了一直吵着要做的搜索框，更换的过程中还出过不少问题，不过因为拆分了app，倒是没有影响整个项目的正常运行，看来迁移有望，起码现在启动项目不用各种切分支了😂，同时因为偷懒，还专门写了seed系统，通过定义数据结构快速生成项目页面，这也是后话了</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"我们是如何从ng1迁移ing到vue的\"><a href=\"#我们是如何从ng1迁移ing到vue的\" class=\"headerlink\" title=\"我们是如何从ng1迁移ing到vue的\"></a>我们是如何从ng1迁移ing到vue的</h1><blockquote>\n<p>原本的技术栈 ng1 + gulp + slim +<br>vue *2 + iframe 的一个后端管理项目</p>\n</blockquote>\n<p><a href=\"https://juejin.im/post/5c2e109fe51d453fdd604763\" target=\"_blank\" rel=\"noopener\"><img src=\"https://badge.juejin.im/entry/5c2e10c7f265da613d7c31ee/likes.svg?style=flat-square\" alt></a></p>\n<p><img src=\"https://camo.githubusercontent.com/5082953bc69645086be2b2ac5e1a8fa20eff0314/68747470733a2f2f73696e676c652d7370612e6a732e6f72672f696d672f6c6f676f2d77686974652d6267626c75652e737667\" alt></p>\n<p>这是一个本身因为人手不足，一开始由后端同学创建的后端管理项目，基本采用了gulp + ng1来进行开发，同时前端接手之后为了方便开发以及跟上潮流，采用了新开子目录使用vue开发，nginx和iframe进行整合的方式，最后一个项目变成了三个项目，其实最开始进行开发的时候，连怎么启动都不知道😂</p>\n<h1 id=\"要解决的问题\"><a href=\"#要解决的问题\" class=\"headerlink\" title=\"要解决的问题\"></a>要解决的问题</h1><h2 id=\"项目的层级结构\"><a href=\"#项目的层级结构\" class=\"headerlink\" title=\"项目的层级结构\"></a>项目的层级结构</h2><h3 id=\"原本的结构\"><a href=\"#原本的结构\" class=\"headerlink\" title=\"原本的结构\"></a>原本的结构</h3><p>顶级目录只包含多个子文件夹以及build.sh，每个子项目需要独立进行编译以及开发</p>\n<h3 id=\"新的结构\"><a href=\"#新的结构\" class=\"headerlink\" title=\"新的结构\"></a>新的结构</h3><p>采用signle-spa作为入口文件解决方案，统一管理所有项目的入口文件，实现一次启动，所有项目都能一起开发以及编译，省去了来回切换以及端口冲突</p>\n<h2 id=\"构建语言的混乱\"><a href=\"#构建语言的混乱\" class=\"headerlink\" title=\"构建语言的混乱\"></a>构建语言的混乱</h2><h3 id=\"原本的架构\"><a href=\"#原本的架构\" class=\"headerlink\" title=\"原本的架构\"></a>原本的架构</h3><p>原本的app是使用ng1来进行编写js部分，slim来编写页面模版，同时使用gulp来完成遍历所有的js文件，并打包到一个js中，后来一些新的页面部分采用iframe引入另一个vue-cli项目，两者之间通过cookie来进行登录数据的共享。</p>\n<h3 id=\"更新之后的架构\"><a href=\"#更新之后的架构\" class=\"headerlink\" title=\"更新之后的架构\"></a>更新之后的架构</h3><p>因为模版文件的问题，仍然以gulp为主，webpack负责vue和原本app的js打包和资源文件的编译工作，大家约定好，原本的ng部分尽量不更新，新的采用vue进行编写</p>\n<h2 id=\"逐步过渡\"><a href=\"#逐步过渡\" class=\"headerlink\" title=\"逐步过渡\"></a>逐步过渡</h2><h3 id=\"原本的方案\"><a href=\"#原本的方案\" class=\"headerlink\" title=\"原本的方案\"></a>原本的方案</h3><p>老的不管它，需要更新就回去更新，新的需求去vue的项目中编写</p>\n<h3 id=\"现在的方案\"><a href=\"#现在的方案\" class=\"headerlink\" title=\"现在的方案\"></a>现在的方案</h3><p>single-spa进行页面的拆分，将需要更新的老的ng部分作为一个新的子app，拆分出来之后再进行更新，保证局部更新，不影响整体</p>\n<h1 id=\"解决过程\"><a href=\"#解决过程\" class=\"headerlink\" title=\"解决过程\"></a>解决过程</h1><h2 id=\"编译工具\"><a href=\"#编译工具\" class=\"headerlink\" title=\"编译工具\"></a>编译工具</h2><p>确定了整体的迁移方案之后，就是首先对编译工具的改造了，最开始是想把gulp先替换成webpack的（因为习惯配置webpack了，以及webpack4 + babel7真的编译速度快了很多）</p>\n<p>但是因为slim始终找不到适合使用的webpack插件的关系，最终决定还是保留gulp进行编译ng的相关的html文件</p>\n<h3 id=\"小问题\"><a href=\"#小问题\" class=\"headerlink\" title=\"小问题\"></a>小问题</h3><h4 id=\"gulp支持webpack的问题\"><a href=\"#gulp支持webpack的问题\" class=\"headerlink\" title=\"gulp支持webpack的问题\"></a>gulp支持webpack的问题</h4><p>gulp-webpack插件支持的webpack版本是2，但是目标是使用4(为了快),好在webpack支持使用node来进行调用，只要在编译结束之后给gulp一个回调就可以了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">webpackConfig</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> compiler = webpack(webpackConfig);</span><br><span class=\"line\"></span><br><span class=\"line\">    compiler.run(<span class=\"function\">(<span class=\"params\">err, stats</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">        reject(err)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 输出</span></span><br><span class=\"line\">      process.stdout.write(stats.toString(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// stats对象中保存着编译过程中的各种消息</span></span><br><span class=\"line\">        colors: <span class=\"literal\">true</span>, <span class=\"comment\">// 增加控制台颜色开关</span></span><br><span class=\"line\">        modules: <span class=\"literal\">false</span>, <span class=\"comment\">// 不增加内置模块信息</span></span><br><span class=\"line\">        children: <span class=\"literal\">false</span>, <span class=\"comment\">// 不增加子级信息</span></span><br><span class=\"line\">        chunks: <span class=\"literal\">false</span>, <span class=\"comment\">// 允许较少的输出</span></span><br><span class=\"line\">        chunkModules: <span class=\"literal\">false</span> <span class=\"comment\">// 不将内置模块的信息加到包信息</span></span><br><span class=\"line\">      &#125;) + <span class=\"string\">'\\n\\n'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    compiler.hooks.afterEmit.tap(<span class=\"string\">'gulp'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      resolve()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同理，devServer也使用自定义的脚本, 当然因为公司原因，其中的api切换也直接放在devServer的before中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * webpack的devserver</span><br><span class=\"line\"> */</span><br><span class=\"line\">const webpack = require(&quot;webpack&quot;);</span><br><span class=\"line\">const WebpackDevServer = require(&quot;webpack-dev-server&quot;);</span><br><span class=\"line\">const proxy = require(&quot;http-proxy-middleware&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">let env = &quot;dev&quot;; // 环境</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = function(config) &#123;</span><br><span class=\"line\">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class=\"line\">    // node模式下需要进行配置</span><br><span class=\"line\">    let devServerConfig = config.devServer;</span><br><span class=\"line\">    let devPath = `http://$&#123;devServerConfig.host&#125;:$&#123;devServerConfig.port&#125;/`;</span><br><span class=\"line\">    config.entry.app.unshift(&quot;webpack/hot/dev-server&quot;);</span><br><span class=\"line\">    config.entry.app.unshift(`webpack-dev-server/client?$&#123;devPath&#125;`);</span><br><span class=\"line\"></span><br><span class=\"line\">    const server = new WebpackDevServer(webpack(config), &#123;</span><br><span class=\"line\">      open: devServerConfig.open,</span><br><span class=\"line\">      contentBase: config.output.path,</span><br><span class=\"line\">      publicPath: config.output.publicPath,</span><br><span class=\"line\">      hot: true,</span><br><span class=\"line\">      disableHostCheck: devServerConfig.disableHostCheck,</span><br><span class=\"line\">      historyApiFallback: true,</span><br><span class=\"line\">      inline: devServerConfig.inline,</span><br><span class=\"line\">      watchContentBase: devServerConfig.watchContentBase,</span><br><span class=\"line\">      before: function(app) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      stats: &#123;</span><br><span class=\"line\">        colors: true</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    server.listen(devServerConfig.port, devServerConfig.host, function(err) &#123;</span><br><span class=\"line\">      if (err) &#123;</span><br><span class=\"line\">        console.log(err);</span><br><span class=\"line\">        reject(err);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      console.log(`Listening at $&#123;devPath&#125;`);</span><br><span class=\"line\">      resolve();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"统一构建和开发\"><a href=\"#统一构建和开发\" class=\"headerlink\" title=\"统一构建和开发\"></a>统一构建和开发</h2><p>因为使用的语言不一样，负责的页面不一样，Store和Route也不一样，想要统一的话，就必须解决这些问题</p>\n<h3 id=\"single-spa\"><a href=\"#single-spa\" class=\"headerlink\" title=\"single-spa\"></a>single-spa</h3><blockquote>\n<p>SINGLE-SPA是一个 JavaScript 元框架，它允许我们使用不同的框架构建微前端，而这些框架可以共存于单个应用中。</p>\n</blockquote>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/2267652-a636f8d7cce8768f.png\" alt><br>后端微服务架构（microservice style）已经流行了一段时间了，那么前端能不能同样使用微服务呢？页面拆分成不同的部分，互相之间互不干扰又紧密相连，single-spa正是为此而出现的，而且更好的事，single-spa支持几乎所有的前端开发框架，是一个框架的元框架，而我们的迁移目标正好就是将原本的ng部分拆分成一个个小的app然后逐步迁移到vue上么</p>\n<h3 id=\"统一Store\"><a href=\"#统一Store\" class=\"headerlink\" title=\"统一Store\"></a>统一Store</h3><p>最终决定使用vuex作为整个项目的Store，但是如何与ng本身的rootScope进行整合就又是一个问题了，好在通过import引入的js文件的作用域是共同的，只需要将ng的rootScope挂载上vuex，然后vuex使用插件的形式反过来触发更新ng就行了. </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'../store'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.assign(store.state, &#123;</span><br><span class=\"line\">    _ng: &#123;</span><br><span class=\"line\">      $rootScope: $rootScope,</span><br><span class=\"line\">      $state: $state</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 同步这些数据到ng的Scope里</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"variable\">store</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> ngPlugin = <span class=\"function\"><span class=\"params\">store</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 当 store 初始化后调用</span></span><br><span class=\"line\">  store.subscribe(<span class=\"function\">(<span class=\"params\">&#123; type, payload &#125;, state</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state._ng) &#123;</span><br><span class=\"line\">      state._ng.$rootScope[type] = payload</span><br><span class=\"line\">      state._ng.$rootScope.$apply()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"统一路由\"><a href=\"#统一路由\" class=\"headerlink\" title=\"统一路由\"></a>统一路由</h3><p>目前仍然各自为政，只不过路由跳转方式通过指令的方式，将vue和ng的跳转修改为使用single-spa的路由跳转方式. 当然，因为之前ng的路由是继续hash而不是history，所以还有一部分兼容操作</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; navigateToUrl &#125; <span class=\"keyword\">from</span> <span class=\"string\">'single-spa'</span></span><br><span class=\"line\"></span><br><span class=\"line\">directives: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// spa链接</span></span><br><span class=\"line\">      spaLink (element, &#123;value&#125;) &#123;</span><br><span class=\"line\">        element.style.display = <span class=\"string\">'inline-block'</span></span><br><span class=\"line\">        element.style.width = <span class=\"string\">'100%'</span></span><br><span class=\"line\">        <span class=\"comment\">// 自动判断hash类型</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> hash = (value || <span class=\"string\">''</span>).includes(<span class=\"string\">'#'</span>) ? value.replace(<span class=\"string\">'/#'</span>, <span class=\"string\">'#'</span>) : <span class=\"string\">`#/<span class=\"subst\">$&#123;value&#125;</span>`</span></span><br><span class=\"line\">        element.setAttribute(<span class=\"string\">'href'</span>, value ? hash : <span class=\"string\">'javascript:void(0)'</span>)</span><br><span class=\"line\">        element.addEventListener(<span class=\"string\">'click'</span>, (e) =&gt; &#123;</span><br><span class=\"line\">          e.preventDefault()</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (value) &#123;</span><br><span class=\"line\">            navigateToUrl(hash)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"目录结构统一\"><a href=\"#目录结构统一\" class=\"headerlink\" title=\"目录结构统一\"></a>目录结构统一</h3><p>使用webpack的一个好处就是可以使用alias的方式 引入vue的相关组件，将原先平级的目录都移入src之后，只要修改alias，就能做到无缝迁移了</p>\n<h3 id=\"拆分app\"><a href=\"#拆分app\" class=\"headerlink\" title=\"拆分app\"></a>拆分app</h3><p>没什么好说的，按照业务相关性和优先级拆分，使用single-spa进行管理</p>\n<h1 id=\"目前进度\"><a href=\"#目前进度\" class=\"headerlink\" title=\"目前进度\"></a>目前进度</h1><p>当然啦，迁移也不是一朝一夕的事，其实主要把整个项目的侧边栏导航栏给换了，支持了一直吵着要做的搜索框，更换的过程中还出过不少问题，不过因为拆分了app，倒是没有影响整个项目的正常运行，看来迁移有望，起码现在启动项目不用各种切分支了😂，同时因为偷懒，还专门写了seed系统，通过定义数据结构快速生成项目页面，这也是后话了</p>\n"},{"title":"Taro小程序适配ipone-x","date":"2020-01-23T07:32:01.000Z","_content":"\n# Taro 小程序适配 ipone-x\n\n自从 ipone-x 出来之后，所有的网站如果要保证美观，势必要兼容一下 ipone 的全面屏\n\n小程序的第三方实现我这边一般是使用 Taro.js 当然，大部分的场景 小程序的顶栏和 tab 栏已经帮我们做好了适配，不必担心，但是总有几个页面是需要我们来担心的\n\n近期在工作的时候也遇上了这方面的需求，所以在小程序上也要进行 safe area 的适配\n\n## 什么是 safe-area？\n\nios11 之后 出现的一个概念\n![](https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2080446112,239974008&fm=26&gp=0.jpg)\n\n## 如何适配\n\n当然，简单点的做法就是假设，用户的手机版本足够高，然后通过 css 的办法进行适配，核心代码和之前的一模一样\n\n```\n  padding-bottom: calc(constant(safe-area-inset-bottom));\n  padding-bottom: calc(env(safe-area-inset-bottom));\n```\n","source":"_posts/Taro小程序适配iponex.md","raw":"---\ntitle: Taro小程序适配ipone-x\ntags:\n  - 笔记\n  - 学习\n  - 记录\n  - vscode\n  - taro\n  - 小程序\ndate: 2020-01-23 15:32:01\ncategories: 一些经验\n---\n\n# Taro 小程序适配 ipone-x\n\n自从 ipone-x 出来之后，所有的网站如果要保证美观，势必要兼容一下 ipone 的全面屏\n\n小程序的第三方实现我这边一般是使用 Taro.js 当然，大部分的场景 小程序的顶栏和 tab 栏已经帮我们做好了适配，不必担心，但是总有几个页面是需要我们来担心的\n\n近期在工作的时候也遇上了这方面的需求，所以在小程序上也要进行 safe area 的适配\n\n## 什么是 safe-area？\n\nios11 之后 出现的一个概念\n![](https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2080446112,239974008&fm=26&gp=0.jpg)\n\n## 如何适配\n\n当然，简单点的做法就是假设，用户的手机版本足够高，然后通过 css 的办法进行适配，核心代码和之前的一模一样\n\n```\n  padding-bottom: calc(constant(safe-area-inset-bottom));\n  padding-bottom: calc(env(safe-area-inset-bottom));\n```\n","slug":"Taro小程序适配iponex","published":1,"updated":"2020-01-23T07:46:05.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6f5jmtw0000wuilne43fgyp","content":"<h1 id=\"Taro-小程序适配-ipone-x\"><a href=\"#Taro-小程序适配-ipone-x\" class=\"headerlink\" title=\"Taro 小程序适配 ipone-x\"></a>Taro 小程序适配 ipone-x</h1><p>自从 ipone-x 出来之后，所有的网站如果要保证美观，势必要兼容一下 ipone 的全面屏</p>\n<p>小程序的第三方实现我这边一般是使用 Taro.js 当然，大部分的场景 小程序的顶栏和 tab 栏已经帮我们做好了适配，不必担心，但是总有几个页面是需要我们来担心的</p>\n<p>近期在工作的时候也遇上了这方面的需求，所以在小程序上也要进行 safe area 的适配</p>\n<h2 id=\"什么是-safe-area？\"><a href=\"#什么是-safe-area？\" class=\"headerlink\" title=\"什么是 safe-area？\"></a>什么是 safe-area？</h2><p>ios11 之后 出现的一个概念<br><img src=\"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2080446112,239974008&amp;fm=26&amp;gp=0.jpg\" alt></p>\n<h2 id=\"如何适配\"><a href=\"#如何适配\" class=\"headerlink\" title=\"如何适配\"></a>如何适配</h2><p>当然，简单点的做法就是假设，用户的手机版本足够高，然后通过 css 的办法进行适配，核心代码和之前的一模一样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">padding-bottom: calc(constant(safe-area-inset-bottom));</span><br><span class=\"line\">padding-bottom: calc(env(safe-area-inset-bottom));</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Taro-小程序适配-ipone-x\"><a href=\"#Taro-小程序适配-ipone-x\" class=\"headerlink\" title=\"Taro 小程序适配 ipone-x\"></a>Taro 小程序适配 ipone-x</h1><p>自从 ipone-x 出来之后，所有的网站如果要保证美观，势必要兼容一下 ipone 的全面屏</p>\n<p>小程序的第三方实现我这边一般是使用 Taro.js 当然，大部分的场景 小程序的顶栏和 tab 栏已经帮我们做好了适配，不必担心，但是总有几个页面是需要我们来担心的</p>\n<p>近期在工作的时候也遇上了这方面的需求，所以在小程序上也要进行 safe area 的适配</p>\n<h2 id=\"什么是-safe-area？\"><a href=\"#什么是-safe-area？\" class=\"headerlink\" title=\"什么是 safe-area？\"></a>什么是 safe-area？</h2><p>ios11 之后 出现的一个概念<br><img src=\"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2080446112,239974008&amp;fm=26&amp;gp=0.jpg\" alt></p>\n<h2 id=\"如何适配\"><a href=\"#如何适配\" class=\"headerlink\" title=\"如何适配\"></a>如何适配</h2><p>当然，简单点的做法就是假设，用户的手机版本足够高，然后通过 css 的办法进行适配，核心代码和之前的一模一样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">padding-bottom: calc(constant(safe-area-inset-bottom));</span><br><span class=\"line\">padding-bottom: calc(env(safe-area-inset-bottom));</span><br></pre></td></tr></table></figure>\n"},{"title":"vuepress文档部署到github-pages","date":"2020-02-03T04:11:57.000Z","_content":"\n# vuepress 文档部署到 github-pages\n\n![](https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=292259422,410673799&fm=26&gp=0.jpg)\n\n## 必须做的\n\n在 docs/.vuepress/config.js 中设置正确的 base。\n\n如果你打算发布到 `https://<USERNAME>.github.io/`，则可以省略这一步，因为 base 默认即是 \"/\"。\n\n如果你打算发布到 `https://<USERNAME>.github.io/<REPO>/`（也就是说你的仓库在 `https://github.com/<USERNAME>/<REPO>）`，则将 base 设置为 `/<REPO>/`。\n\n## 发布方案\n\n### sh 脚本\n\n```sh\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'www.example.com' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\n\ncd -\n```\n\n### Travis CI\n\n```yaml\nlanguage: node_js\nnode_js:\n  - lts/*\ninstall:\n  - yarn install # npm ci\nscript:\n  - yarn docs:build # npm run docs:build\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  local_dir: docs/.vuepress/dist\n  github_token: $GITHUB_TOKEN # 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable\n  keep_history: true\n  on:\n    branch: master\n```\n\n### Github Actions\n\n在`.github/workflow/`下新建 deploy.yml\n\n```yml\nname: Publish docs to github actions\non:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run-script docs:build\n      - name: Install SSH Client\n        uses: webfactory/ssh-agent@v0.2.0 # This step installs the ssh client into the workflow run. There's many options available for this on the action marketplace.\n        with:\n          ssh-private-key: ${{ secrets.DEPLOY_KEY }}\n\n      - name: Build and Deploy Repo\n        uses: JamesIves/github-pages-deploy-action@releases/v3-test\n        with:\n          BASE_BRANCH: master\n          BRANCH: gh-pages\n          FOLDER: docs/.vuepress/dist\n          SSH: true # SSH must be set to true so the deploy action knows which protocol to deploy with.\n```\n\n接下来生成 key ，首先\n\n```sh\nssh-keygen -t rsa -b 4096 -C \"$(git config user.email)\" -f gh-pages -N \"\"\n# You will get 2 files:\n#   gh-pages.pub (public key)\n#   gh-pages     (private key)\n```\n\n然后打开仓库的`settings`，再点击`Secrets`，然后添加咱们刚刚生成的私钥(`gh-pages`的内容)，name 为 DEPLOY_KEY\n\n然后点击`Deploy keys`，添加公钥(`gh-pages.pub`的内容)，`Allow write access`一定要勾上\n\n然后提交即可，接着就会自动发布了\n\n# 附：发布到 npm 脚本\n\n```yml\nname: publish to npm\non:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\n\njobs:\n  publish:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run build-lib && npm run changelog\n      - name: publish\n        uses: JS-DevTools/npm-publish@v1\n        with:\n          token: ${{ secrets.NPM_TOKEN }}\n```\n\n# 附：发布到 release\n\n```yml\nname: upload release asset\non:\n  push:\n    # Sequence of patterns matched against refs/tags\n    tags:\n      - \"v*\" # Push events to matching v*, i.e. v1.0, v20.15.10\njobs:\n  build:\n    name: Upload Release Asset\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run build-lib && npm run changelog\n      - name: Read Changelog\n        id: read_changelog\n        uses: GenesisSam/get-simple-file-action@v1.0.4\n        with:\n          file-name: ${{ './lib/CHANGELOG.md' }}\n      - name: Build project # This would actually build your project, using zip for an example artifact\n        run: zip -r lib.zip lib\n      - name: Create Release\n        id: create_release\n        uses: actions/create-release@v1.0.0\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}\n        with:\n          tag_name: ${{ github.ref }}\n          release_name: Release ${{ github.ref }}\n          body: ${{ steps.read_changelog.outputs.data }}\n          draft: false\n          prerelease: false\n      - name: Upload Release Asset\n        uses: actions/upload-release-asset@v1.0.1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps\n          asset_path: ./lib.zip\n          asset_name: lib.zip\n          asset_content_type: application/zip\n```\n","source":"_posts/vuepress文档部署到github-pages.md","raw":"---\ntitle: vuepress文档部署到github-pages\ntags:\n  - 前端\n  - github actions\n  - vuepress\ndate: 2020-02-03 12:11:57\ncategories: 可以公开的情报\n---\n\n# vuepress 文档部署到 github-pages\n\n![](https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=292259422,410673799&fm=26&gp=0.jpg)\n\n## 必须做的\n\n在 docs/.vuepress/config.js 中设置正确的 base。\n\n如果你打算发布到 `https://<USERNAME>.github.io/`，则可以省略这一步，因为 base 默认即是 \"/\"。\n\n如果你打算发布到 `https://<USERNAME>.github.io/<REPO>/`（也就是说你的仓库在 `https://github.com/<USERNAME>/<REPO>）`，则将 base 设置为 `/<REPO>/`。\n\n## 发布方案\n\n### sh 脚本\n\n```sh\n#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'www.example.com' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\n\ncd -\n```\n\n### Travis CI\n\n```yaml\nlanguage: node_js\nnode_js:\n  - lts/*\ninstall:\n  - yarn install # npm ci\nscript:\n  - yarn docs:build # npm run docs:build\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  local_dir: docs/.vuepress/dist\n  github_token: $GITHUB_TOKEN # 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable\n  keep_history: true\n  on:\n    branch: master\n```\n\n### Github Actions\n\n在`.github/workflow/`下新建 deploy.yml\n\n```yml\nname: Publish docs to github actions\non:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run-script docs:build\n      - name: Install SSH Client\n        uses: webfactory/ssh-agent@v0.2.0 # This step installs the ssh client into the workflow run. There's many options available for this on the action marketplace.\n        with:\n          ssh-private-key: ${{ secrets.DEPLOY_KEY }}\n\n      - name: Build and Deploy Repo\n        uses: JamesIves/github-pages-deploy-action@releases/v3-test\n        with:\n          BASE_BRANCH: master\n          BRANCH: gh-pages\n          FOLDER: docs/.vuepress/dist\n          SSH: true # SSH must be set to true so the deploy action knows which protocol to deploy with.\n```\n\n接下来生成 key ，首先\n\n```sh\nssh-keygen -t rsa -b 4096 -C \"$(git config user.email)\" -f gh-pages -N \"\"\n# You will get 2 files:\n#   gh-pages.pub (public key)\n#   gh-pages     (private key)\n```\n\n然后打开仓库的`settings`，再点击`Secrets`，然后添加咱们刚刚生成的私钥(`gh-pages`的内容)，name 为 DEPLOY_KEY\n\n然后点击`Deploy keys`，添加公钥(`gh-pages.pub`的内容)，`Allow write access`一定要勾上\n\n然后提交即可，接着就会自动发布了\n\n# 附：发布到 npm 脚本\n\n```yml\nname: publish to npm\non:\n  push:\n    branches:\n      - master\n  pull_request:\n    branches:\n      - master\n\njobs:\n  publish:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run build-lib && npm run changelog\n      - name: publish\n        uses: JS-DevTools/npm-publish@v1\n        with:\n          token: ${{ secrets.NPM_TOKEN }}\n```\n\n# 附：发布到 release\n\n```yml\nname: upload release asset\non:\n  push:\n    # Sequence of patterns matched against refs/tags\n    tags:\n      - \"v*\" # Push events to matching v*, i.e. v1.0, v20.15.10\njobs:\n  build:\n    name: Upload Release Asset\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.\n        with:\n          persist-credentials: false\n      - name: Install\n        run: npm ci && npm run build-lib && npm run changelog\n      - name: Read Changelog\n        id: read_changelog\n        uses: GenesisSam/get-simple-file-action@v1.0.4\n        with:\n          file-name: ${{ './lib/CHANGELOG.md' }}\n      - name: Build project # This would actually build your project, using zip for an example artifact\n        run: zip -r lib.zip lib\n      - name: Create Release\n        id: create_release\n        uses: actions/create-release@v1.0.0\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}\n        with:\n          tag_name: ${{ github.ref }}\n          release_name: Release ${{ github.ref }}\n          body: ${{ steps.read_changelog.outputs.data }}\n          draft: false\n          prerelease: false\n      - name: Upload Release Asset\n        uses: actions/upload-release-asset@v1.0.1\n        env:\n          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}\n        with:\n          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps\n          asset_path: ./lib.zip\n          asset_name: lib.zip\n          asset_content_type: application/zip\n```\n","slug":"vuepress文档部署到github-pages","published":1,"updated":"2020-02-08T17:07:52.143Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6f5jmu00001wuil2gl80801","content":"<h1 id=\"vuepress-文档部署到-github-pages\"><a href=\"#vuepress-文档部署到-github-pages\" class=\"headerlink\" title=\"vuepress 文档部署到 github-pages\"></a>vuepress 文档部署到 github-pages</h1><p><img src=\"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=292259422,410673799&amp;fm=26&amp;gp=0.jpg\" alt></p>\n<h2 id=\"必须做的\"><a href=\"#必须做的\" class=\"headerlink\" title=\"必须做的\"></a>必须做的</h2><p>在 docs/.vuepress/config.js 中设置正确的 base。</p>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/</code>，则可以省略这一步，因为 base 默认即是 “/“。</p>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库在 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;）</code>，则将 base 设置为 <code>/&lt;REPO&gt;/</code>。</p>\n<h2 id=\"发布方案\"><a href=\"#发布方案\" class=\"headerlink\" title=\"发布方案\"></a>发布方案</h2><h3 id=\"sh-脚本\"><a href=\"#sh-脚本\" class=\"headerlink\" title=\"sh 脚本\"></a>sh 脚本</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 确保脚本抛出遇到的错误</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">npm run docs:build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入生成的文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> docs/.vuepress/dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果是发布到自定义域名</span></span><br><span class=\"line\"><span class=\"comment\"># echo 'www.example.com' &gt; CNAME</span></span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">'deploy'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span><br><span class=\"line\"><span class=\"comment\"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git master:gh-pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> -</span><br></pre></td></tr></table></figure>\n<h3 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">lts/*</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">install</span> <span class=\"comment\"># npm ci</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">docs:build</span> <span class=\"comment\"># npm run docs:build</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip_cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">local_dir:</span> <span class=\"string\">docs/.vuepress/dist</span></span><br><span class=\"line\">  <span class=\"attr\">github_token:</span> <span class=\"string\">$GITHUB_TOKEN</span> <span class=\"comment\"># 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable</span></span><br><span class=\"line\">  <span class=\"attr\">keep_history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Github-Actions\"><a href=\"#Github-Actions\" class=\"headerlink\" title=\"Github Actions\"></a>Github Actions</h3><p>在<code>.github/workflow/</code>下新建 deploy.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">docs</span> <span class=\"string\">to</span> <span class=\"string\">github</span> <span class=\"string\">actions</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build-and-deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run-script</span> <span class=\"string\">docs:build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">SSH</span> <span class=\"string\">Client</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">webfactory/ssh-agent@v0.2.0</span> <span class=\"comment\"># This step installs the ssh client into the workflow run. There's many options available for this on the action marketplace.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ssh-private-key:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.DEPLOY_KEY</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">and</span> <span class=\"string\">Deploy</span> <span class=\"string\">Repo</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">JamesIves/github-pages-deploy-action@releases/v3-test</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">BASE_BRANCH:</span> <span class=\"string\">master</span></span><br><span class=\"line\">          <span class=\"attr\">BRANCH:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\">          <span class=\"attr\">FOLDER:</span> <span class=\"string\">docs/.vuepress/dist</span></span><br><span class=\"line\">          <span class=\"attr\">SSH:</span> <span class=\"literal\">true</span> <span class=\"comment\"># SSH must be set to true so the deploy action knows which protocol to deploy with.</span></span><br></pre></td></tr></table></figure>\n<p>接下来生成 key ，首先</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"<span class=\"variable\">$(git config user.email)</span>\"</span> -f gh-pages -N <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"comment\"># You will get 2 files:</span></span><br><span class=\"line\"><span class=\"comment\">#   gh-pages.pub (public key)</span></span><br><span class=\"line\"><span class=\"comment\">#   gh-pages     (private key)</span></span><br></pre></td></tr></table></figure>\n<p>然后打开仓库的<code>settings</code>，再点击<code>Secrets</code>，然后添加咱们刚刚生成的私钥(<code>gh-pages</code>的内容)，name 为 DEPLOY_KEY</p>\n<p>然后点击<code>Deploy keys</code>，添加公钥(<code>gh-pages.pub</code>的内容)，<code>Allow write access</code>一定要勾上</p>\n<p>然后提交即可，接着就会自动发布了</p>\n<h1 id=\"附：发布到-npm-脚本\"><a href=\"#附：发布到-npm-脚本\" class=\"headerlink\" title=\"附：发布到 npm 脚本\"></a>附：发布到 npm 脚本</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">publish</span> <span class=\"string\">to</span> <span class=\"string\">npm</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build-lib</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">changelog</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">JS-DevTools/npm-publish@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.NPM_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"附：发布到-release\"><a href=\"#附：发布到-release\" class=\"headerlink\" title=\"附：发布到 release\"></a>附：发布到 release</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">upload</span> <span class=\"string\">release</span> <span class=\"string\">asset</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"comment\"># Sequence of patterns matched against refs/tags</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">\"v*\"</span> <span class=\"comment\"># Push events to matching v*, i.e. v1.0, v20.15.10</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Release</span> <span class=\"string\">Asset</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build-lib</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">changelog</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Read</span> <span class=\"string\">Changelog</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">read_changelog</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">GenesisSam/get-simple-file-action@v1.0.4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">file-name:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">'./lib/CHANGELOG.md'</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">project</span> <span class=\"comment\"># This would actually build your project, using zip for an example artifact</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">zip</span> <span class=\"string\">-r</span> <span class=\"string\">lib.zip</span> <span class=\"string\">lib</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">Release</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">create_release</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/create-release@v1.0.0</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GH_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">tag_name:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.ref</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">release_name:</span> <span class=\"string\">Release</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.ref</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">body:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.read_changelog.outputs.data</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">draft:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">          <span class=\"attr\">prerelease:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Release</span> <span class=\"string\">Asset</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/upload-release-asset@v1.0.1</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GH_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">upload_url:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.create_release.outputs.upload_url</span> <span class=\"string\">&#125;&#125;</span> <span class=\"comment\"># This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps</span></span><br><span class=\"line\">          <span class=\"attr\">asset_path:</span> <span class=\"string\">./lib.zip</span></span><br><span class=\"line\">          <span class=\"attr\">asset_name:</span> <span class=\"string\">lib.zip</span></span><br><span class=\"line\">          <span class=\"attr\">asset_content_type:</span> <span class=\"string\">application/zip</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vuepress-文档部署到-github-pages\"><a href=\"#vuepress-文档部署到-github-pages\" class=\"headerlink\" title=\"vuepress 文档部署到 github-pages\"></a>vuepress 文档部署到 github-pages</h1><p><img src=\"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=292259422,410673799&amp;fm=26&amp;gp=0.jpg\" alt></p>\n<h2 id=\"必须做的\"><a href=\"#必须做的\" class=\"headerlink\" title=\"必须做的\"></a>必须做的</h2><p>在 docs/.vuepress/config.js 中设置正确的 base。</p>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/</code>，则可以省略这一步，因为 base 默认即是 “/“。</p>\n<p>如果你打算发布到 <code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>（也就是说你的仓库在 <code>https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;）</code>，则将 base 设置为 <code>/&lt;REPO&gt;/</code>。</p>\n<h2 id=\"发布方案\"><a href=\"#发布方案\" class=\"headerlink\" title=\"发布方案\"></a>发布方案</h2><h3 id=\"sh-脚本\"><a href=\"#sh-脚本\" class=\"headerlink\" title=\"sh 脚本\"></a>sh 脚本</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 确保脚本抛出遇到的错误</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -e</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成静态文件</span></span><br><span class=\"line\">npm run docs:build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入生成的文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> docs/.vuepress/dist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果是发布到自定义域名</span></span><br><span class=\"line\"><span class=\"comment\"># echo 'www.example.com' &gt; CNAME</span></span><br><span class=\"line\"></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">'deploy'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果发布到 https://&lt;USERNAME&gt;.github.io</span></span><br><span class=\"line\"><span class=\"comment\"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git master:gh-pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> -</span><br></pre></td></tr></table></figure>\n<h3 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">lts/*</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">install</span> <span class=\"comment\"># npm ci</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">docs:build</span> <span class=\"comment\"># npm run docs:build</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip_cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">local_dir:</span> <span class=\"string\">docs/.vuepress/dist</span></span><br><span class=\"line\">  <span class=\"attr\">github_token:</span> <span class=\"string\">$GITHUB_TOKEN</span> <span class=\"comment\"># 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable</span></span><br><span class=\"line\">  <span class=\"attr\">keep_history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Github-Actions\"><a href=\"#Github-Actions\" class=\"headerlink\" title=\"Github Actions\"></a>Github Actions</h3><p>在<code>.github/workflow/</code>下新建 deploy.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">docs</span> <span class=\"string\">to</span> <span class=\"string\">github</span> <span class=\"string\">actions</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build-and-deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run-script</span> <span class=\"string\">docs:build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">SSH</span> <span class=\"string\">Client</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">webfactory/ssh-agent@v0.2.0</span> <span class=\"comment\"># This step installs the ssh client into the workflow run. There's many options available for this on the action marketplace.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ssh-private-key:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.DEPLOY_KEY</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">and</span> <span class=\"string\">Deploy</span> <span class=\"string\">Repo</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">JamesIves/github-pages-deploy-action@releases/v3-test</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">BASE_BRANCH:</span> <span class=\"string\">master</span></span><br><span class=\"line\">          <span class=\"attr\">BRANCH:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\">          <span class=\"attr\">FOLDER:</span> <span class=\"string\">docs/.vuepress/dist</span></span><br><span class=\"line\">          <span class=\"attr\">SSH:</span> <span class=\"literal\">true</span> <span class=\"comment\"># SSH must be set to true so the deploy action knows which protocol to deploy with.</span></span><br></pre></td></tr></table></figure>\n<p>接下来生成 key ，首先</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"<span class=\"variable\">$(git config user.email)</span>\"</span> -f gh-pages -N <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"comment\"># You will get 2 files:</span></span><br><span class=\"line\"><span class=\"comment\">#   gh-pages.pub (public key)</span></span><br><span class=\"line\"><span class=\"comment\">#   gh-pages     (private key)</span></span><br></pre></td></tr></table></figure>\n<p>然后打开仓库的<code>settings</code>，再点击<code>Secrets</code>，然后添加咱们刚刚生成的私钥(<code>gh-pages</code>的内容)，name 为 DEPLOY_KEY</p>\n<p>然后点击<code>Deploy keys</code>，添加公钥(<code>gh-pages.pub</code>的内容)，<code>Allow write access</code>一定要勾上</p>\n<p>然后提交即可，接着就会自动发布了</p>\n<h1 id=\"附：发布到-npm-脚本\"><a href=\"#附：发布到-npm-脚本\" class=\"headerlink\" title=\"附：发布到 npm 脚本\"></a>附：发布到 npm 脚本</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">publish</span> <span class=\"string\">to</span> <span class=\"string\">npm</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">pull_request:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build-lib</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">changelog</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">JS-DevTools/npm-publish@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.NPM_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"附：发布到-release\"><a href=\"#附：发布到-release\" class=\"headerlink\" title=\"附：发布到 release\"></a>附：发布到 release</h1><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">upload</span> <span class=\"string\">release</span> <span class=\"string\">asset</span></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"comment\"># Sequence of patterns matched against refs/tags</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">\"v*\"</span> <span class=\"comment\"># Push events to matching v*, i.e. v1.0, v20.15.10</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Release</span> <span class=\"string\">Asset</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span> <span class=\"comment\"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">persist-credentials:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">ci</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build-lib</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">changelog</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Read</span> <span class=\"string\">Changelog</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">read_changelog</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">GenesisSam/get-simple-file-action@v1.0.4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">file-name:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">'./lib/CHANGELOG.md'</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span> <span class=\"string\">project</span> <span class=\"comment\"># This would actually build your project, using zip for an example artifact</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">zip</span> <span class=\"string\">-r</span> <span class=\"string\">lib.zip</span> <span class=\"string\">lib</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Create</span> <span class=\"string\">Release</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">create_release</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/create-release@v1.0.0</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GH_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">tag_name:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.ref</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">release_name:</span> <span class=\"string\">Release</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">github.ref</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">body:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.read_changelog.outputs.data</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">draft:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">          <span class=\"attr\">prerelease:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Release</span> <span class=\"string\">Asset</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/upload-release-asset@v1.0.1</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GH_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">upload_url:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.create_release.outputs.upload_url</span> <span class=\"string\">&#125;&#125;</span> <span class=\"comment\"># This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps</span></span><br><span class=\"line\">          <span class=\"attr\">asset_path:</span> <span class=\"string\">./lib.zip</span></span><br><span class=\"line\">          <span class=\"attr\">asset_name:</span> <span class=\"string\">lib.zip</span></span><br><span class=\"line\">          <span class=\"attr\">asset_content_type:</span> <span class=\"string\">application/zip</span></span><br></pre></td></tr></table></figure>\n"},{"title":"使用typescript写vue遇到的问题以及处理方法","date":"2020-02-01T04:11:57.000Z","_content":"\n# 引入 typescript 遇到的问题\n\n![](http://image.baidu.com/search/detail?ct=503316480&z=undefined&tn=baiduimagedetail&ipn=d&word=vue&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=undefined&hd=undefined&latest=undefined&copyright=undefined&cs=539148893,69867751&os=2158212037,1585938205&simid=0,0&pn=17&rn=1&di=172590&ln=1739&fr=&fmq=1580487295219_R&fm=&ic=undefined&s=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&is=0,0&istype=0&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=0&objurl=http%3A%2F%2Fpic4.zhimg.com%2Fv2-8d028581101666f177b781f606dcb2fd_1200x500.jpg&rpstart=0&rpnum=0&adpicid=0&force=undefined)\n\n## classtype 的装饰器\n\n因为要写 props 里面需要传入函数，所以直接放弃类类型的写法\n\n## 如何让 ts 能够推导？\n\n1. `script`上增加`lang=\"ts\"`\n2. `export default{}`改成`export default Vue.extend({})`\n\n### 引入 Webpack.ProvidePlugin 遇到的一些问题\n\n首先，我用的是 vue-cli3，所以得使用`chainwebpack`的语法,之所以要定义这个插件，因为 Vue 这个打算搞成全局配置，毕竟这次写的东西要做成 lib 发布来着\n\n上代码\n\n```javascript\n// vue.config.js\nconst webpack = require(\"webpack\");\nmodule.exports = {\n  chainWebpack: config => {\n    config.plugin(\"provide\").use(webpack.ProvidePlugin, [\n      {\n        moment: \"moment\"\n      }\n    ]);\n  }\n};\n```\n\n同时要在`.eslintrc.js`里将这个定义为 global 的\n\n```javascript\n{\n  globals: {\n    moment: true;\n  }\n}\n```\n\n### 找不到定义文件\n\n在`tsconfig.json`的`compilerOptions`里加上类型定义\n\n```javascript\n{\n    \"typeRoots\": [\"./node_modules/@types\", \"./types\"],\n}\n```\n\n### debounce 的方法丢失了 this\n\n把这个赋值从 methods 中移动到 created/data 中，同时使用`const vm = this`来绑定 this，避免 ts 上的`this`绑定问题\n","source":"_posts/使用typescript写vue遇到的问题以及处理方法.md","raw":"---\ntitle: 使用typescript写vue遇到的问题以及处理方法\ntags:\n  - 前端\n  - vue\n  - typescript\ndate: 2020-02-01 12:11:57\ncategories: 可以公开的情报\n---\n\n# 引入 typescript 遇到的问题\n\n![](http://image.baidu.com/search/detail?ct=503316480&z=undefined&tn=baiduimagedetail&ipn=d&word=vue&step_word=&ie=utf-8&in=&cl=2&lm=-1&st=undefined&hd=undefined&latest=undefined&copyright=undefined&cs=539148893,69867751&os=2158212037,1585938205&simid=0,0&pn=17&rn=1&di=172590&ln=1739&fr=&fmq=1580487295219_R&fm=&ic=undefined&s=undefined&se=&sme=&tab=0&width=undefined&height=undefined&face=undefined&is=0,0&istype=0&ist=&jit=&bdtype=0&spn=0&pi=0&gsm=0&objurl=http%3A%2F%2Fpic4.zhimg.com%2Fv2-8d028581101666f177b781f606dcb2fd_1200x500.jpg&rpstart=0&rpnum=0&adpicid=0&force=undefined)\n\n## classtype 的装饰器\n\n因为要写 props 里面需要传入函数，所以直接放弃类类型的写法\n\n## 如何让 ts 能够推导？\n\n1. `script`上增加`lang=\"ts\"`\n2. `export default{}`改成`export default Vue.extend({})`\n\n### 引入 Webpack.ProvidePlugin 遇到的一些问题\n\n首先，我用的是 vue-cli3，所以得使用`chainwebpack`的语法,之所以要定义这个插件，因为 Vue 这个打算搞成全局配置，毕竟这次写的东西要做成 lib 发布来着\n\n上代码\n\n```javascript\n// vue.config.js\nconst webpack = require(\"webpack\");\nmodule.exports = {\n  chainWebpack: config => {\n    config.plugin(\"provide\").use(webpack.ProvidePlugin, [\n      {\n        moment: \"moment\"\n      }\n    ]);\n  }\n};\n```\n\n同时要在`.eslintrc.js`里将这个定义为 global 的\n\n```javascript\n{\n  globals: {\n    moment: true;\n  }\n}\n```\n\n### 找不到定义文件\n\n在`tsconfig.json`的`compilerOptions`里加上类型定义\n\n```javascript\n{\n    \"typeRoots\": [\"./node_modules/@types\", \"./types\"],\n}\n```\n\n### debounce 的方法丢失了 this\n\n把这个赋值从 methods 中移动到 created/data 中，同时使用`const vm = this`来绑定 this，避免 ts 上的`this`绑定问题\n","slug":"使用typescript写vue遇到的问题以及处理方法","published":1,"updated":"2020-02-02T13:05:26.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6f5jmud0004wuilxer17jcl","content":"<h1 id=\"引入-typescript-遇到的问题\"><a href=\"#引入-typescript-遇到的问题\" class=\"headerlink\" title=\"引入 typescript 遇到的问题\"></a>引入 typescript 遇到的问题</h1><p><img src=\"http://image.baidu.com/search/detail?ct=503316480&amp;z=undefined&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=vue&amp;step_word=&amp;ie=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=undefined&amp;hd=undefined&amp;latest=undefined&amp;copyright=undefined&amp;cs=539148893,69867751&amp;os=2158212037,1585938205&amp;simid=0,0&amp;pn=17&amp;rn=1&amp;di=172590&amp;ln=1739&amp;fr=&amp;fmq=1580487295219_R&amp;fm=&amp;ic=undefined&amp;s=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=undefined&amp;height=undefined&amp;face=undefined&amp;is=0,0&amp;istype=0&amp;ist=&amp;jit=&amp;bdtype=0&amp;spn=0&amp;pi=0&amp;gsm=0&amp;objurl=http%3A%2F%2Fpic4.zhimg.com%2Fv2-8d028581101666f177b781f606dcb2fd_1200x500.jpg&amp;rpstart=0&amp;rpnum=0&amp;adpicid=0&amp;force=undefined\" alt></p>\n<h2 id=\"classtype-的装饰器\"><a href=\"#classtype-的装饰器\" class=\"headerlink\" title=\"classtype 的装饰器\"></a>classtype 的装饰器</h2><p>因为要写 props 里面需要传入函数，所以直接放弃类类型的写法</p>\n<h2 id=\"如何让-ts-能够推导？\"><a href=\"#如何让-ts-能够推导？\" class=\"headerlink\" title=\"如何让 ts 能够推导？\"></a>如何让 ts 能够推导？</h2><ol>\n<li><code>script</code>上增加<code>lang=&quot;ts&quot;</code></li>\n<li><code>export default{}</code>改成<code>export default Vue.extend({})</code></li>\n</ol>\n<h3 id=\"引入-Webpack-ProvidePlugin-遇到的一些问题\"><a href=\"#引入-Webpack-ProvidePlugin-遇到的一些问题\" class=\"headerlink\" title=\"引入 Webpack.ProvidePlugin 遇到的一些问题\"></a>引入 Webpack.ProvidePlugin 遇到的一些问题</h3><p>首先，我用的是 vue-cli3，所以得使用<code>chainwebpack</code>的语法,之所以要定义这个插件，因为 Vue 这个打算搞成全局配置，毕竟这次写的东西要做成 lib 发布来着</p>\n<p>上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">\"webpack\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  chainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    config.plugin(<span class=\"string\">\"provide\"</span>).use(webpack.ProvidePlugin, [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        moment: <span class=\"string\">\"moment\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>同时要在<code>.eslintrc.js</code>里将这个定义为 global 的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  globals: &#123;</span><br><span class=\"line\">    moment: <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"找不到定义文件\"><a href=\"#找不到定义文件\" class=\"headerlink\" title=\"找不到定义文件\"></a>找不到定义文件</h3><p>在<code>tsconfig.json</code>的<code>compilerOptions</code>里加上类型定义</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"typeRoots\"</span>: [<span class=\"string\">\"./node_modules/@types\"</span>, <span class=\"string\">\"./types\"</span>],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"debounce-的方法丢失了-this\"><a href=\"#debounce-的方法丢失了-this\" class=\"headerlink\" title=\"debounce 的方法丢失了 this\"></a>debounce 的方法丢失了 this</h3><p>把这个赋值从 methods 中移动到 created/data 中，同时使用<code>const vm = this</code>来绑定 this，避免 ts 上的<code>this</code>绑定问题</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"引入-typescript-遇到的问题\"><a href=\"#引入-typescript-遇到的问题\" class=\"headerlink\" title=\"引入 typescript 遇到的问题\"></a>引入 typescript 遇到的问题</h1><p><img src=\"http://image.baidu.com/search/detail?ct=503316480&amp;z=undefined&amp;tn=baiduimagedetail&amp;ipn=d&amp;word=vue&amp;step_word=&amp;ie=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=undefined&amp;hd=undefined&amp;latest=undefined&amp;copyright=undefined&amp;cs=539148893,69867751&amp;os=2158212037,1585938205&amp;simid=0,0&amp;pn=17&amp;rn=1&amp;di=172590&amp;ln=1739&amp;fr=&amp;fmq=1580487295219_R&amp;fm=&amp;ic=undefined&amp;s=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=undefined&amp;height=undefined&amp;face=undefined&amp;is=0,0&amp;istype=0&amp;ist=&amp;jit=&amp;bdtype=0&amp;spn=0&amp;pi=0&amp;gsm=0&amp;objurl=http%3A%2F%2Fpic4.zhimg.com%2Fv2-8d028581101666f177b781f606dcb2fd_1200x500.jpg&amp;rpstart=0&amp;rpnum=0&amp;adpicid=0&amp;force=undefined\" alt></p>\n<h2 id=\"classtype-的装饰器\"><a href=\"#classtype-的装饰器\" class=\"headerlink\" title=\"classtype 的装饰器\"></a>classtype 的装饰器</h2><p>因为要写 props 里面需要传入函数，所以直接放弃类类型的写法</p>\n<h2 id=\"如何让-ts-能够推导？\"><a href=\"#如何让-ts-能够推导？\" class=\"headerlink\" title=\"如何让 ts 能够推导？\"></a>如何让 ts 能够推导？</h2><ol>\n<li><code>script</code>上增加<code>lang=&quot;ts&quot;</code></li>\n<li><code>export default{}</code>改成<code>export default Vue.extend({})</code></li>\n</ol>\n<h3 id=\"引入-Webpack-ProvidePlugin-遇到的一些问题\"><a href=\"#引入-Webpack-ProvidePlugin-遇到的一些问题\" class=\"headerlink\" title=\"引入 Webpack.ProvidePlugin 遇到的一些问题\"></a>引入 Webpack.ProvidePlugin 遇到的一些问题</h3><p>首先，我用的是 vue-cli3，所以得使用<code>chainwebpack</code>的语法,之所以要定义这个插件，因为 Vue 这个打算搞成全局配置，毕竟这次写的东西要做成 lib 发布来着</p>\n<p>上代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">\"webpack\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  chainWebpack: <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">    config.plugin(<span class=\"string\">\"provide\"</span>).use(webpack.ProvidePlugin, [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        moment: <span class=\"string\">\"moment\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>同时要在<code>.eslintrc.js</code>里将这个定义为 global 的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  globals: &#123;</span><br><span class=\"line\">    moment: <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"找不到定义文件\"><a href=\"#找不到定义文件\" class=\"headerlink\" title=\"找不到定义文件\"></a>找不到定义文件</h3><p>在<code>tsconfig.json</code>的<code>compilerOptions</code>里加上类型定义</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"typeRoots\"</span>: [<span class=\"string\">\"./node_modules/@types\"</span>, <span class=\"string\">\"./types\"</span>],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"debounce-的方法丢失了-this\"><a href=\"#debounce-的方法丢失了-this\" class=\"headerlink\" title=\"debounce 的方法丢失了 this\"></a>debounce 的方法丢失了 this</h3><p>把这个赋值从 methods 中移动到 created/data 中，同时使用<code>const vm = this</code>来绑定 this，避免 ts 上的<code>this</code>绑定问题</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck55dkxgo0009w6ili495tqzl","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxh4000gw6ilfltt5alq"},{"post_id":"ck55dkxge0004w6ilakzcg135","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxh6000iw6ilyk1faoc6"},{"post_id":"ck55dkxgq000bw6ilkfv51k5g","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxh9000lw6ilckg03xte"},{"post_id":"ck55dkxh0000dw6illluamqsy","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhc000nw6il0rltt2y6"},{"post_id":"ck55dkxgj0006w6ilgm010o65","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhe000qw6ilfd2sqdea"},{"post_id":"ck55dkxh3000fw6il3txjkory","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhh000uw6ilz3w6t3z3"},{"post_id":"ck55dkxh5000hw6il3ixgy4ru","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhi000yw6il1gwjl6a9"},{"post_id":"ck55dkxh8000kw6ilu9aj4xed","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhk0012w6il0ov419bi"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxhm0015w6ilxtuxf3bf"},{"post_id":"ck55dkxhh000xw6ilhks7zvy1","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxho0018w6il5i9lwq4o"},{"post_id":"ck55dkxha000mw6il38s5gh7w","category_id":"ck55dkxhf000sw6il1vm4v8lu","_id":"ck55dkxhs001aw6ilmoi1siky"},{"post_id":"ck55dkxhl0014w6iltpjz70l3","category_id":"ck55dkxhf000sw6il1vm4v8lu","_id":"ck55dkxhz001fw6iluk3hbyva"},{"post_id":"ck55dkxhd000pw6ilrq2sfq0k","category_id":"ck55dkxhf000sw6il1vm4v8lu","_id":"ck55dkxi0001iw6ilh6u0b3a1"},{"post_id":"ck55dkxhv001ew6ilp6vvp270","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxi5001pw6ilb7yuq86p"},{"post_id":"ck55dkxhn0017w6ilvwqy2cwt","category_id":"ck55dkxhu001cw6ilr8l0cr76","_id":"ck55dkxi7001tw6ile99jid94"},{"post_id":"ck55dkxhp0019w6il66u7krhq","category_id":"ck55dkxi3001mw6il8dsa8dfd","_id":"ck55dkxic0020w6ilcquroha3"},{"post_id":"ck55dkxi9001ww6ilgpxpbhjs","category_id":"ck55dkxhu001cw6ilr8l0cr76","_id":"ck55dkxie0026w6ilthm4t9l2"},{"post_id":"ck55dkxhz001hw6il0idqe1k4","category_id":"ck55dkxi7001uw6ilogticpzk","_id":"ck55dkxih002bw6il8v47v20y"},{"post_id":"ck55dkxia001yw6ilfk1uxbru","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxii002ew6ilbv4kejik"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxil002iw6il8qpd5f2l"},{"post_id":"ck55dkxi1001lw6ilhsieb2h6","category_id":"ck55dkxi7001uw6ilogticpzk","_id":"ck55dkxim002lw6ilpi000hs3"},{"post_id":"ck55dkxie0025w6ilsafqkf8f","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxip002pw6ilt0j3a44y"},{"post_id":"ck55dkxig002aw6ilk0ua8rod","category_id":"ck55dkxi3001mw6il8dsa8dfd","_id":"ck55dkxis002sw6ila389cqwj"},{"post_id":"ck55dkxi6001sw6il66e5vu7g","category_id":"ck55dkxif0028w6ilm6adj894","_id":"ck55dkxiv002ww6ilihya4ddh"},{"post_id":"ck55dkxih002dw6il20l6nibl","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxix002zw6iltfpz546r"},{"post_id":"ck55dkxik002hw6il3f0ar7gh","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxiz0033w6il5h8kr460"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxj00035w6ilyzj1ljt9"},{"post_id":"ck55dkxio002ow6il4294rrf5","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxj10038w6iljgv59xds"},{"post_id":"ck55dkxiq002rw6il2249u478","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxj20039w6il844g1v4s"},{"post_id":"ck55dkxiu002vw6ildxtfct8b","category_id":"ck55dkxiy0031w6il7t0sof1a","_id":"ck55dkxj3003aw6ild55kpdjh"},{"post_id":"ck55dkxof008cw6ileieyb2oi","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxol008fw6il9a3xhm2t"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck55dkxom008gw6ilg8f9kp4a"},{"post_id":"ck6f5jmu00001wuil2gl80801","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck6f5jmug0005wuilwl5y5oak"},{"post_id":"ck6f5jmud0004wuilxer17jcl","category_id":"ck55dkxgm0007w6ilqqm5yag4","_id":"ck6f5jmuh0007wuils1039raa"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","category_id":"ck6f5jmu30002wuilnss22ksg","_id":"ck6f5jmuh0008wuil18t3t71g"}],"PostTag":[{"post_id":"ck55dkxg60002w6il7xt46r2x","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxhf000rw6ily0wauxnh"},{"post_id":"ck55dkxg60002w6il7xt46r2x","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxhh000vw6ilq83dozt6"},{"post_id":"ck55dkxg60002w6il7xt46r2x","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxhi000zw6ilq4cx3kue"},{"post_id":"ck55dkxg60002w6il7xt46r2x","tag_id":"ck55dkxh7000jw6ilaipdrze9","_id":"ck55dkxhk0013w6ilqag5wll6"},{"post_id":"ck55dkxhn0017w6ilvwqy2cwt","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxhu001dw6ili0m3h97h"},{"post_id":"ck55dkxhn0017w6ilvwqy2cwt","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxhz001gw6ilxalarw34"},{"post_id":"ck55dkxhv001ew6ilp6vvp270","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxi1001kw6ilnle7w5fi"},{"post_id":"ck55dkxhv001ew6ilp6vvp270","tag_id":"ck55dkxhh000ww6ilbribas8b","_id":"ck55dkxi3001nw6ilsf30pmxn"},{"post_id":"ck55dkxhv001ew6ilp6vvp270","tag_id":"ck55dkxhm0016w6il5lwaaok1","_id":"ck55dkxi5001qw6il7p6e4khi"},{"post_id":"ck55dkxhv001ew6ilp6vvp270","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxi8001vw6ilhcrq987q"},{"post_id":"ck55dkxge0004w6ilakzcg135","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxia001xw6ilasgtmghs"},{"post_id":"ck55dkxge0004w6ilakzcg135","tag_id":"ck55dkxhh000ww6ilbribas8b","_id":"ck55dkxic0022w6illoyna7eh"},{"post_id":"ck55dkxge0004w6ilakzcg135","tag_id":"ck55dkxhm0016w6il5lwaaok1","_id":"ck55dkxid0024w6ilntaomp9e"},{"post_id":"ck55dkxge0004w6ilakzcg135","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxif0029w6ilql4hfhu5"},{"post_id":"ck55dkxi9001ww6ilgpxpbhjs","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxih002cw6ilr7lkb6e7"},{"post_id":"ck55dkxi9001ww6ilgpxpbhjs","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxij002gw6ilmfy31htt"},{"post_id":"ck55dkxig002aw6ilk0ua8rod","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxil002jw6ilgoe7x1j3"},{"post_id":"ck55dkxig002aw6ilk0ua8rod","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxin002nw6ila19j1q2j"},{"post_id":"ck55dkxig002aw6ilk0ua8rod","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxiq002qw6iljagtfr1j"},{"post_id":"ck55dkxgj0006w6ilgm010o65","tag_id":"ck55dkxi1001jw6il59wyk2ad","_id":"ck55dkxit002uw6il2m2v1dz8"},{"post_id":"ck55dkxgj0006w6ilgm010o65","tag_id":"ck55dkxi5001rw6ilyeotkixi","_id":"ck55dkxiw002xw6il46nns1i8"},{"post_id":"ck55dkxgj0006w6ilgm010o65","tag_id":"ck55dkxib001zw6ilz6br0jjv","_id":"ck55dkxiz0032w6ilho7lhk0t"},{"post_id":"ck55dkxgj0006w6ilgm010o65","tag_id":"ck55dkxif0027w6il4wncbyfb","_id":"ck55dkxj00034w6ilpvx1o565"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxj4003cw6ildd6ej0ne"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxj4003dw6ilm5fatfuv"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxj7003gw6ildddesvld"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxh7000jw6ilaipdrze9","_id":"ck55dkxj8003hw6ili34yej81"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxiy0030w6ilb1ooip7j","_id":"ck55dkxj8003jw6ilt4dr7lqb"},{"post_id":"ck55dkxgm0008w6il18vdbqt3","tag_id":"ck55dkxj10036w6il3vhexegc","_id":"ck55dkxj8003kw6il13dpfgu6"},{"post_id":"ck55dkxgo0009w6ili495tqzl","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxjg003ow6ilg9riyedx"},{"post_id":"ck55dkxgo0009w6ili495tqzl","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxjh003pw6ilowx95o6k"},{"post_id":"ck55dkxgo0009w6ili495tqzl","tag_id":"ck55dkxj8003iw6il19pr2q7g","_id":"ck55dkxjh003rw6ilym37fs0u"},{"post_id":"ck55dkxgo0009w6ili495tqzl","tag_id":"ck55dkxj9003lw6il1pn9flpr","_id":"ck55dkxji003sw6ile4jxdab3"},{"post_id":"ck55dkxgo0009w6ili495tqzl","tag_id":"ck55dkxj9003mw6ile9hakldy","_id":"ck55dkxji003uw6ilbrfj996h"},{"post_id":"ck55dkxgq000bw6ilkfv51k5g","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxjr003xw6ilxj0ycsx5"},{"post_id":"ck55dkxgq000bw6ilkfv51k5g","tag_id":"ck55dkxhh000ww6ilbribas8b","_id":"ck55dkxjr003yw6ilzj0qnmhx"},{"post_id":"ck55dkxgq000bw6ilkfv51k5g","tag_id":"ck55dkxhm0016w6il5lwaaok1","_id":"ck55dkxjt0040w6il5t4g5tdc"},{"post_id":"ck55dkxgq000bw6ilkfv51k5g","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxjt0041w6iljego3dc4"},{"post_id":"ck55dkxh0000dw6illluamqsy","tag_id":"ck55dkxjq003ww6ilmzcjmgn5","_id":"ck55dkxk00044w6il6guhejak"},{"post_id":"ck55dkxh0000dw6illluamqsy","tag_id":"ck55dkxjs003zw6ilijr5y2yl","_id":"ck55dkxk00045w6il7ksu417j"},{"post_id":"ck55dkxh0000dw6illluamqsy","tag_id":"ck55dkxjt0042w6ilmyf3gqzx","_id":"ck55dkxk10047w6iltmbqxpaa"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxk6004dw6ilagkxz1yi"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxju0043w6ili1zrq4lj","_id":"ck55dkxk6004ew6ilc9sjdsjf"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxk00046w6il79ecoow8","_id":"ck55dkxk6004gw6il58hrk6bo"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxk10048w6ilu8zklvm8","_id":"ck55dkxk7004hw6iloohvz7v1"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxk20049w6ilnesritjd","_id":"ck55dkxk7004jw6ill7wj3zsq"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxk4004aw6ild28bjc6u","_id":"ck55dkxk7004kw6il97dvxyfw"},{"post_id":"ck55dkxh3000fw6il3txjkory","tag_id":"ck55dkxk4004bw6ily9vbqkff","_id":"ck55dkxk8004mw6ilpyt6w0ex"},{"post_id":"ck55dkxh5000hw6il3ixgy4ru","tag_id":"ck55dkxk5004cw6ilno528dmi","_id":"ck55dkxkd004ow6ilplce8lzr"},{"post_id":"ck55dkxh5000hw6il3ixgy4ru","tag_id":"ck55dkxk6004fw6ilq5a9mz8j","_id":"ck55dkxkd004pw6ilj8mfl1h9"},{"post_id":"ck55dkxh5000hw6il3ixgy4ru","tag_id":"ck55dkxk7004iw6ilayt6zryr","_id":"ck55dkxkd004rw6ili9k7ew14"},{"post_id":"ck55dkxh5000hw6il3ixgy4ru","tag_id":"ck55dkxk7004lw6ilazk439lk","_id":"ck55dkxkd004sw6ilkag6f870"},{"post_id":"ck55dkxh8000kw6ilu9aj4xed","tag_id":"ck55dkxk8004nw6ilts6cq9p1","_id":"ck55dkxl8004uw6il0rwl07d2"},{"post_id":"ck55dkxh8000kw6ilu9aj4xed","tag_id":"ck55dkxkd004qw6ilrrxzwv7p","_id":"ck55dkxl8004vw6ilmj0f69az"},{"post_id":"ck55dkxha000mw6il38s5gh7w","tag_id":"ck55dkxkf004tw6ilqzf7xd1s","_id":"ck55dkxlc0050w6ilzsevwu66"},{"post_id":"ck55dkxha000mw6il38s5gh7w","tag_id":"ck55dkxl8004ww6ily6uno72t","_id":"ck55dkxlc0051w6ilr70bf6wg"},{"post_id":"ck55dkxha000mw6il38s5gh7w","tag_id":"ck55dkxl9004xw6il1wifmgun","_id":"ck55dkxlk0053w6ilcwnwr1l7"},{"post_id":"ck55dkxha000mw6il38s5gh7w","tag_id":"ck55dkxk8004nw6ilts6cq9p1","_id":"ck55dkxlk0054w6il72dymp6l"},{"post_id":"ck55dkxhd000pw6ilrq2sfq0k","tag_id":"ck55dkxkf004tw6ilqzf7xd1s","_id":"ck55dkxlr0058w6il2fbdd77j"},{"post_id":"ck55dkxhd000pw6ilrq2sfq0k","tag_id":"ck55dkxl8004ww6ily6uno72t","_id":"ck55dkxlr0059w6ilmqhddvms"},{"post_id":"ck55dkxhd000pw6ilrq2sfq0k","tag_id":"ck55dkxl9004xw6il1wifmgun","_id":"ck55dkxlr005bw6il6po4p1dr"},{"post_id":"ck55dkxhd000pw6ilrq2sfq0k","tag_id":"ck55dkxk8004nw6ilts6cq9p1","_id":"ck55dkxls005cw6ilkhz8e8kr"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxlt005ew6ilrk10lba0"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxlt005fw6ilekeuwmm7"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxlt005hw6il2f5yh4qc"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","tag_id":"ck55dkxj10036w6il3vhexegc","_id":"ck55dkxm3005iw6ilekp08r06"},{"post_id":"ck55dkxhg000tw6ild6x09jjt","tag_id":"ck55dkxlr005aw6ilte6rxl6m","_id":"ck55dkxm5005kw6ilv2cv81hy"},{"post_id":"ck55dkxhh000xw6ilhks7zvy1","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxm6005lw6il162hv10c"},{"post_id":"ck55dkxhh000xw6ilhks7zvy1","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxm6005nw6ilrjn0wxjp"},{"post_id":"ck55dkxhj0010w6il67z6qsei","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxm6005ow6ilzwc7egt3"},{"post_id":"ck55dkxhj0010w6il67z6qsei","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxm7005qw6il5ymlyw9r"},{"post_id":"ck55dkxhj0010w6il67z6qsei","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxm7005rw6il7sri2tji"},{"post_id":"ck55dkxhj0010w6il67z6qsei","tag_id":"ck55dkxlt005gw6ilb3mzahc8","_id":"ck55dkxma005tw6ilolb1vmgd"},{"post_id":"ck55dkxhl0014w6iltpjz70l3","tag_id":"ck55dkxk00046w6il79ecoow8","_id":"ck55dkxmb005vw6il2jwule1s"},{"post_id":"ck55dkxhl0014w6iltpjz70l3","tag_id":"ck55dkxm6005mw6ilttoi1f2k","_id":"ck55dkxmb005ww6il5sdwqxwp"},{"post_id":"ck55dkxhl0014w6iltpjz70l3","tag_id":"ck55dkxm7005pw6ilxfm9kyny","_id":"ck55dkxmc005yw6ilbx5q2qzi"},{"post_id":"ck55dkxhl0014w6iltpjz70l3","tag_id":"ck55dkxm9005sw6il9d7tqjqg","_id":"ck55dkxmc005zw6ilcet40tgv"},{"post_id":"ck55dkxhp0019w6il66u7krhq","tag_id":"ck55dkxgh0005w6ilpy5kw2yy","_id":"ck55dkxmc0061w6ilx7cb3p3e"},{"post_id":"ck55dkxhp0019w6il66u7krhq","tag_id":"ck55dkxgp000aw6il36535j2g","_id":"ck55dkxmd0062w6iluph7yrnd"},{"post_id":"ck55dkxhp0019w6il66u7krhq","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxmg0064w6ills8wec0e"},{"post_id":"ck55dkxhp0019w6il66u7krhq","tag_id":"ck55dkxmb005uw6ilu12chbpn","_id":"ck55dkxmk0065w6ilgnucgs8y"},{"post_id":"ck55dkxhz001hw6il0idqe1k4","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxmn0067w6ili8worm5u"},{"post_id":"ck55dkxhz001hw6il0idqe1k4","tag_id":"ck55dkxmc005xw6ilrrr99uxs","_id":"ck55dkxmn0068w6ilgqi1r20a"},{"post_id":"ck55dkxhz001hw6il0idqe1k4","tag_id":"ck55dkxmc0060w6ill3n5kv1z","_id":"ck55dkxmo006aw6ilp1you424"},{"post_id":"ck55dkxhz001hw6il0idqe1k4","tag_id":"ck55dkxkf004tw6ilqzf7xd1s","_id":"ck55dkxmo006bw6il0edd544c"},{"post_id":"ck55dkxi1001lw6ilhsieb2h6","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxmr006ew6il9wiqe8yk"},{"post_id":"ck55dkxi1001lw6ilhsieb2h6","tag_id":"ck55dkxmc005xw6ilrrr99uxs","_id":"ck55dkxmr006fw6il2wli0ww4"},{"post_id":"ck55dkxi1001lw6ilhsieb2h6","tag_id":"ck55dkxmc0060w6ill3n5kv1z","_id":"ck55dkxmr006hw6ilvyt8dawu"},{"post_id":"ck55dkxi1001lw6ilhsieb2h6","tag_id":"ck55dkxkf004tw6ilqzf7xd1s","_id":"ck55dkxms006iw6ilyfik99k0"},{"post_id":"ck55dkxi6001sw6il66e5vu7g","tag_id":"ck55dkxmp006dw6iln8zxjha4","_id":"ck55dkxms006kw6ilvinodnv8"},{"post_id":"ck55dkxi6001sw6il66e5vu7g","tag_id":"ck55dkxmr006gw6ild87n15v3","_id":"ck55dkxms006lw6il6t0h0h2u"},{"post_id":"ck55dkxia001yw6ilfk1uxbru","tag_id":"ck55dkxms006jw6ilwtp88n1d","_id":"ck55dkxmz006qw6ilks50qdio"},{"post_id":"ck55dkxia001yw6ilfk1uxbru","tag_id":"ck55dkxmt006mw6ilxw3ky84o","_id":"ck55dkxmz006rw6ilwn8zfhw8"},{"post_id":"ck55dkxia001yw6ilfk1uxbru","tag_id":"ck55dkxmt006nw6ilylphxmeu","_id":"ck55dkxmz006tw6iltre9grrp"},{"post_id":"ck55dkxia001yw6ilfk1uxbru","tag_id":"ck55dkxmc005xw6ilrrr99uxs","_id":"ck55dkxn0006uw6ilsu8akbom"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxn1006xw6ilr0pro20o"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxn1006yw6iliysg9jcu"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","tag_id":"ck55dkxmy006pw6ilmd0dhmce","_id":"ck55dkxn20070w6ilerofmwpu"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","tag_id":"ck55dkxmz006sw6il3w3rhb2c","_id":"ck55dkxn20071w6il28mg08he"},{"post_id":"ck55dkxid0023w6ilh7gn46ni","tag_id":"ck55dkxn0006vw6ilxh09epsb","_id":"ck55dkxn30073w6ildieun6ml"},{"post_id":"ck55dkxie0025w6ilsafqkf8f","tag_id":"ck55dkxmc0060w6ill3n5kv1z","_id":"ck55dkxn40075w6il1j29dpjz"},{"post_id":"ck55dkxie0025w6ilsafqkf8f","tag_id":"ck55dkxn1006zw6il2yr1e53f","_id":"ck55dkxn40076w6ili1mx34w4"},{"post_id":"ck55dkxie0025w6ilsafqkf8f","tag_id":"ck55dkxmc005xw6ilrrr99uxs","_id":"ck55dkxn50078w6il0lf18o4j"},{"post_id":"ck55dkxik002hw6il3f0ar7gh","tag_id":"ck55dkxn30074w6ilzuccqimo","_id":"ck55dkxn7007bw6ilzfxrgsj1"},{"post_id":"ck55dkxik002hw6il3f0ar7gh","tag_id":"ck55dkxjs003zw6ilijr5y2yl","_id":"ck55dkxn7007cw6il1qa03k27"},{"post_id":"ck55dkxik002hw6il3f0ar7gh","tag_id":"ck55dkxjt0042w6ilmyf3gqzx","_id":"ck55dkxn8007ew6ilvdh1130p"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxna007iw6ilr7yjf241"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","tag_id":"ck55dkxju0043w6ili1zrq4lj","_id":"ck55dkxna007jw6ilnlgheh9o"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","tag_id":"ck55dkxn8007dw6ilf1buapb9","_id":"ck55dkxnb007lw6ila0ime53b"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","tag_id":"ck55dkxn8007fw6ilgjbhfvce","_id":"ck55dkxnb007mw6iltbthvmps"},{"post_id":"ck55dkxil002kw6ilboe3f3a0","tag_id":"ck55dkxn9007gw6ilexp6fuet","_id":"ck55dkxnc007ow6ilasb6vbdz"},{"post_id":"ck55dkxio002ow6il4294rrf5","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck55dkxne007rw6illfgxduhy"},{"post_id":"ck55dkxio002ow6il4294rrf5","tag_id":"ck55dkxju0043w6ili1zrq4lj","_id":"ck55dkxnf007sw6il6vite4oe"},{"post_id":"ck55dkxio002ow6il4294rrf5","tag_id":"ck55dkxn8007dw6ilf1buapb9","_id":"ck55dkxnf007uw6ilb7j8pqu3"},{"post_id":"ck55dkxio002ow6il4294rrf5","tag_id":"ck55dkxnb007nw6ilrh96n72y","_id":"ck55dkxnf007vw6ilho11q73j"},{"post_id":"ck55dkxio002ow6il4294rrf5","tag_id":"ck55dkxnc007pw6ilwmcxtixf","_id":"ck55dkxng007xw6ilbavlx56a"},{"post_id":"ck55dkxiq002rw6il2249u478","tag_id":"ck55dkxhm0016w6il5lwaaok1","_id":"ck55dkxng007yw6ile89yqu4n"},{"post_id":"ck55dkxiq002rw6il2249u478","tag_id":"ck55dkxms006jw6ilwtp88n1d","_id":"ck55dkxnh0080w6ilvh1zdpoe"},{"post_id":"ck55dkxiq002rw6il2249u478","tag_id":"ck55dkxnf007tw6iltyqolnau","_id":"ck55dkxnh0081w6ily80y6lrx"},{"post_id":"ck55dkxiu002vw6ildxtfct8b","tag_id":"ck55dkxnf007ww6il3shs4myd","_id":"ck55dkxnj0084w6ilb2fqhef2"},{"post_id":"ck55dkxiu002vw6ildxtfct8b","tag_id":"ck55dkxng007zw6ilpbvp3etd","_id":"ck55dkxnj0085w6ilxjxmgoy7"},{"post_id":"ck55dkxiu002vw6ildxtfct8b","tag_id":"ck55dkxnh0082w6il48jerx4q","_id":"ck55dkxnj0087w6ilnardyjsl"},{"post_id":"ck55dkxof008cw6ileieyb2oi","tag_id":"ck55dkxok008ew6ilw2g7j9lt","_id":"ck55dkxp8008kw6il2thgkk7q"},{"post_id":"ck55dkxof008cw6ileieyb2oi","tag_id":"ck55dkxom008hw6ilm1jhjgig","_id":"ck55dkxp8008lw6il4zqjud9w"},{"post_id":"ck55dkxof008cw6ileieyb2oi","tag_id":"ck55dkxon008iw6ilbmpp1t3w","_id":"ck55dkxp9008nw6ilq9g33afz"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","tag_id":"ck55dkxjt0042w6ilmyf3gqzx","_id":"ck55dkxpc008pw6ilcian4491"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","tag_id":"ck55dkxoo008jw6il7n4wdhjm","_id":"ck55dkxpc008qw6ilqkhlv6jz"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","tag_id":"ck55dkxp9008mw6ildh6hzqg7","_id":"ck55dkxpc008rw6ilvazfssgi"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","tag_id":"ck55dkxpa008ow6il9vibcs88","_id":"ck55dkxpc008sw6il0oyjhrsz"},{"post_id":"ck55dkxoh008dw6ilfvebelfj","tag_id":"ck55dkxht001bw6ilhdgnytg9","_id":"ck55dkxpc008tw6ilf25m1328"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck55dkxkf004tw6ilqzf7xd1s","_id":"ck6f5jmuk000awuildo049893"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck55dkxl8004ww6ily6uno72t","_id":"ck6f5jmuk000bwuilv3m3hwko"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck55dkxl9004xw6il1wifmgun","_id":"ck6f5jmul000dwuilgwoazboa"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck55dkxk8004nw6ilts6cq9p1","_id":"ck6f5jmum000ewuilyt9j6qad"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck6f5jmua0003wuil8p5wb9lb","_id":"ck6f5jmun000gwuil0s9ktjw2"},{"post_id":"ck6f5jmtw0000wuilne43fgyp","tag_id":"ck6f5jmug0006wuilrpjp7hhn","_id":"ck6f5jmun000hwuilb45y6szv"},{"post_id":"ck6f5jmu00001wuil2gl80801","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck6f5jmun000iwuil51wa7q00"},{"post_id":"ck6f5jmu00001wuil2gl80801","tag_id":"ck6f5jmuh0009wuilj20a4fai","_id":"ck6f5jmuo000jwuilbfkl8tzf"},{"post_id":"ck6f5jmu00001wuil2gl80801","tag_id":"ck6f5jmul000cwuilzns0t8zo","_id":"ck6f5jmuo000kwuils4xdu3f9"},{"post_id":"ck6f5jmud0004wuilxer17jcl","tag_id":"ck55dkxh2000ew6ilzxohvj0i","_id":"ck6f5jmuo000lwuiloh4wfjl2"},{"post_id":"ck6f5jmud0004wuilxer17jcl","tag_id":"ck55dkxjt0042w6ilmyf3gqzx","_id":"ck6f5jmuo000mwuildrwqb4hj"},{"post_id":"ck6f5jmud0004wuilxer17jcl","tag_id":"ck6f5jmum000fwuilaj3evkmj","_id":"ck6f5jmuo000nwuiltgdzy7oy"}],"Tag":[{"name":"可以公开的情报","_id":"ck55dkxgh0005w6ilpy5kw2yy"},{"name":"开发","_id":"ck55dkxgp000aw6il36535j2g"},{"name":"前端","_id":"ck55dkxh2000ew6ilzxohvj0i"},{"name":"android","_id":"ck55dkxh7000jw6ilaipdrze9"},{"name":"上手指南","_id":"ck55dkxhh000ww6ilbribas8b"},{"name":"MAC","_id":"ck55dkxhm0016w6il5lwaaok1"},{"name":"经验","_id":"ck55dkxht001bw6ilhdgnytg9"},{"name":"RTAC86U","_id":"ck55dkxi1001jw6il59wyk2ad"},{"name":"乳酸菌","_id":"ck55dkxi5001rw6ilyeotkixi"},{"name":"gfw","_id":"ck55dkxib001zw6ilz6br0jjv"},{"name":"插件","_id":"ck55dkxif0027w6il4wncbyfb"},{"name":"line-height","_id":"ck55dkxiy0030w6ilb1ooip7j"},{"name":"font-size","_id":"ck55dkxj10036w6il3vhexegc"},{"name":"axios","_id":"ck55dkxj8003iw6il19pr2q7g"},{"name":"promise","_id":"ck55dkxj9003lw6il1pn9flpr"},{"name":"错误处理","_id":"ck55dkxj9003mw6ile9hakldy"},{"name":"宽高比","_id":"ck55dkxjq003ww6ilmzcjmgn5"},{"name":"html5","_id":"ck55dkxjs003zw6ilijr5y2yl"},{"name":"vue","_id":"ck55dkxjt0042w6ilmyf3gqzx"},{"name":"css","_id":"ck55dkxju0043w6ili1zrq4lj"},{"name":"js","_id":"ck55dkxk00046w6il79ecoow8"},{"name":"react","_id":"ck55dkxk10048w6ilu8zklvm8"},{"name":"react-route","_id":"ck55dkxk20049w6ilnesritjd"},{"name":"prompt","_id":"ck55dkxk4004aw6ild28bjc6u"},{"name":"退出校验","_id":"ck55dkxk4004bw6ily9vbqkff"},{"name":"umi.js","_id":"ck55dkxk5004cw6ilno528dmi"},{"name":"面包屑","_id":"ck55dkxk6004fw6ilq5a9mz8j"},{"name":"路由","_id":"ck55dkxk7004iw6ilayt6zryr"},{"name":"约定式路由","_id":"ck55dkxk7004lw6ilazk439lk"},{"name":"vscode","_id":"ck55dkxk8004nw6ilts6cq9p1"},{"name":"chrome","_id":"ck55dkxkd004qw6ilrrxzwv7p"},{"name":"笔记","_id":"ck55dkxkf004tw6ilqzf7xd1s"},{"name":"学习","_id":"ck55dkxl8004ww6ily6uno72t"},{"name":"记录","_id":"ck55dkxl9004xw6il1wifmgun"},{"name":"rem","_id":"ck55dkxlr005aw6ilte6rxl6m"},{"name":"ios","_id":"ck55dkxlt005gw6ilb3mzahc8"},{"name":"ecmascript","_id":"ck55dkxm6005mw6ilttoi1f2k"},{"name":"数组","_id":"ck55dkxm7005pw6ilxfm9kyny"},{"name":"技巧","_id":"ck55dkxm9005sw6il9d7tqjqg"},{"name":"反思","_id":"ck55dkxmb005uw6ilu12chbpn"},{"name":"教程","_id":"ck55dkxmc005xw6ilrrr99uxs"},{"name":"javascript","_id":"ck55dkxmc0060w6ill3n5kv1z"},{"name":"日常","_id":"ck55dkxmp006dw6iln8zxjha4"},{"name":"祉华","_id":"ck55dkxmr006gw6ild87n15v3"},{"name":"OSX","_id":"ck55dkxms006jw6ilwtp88n1d"},{"name":"mojave","_id":"ck55dkxmt006mw6ilxw3ky84o"},{"name":"动态壁纸","_id":"ck55dkxmt006nw6ilylphxmeu"},{"name":"超过x行","_id":"ck55dkxmy006pw6ilmd0dhmce"},{"name":"省略号","_id":"ck55dkxmz006sw6il3w3rhb2c"},{"name":"overflow","_id":"ck55dkxn0006vw6ilxh09epsb"},{"name":"pdf","_id":"ck55dkxn1006zw6il2yr1e53f"},{"name":"扫码枪","_id":"ck55dkxn30074w6ilzuccqimo"},{"name":"表格","_id":"ck55dkxn8007dw6ilf1buapb9"},{"name":"吸顶","_id":"ck55dkxn8007fw6ilgjbhfvce"},{"name":"sticky","_id":"ck55dkxn9007gw6ilexp6fuet"},{"name":"单元格","_id":"ck55dkxnb007nw6ilrh96n72y"},{"name":"补全","_id":"ck55dkxnc007pw6ilwmcxtixf"},{"name":"软件推荐","_id":"ck55dkxnf007tw6iltyqolnau"},{"name":"镜音","_id":"ck55dkxnf007ww6il3shs4myd"},{"name":"cos","_id":"ck55dkxng007zw6ilpbvp3etd"},{"name":"镜音len","_id":"ck55dkxnh0082w6il48jerx4q"},{"name":"数据库","_id":"ck55dkxok008ew6ilw2g7j9lt"},{"name":"搜索引擎","_id":"ck55dkxom008hw6ilm1jhjgig"},{"name":"postgresql","_id":"ck55dkxon008iw6ilbmpp1t3w"},{"name":"ng","_id":"ck55dkxoo008jw6il7n4wdhjm"},{"name":"迁移","_id":"ck55dkxp9008mw6ildh6hzqg7"},{"name":"angularJs","_id":"ck55dkxpa008ow6il9vibcs88"},{"name":"taro","_id":"ck6f5jmua0003wuil8p5wb9lb"},{"name":"小程序","_id":"ck6f5jmug0006wuilrpjp7hhn"},{"name":"github actions","_id":"ck6f5jmuh0009wuilj20a4fai"},{"name":"vuepress","_id":"ck6f5jmul000cwuilzns0t8zo"},{"name":"typescript","_id":"ck6f5jmum000fwuilaj3evkmj"}]}}g"},{"name":"反思","_id":"ck55dkxmb005uw6ilu12chbpn"},{"name":"教程","_id":"ck55dkxmc005xw6ilrrr99uxs"},{"name":"javascript","_id":"ck55dkxmc0060w6ill3n5kv1z"},{"name":"日常","_id":"ck55dkxmp006dw6iln8zxjha4"},{"name":"祉华","_id":"ck55dkxmr006gw6ild87n15v3"},{"name":"OSX","_id":"ck55dkxms006jw6ilwtp88n1d"},{"name":"mojave","_id":"ck55dkxmt006mw6ilxw3ky84o"},{"name":"动态壁纸","_id":"ck55dkxmt006nw6ilylphxmeu"},{"name":"超过x行","_id":"ck55dkxmy006pw6ilmd0dhmce"},{"name":"省略号","_id":"ck55dkxmz006sw6il3w3rhb2c"},{"name":"overflow","_id":"ck55dkxn0006vw6ilxh09epsb"},{"name":"pdf","_id":"ck55dkxn1006zw6il2yr1e53f"},{"name":"扫码枪","_id":"ck55dkxn30074w6ilzuccqimo"},{"name":"表格","_id":"ck55dkxn8007dw6ilf1buapb9"},{"name":"吸顶","_id":"ck55dkxn8007fw6ilgjbhfvce"},{"name":"sticky","_id":"ck55dkxn9007gw6ilexp6fuet"},{"name":"单元格","_id":"ck55dkxnb007nw6ilrh96n72y"},{"name":"补全","_id":"ck55dkxnc007pw6ilwmcxtixf"},{"name":"软件推荐","_id":"ck55dkxnf007tw6iltyqolnau"},{"name":"镜音","_id":"ck55dkxnf007ww6il3shs4myd"},{"name":"cos","_id":"ck55dkxng007zw6ilpbvp3etd"},{"name":"镜音len","_id":"ck55dkxnh0082w6il48jerx4q"},{"name":"数据库","_id":"ck55dkxok008ew6ilw2g7j9lt"},{"name":"搜索引擎","_id":"ck55dkxom008hw6ilm1jhjgig"},{"name":"postgresql","_id":"ck55dkxon008iw6ilbmpp1t3w"},{"name":"ng","_id":"ck55dkxoo008jw6il7n4wdhjm"},{"name":"迁移","_id":"ck55dkxp9008mw6ildh6hzqg7"},{"name":"angularJs","_id":"ck55dkxpa008ow6il9vibcs88"},{"name":"taro","_id":"ck6f5jmto0003wtilhusyc2yd"},{"name":"小程序","_id":"ck6f5jmts0006wtilvh4h0c9m"},{"name":"github actions","_id":"ck6f5jmtt0009wtilw8elax5j"},{"name":"vuepress","_id":"ck6f5jmtw000cwtilce3233an"},{"name":"typescript","_id":"ck6f5jmty000fwtilwf41gqhq"}]}}